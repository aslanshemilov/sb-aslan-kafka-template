{"timestamp":"2021-07-23T05:46:39.888Z","appMessage":"Consumer exception","class":"org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"ERROR","exception":"java.lang.IllegalStateException: This error handler cannot process 'SerializationException's directly; please consider configuring an 'ErrorHandlingDeserializer' in the value and/or key deserializer\r\n\tat org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:194)\r\n\tat org.springframework.kafka.listener.SeekToCurrentErrorHandler.handle(SeekToCurrentErrorHandler.java:112)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.handleConsumerException(KafkaMessageListenerContainer.java:1599)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1210)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Error deserializing key/value for partition customer-topic-2-0 at offset 0. If needed, please seek past the record to continue consumption.\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Can't deserialize data [[104, 105, 32, 116, 104, 101, 114, 101]] from topic [customer-topic-2]\r\nCaused by: com.fasterxml.jackson.core.JsonParseException: Unrecognized token 'hi': was expecting (JSON String, Number, Array, Object or token 'null', 'true' or 'false')\n at [Source: (byte[])\"hi there\"; line: 1, column: 4]\r\n\tat com.fasterxml.jackson.core.JsonParser._constructError(JsonParser.java:2337)\r\n\tat com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(ParserMinimalBase.java:720)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportInvalidToken(UTF8StreamJsonParser.java:3593)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleUnexpectedValue(UTF8StreamJsonParser.java:2688)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._nextTokenNotInObject(UTF8StreamJsonParser.java:870)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextToken(UTF8StreamJsonParser.java:762)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._initForReading(ObjectReader.java:355)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._bindAndClose(ObjectReader.java:2023)\r\n\tat com.fasterxml.jackson.databind.ObjectReader.readValue(ObjectReader.java:1528)\r\n\tat org.springframework.kafka.support.serializer.JsonDeserializer.deserialize(JsonDeserializer.java:534)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.parseRecord(Fetcher.java:1387)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.access$3400(Fetcher.java:133)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.fetchRecords(Fetcher.java:1618)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.access$1700(Fetcher.java:1454)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchRecords(Fetcher.java:687)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchedRecords(Fetcher.java:638)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.pollForFetches(KafkaConsumer.java:1272)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1233)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1206)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doPoll(KafkaMessageListenerContainer.java:1410)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1249)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1161)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:46:39.896Z","appMessage":"Consumer exception","class":"org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"ERROR","exception":"java.lang.IllegalStateException: This error handler cannot process 'SerializationException's directly; please consider configuring an 'ErrorHandlingDeserializer' in the value and/or key deserializer\r\n\tat org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:194)\r\n\tat org.springframework.kafka.listener.SeekToCurrentErrorHandler.handle(SeekToCurrentErrorHandler.java:112)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.handleConsumerException(KafkaMessageListenerContainer.java:1599)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1210)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Error deserializing key/value for partition customer-topic-2-0 at offset 0. If needed, please seek past the record to continue consumption.\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Can't deserialize data [[104, 105, 32, 116, 104, 101, 114, 101]] from topic [customer-topic-2]\r\nCaused by: com.fasterxml.jackson.core.JsonParseException: Unrecognized token 'hi': was expecting (JSON String, Number, Array, Object or token 'null', 'true' or 'false')\n at [Source: (byte[])\"hi there\"; line: 1, column: 4]\r\n\tat com.fasterxml.jackson.core.JsonParser._constructError(JsonParser.java:2337)\r\n\tat com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(ParserMinimalBase.java:720)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportInvalidToken(UTF8StreamJsonParser.java:3593)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleUnexpectedValue(UTF8StreamJsonParser.java:2688)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._nextTokenNotInObject(UTF8StreamJsonParser.java:870)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextToken(UTF8StreamJsonParser.java:762)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._initForReading(ObjectReader.java:355)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._bindAndClose(ObjectReader.java:2023)\r\n\tat com.fasterxml.jackson.databind.ObjectReader.readValue(ObjectReader.java:1528)\r\n\tat org.springframework.kafka.support.serializer.JsonDeserializer.deserialize(JsonDeserializer.java:534)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.parseRecord(Fetcher.java:1387)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.access$3400(Fetcher.java:133)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.fetchRecords(Fetcher.java:1618)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.access$1700(Fetcher.java:1454)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchRecords(Fetcher.java:687)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchedRecords(Fetcher.java:638)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.pollForFetches(KafkaConsumer.java:1272)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1233)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1206)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doPoll(KafkaMessageListenerContainer.java:1410)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1249)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1161)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:46:39.901Z","appMessage":"Consumer exception","class":"org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"ERROR","exception":"java.lang.IllegalStateException: This error handler cannot process 'SerializationException's directly; please consider configuring an 'ErrorHandlingDeserializer' in the value and/or key deserializer\r\n\tat org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:194)\r\n\tat org.springframework.kafka.listener.SeekToCurrentErrorHandler.handle(SeekToCurrentErrorHandler.java:112)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.handleConsumerException(KafkaMessageListenerContainer.java:1599)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1210)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Error deserializing key/value for partition customer-topic-2-0 at offset 0. If needed, please seek past the record to continue consumption.\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Can't deserialize data [[104, 105, 32, 116, 104, 101, 114, 101]] from topic [customer-topic-2]\r\nCaused by: com.fasterxml.jackson.core.JsonParseException: Unrecognized token 'hi': was expecting (JSON String, Number, Array, Object or token 'null', 'true' or 'false')\n at [Source: (byte[])\"hi there\"; line: 1, column: 4]\r\n\tat com.fasterxml.jackson.core.JsonParser._constructError(JsonParser.java:2337)\r\n\tat com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(ParserMinimalBase.java:720)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportInvalidToken(UTF8StreamJsonParser.java:3593)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleUnexpectedValue(UTF8StreamJsonParser.java:2688)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._nextTokenNotInObject(UTF8StreamJsonParser.java:870)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextToken(UTF8StreamJsonParser.java:762)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._initForReading(ObjectReader.java:355)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._bindAndClose(ObjectReader.java:2023)\r\n\tat com.fasterxml.jackson.databind.ObjectReader.readValue(ObjectReader.java:1528)\r\n\tat org.springframework.kafka.support.serializer.JsonDeserializer.deserialize(JsonDeserializer.java:534)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.parseRecord(Fetcher.java:1387)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.access$3400(Fetcher.java:133)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.fetchRecords(Fetcher.java:1618)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.access$1700(Fetcher.java:1454)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchRecords(Fetcher.java:687)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchedRecords(Fetcher.java:638)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.pollForFetches(KafkaConsumer.java:1272)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1233)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1206)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doPoll(KafkaMessageListenerContainer.java:1410)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1249)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1161)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:46:39.905Z","appMessage":"Consumer exception","class":"org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"ERROR","exception":"java.lang.IllegalStateException: This error handler cannot process 'SerializationException's directly; please consider configuring an 'ErrorHandlingDeserializer' in the value and/or key deserializer\r\n\tat org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:194)\r\n\tat org.springframework.kafka.listener.SeekToCurrentErrorHandler.handle(SeekToCurrentErrorHandler.java:112)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.handleConsumerException(KafkaMessageListenerContainer.java:1599)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1210)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Error deserializing key/value for partition customer-topic-2-0 at offset 0. If needed, please seek past the record to continue consumption.\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Can't deserialize data [[104, 105, 32, 116, 104, 101, 114, 101]] from topic [customer-topic-2]\r\nCaused by: com.fasterxml.jackson.core.JsonParseException: Unrecognized token 'hi': was expecting (JSON String, Number, Array, Object or token 'null', 'true' or 'false')\n at [Source: (byte[])\"hi there\"; line: 1, column: 4]\r\n\tat com.fasterxml.jackson.core.JsonParser._constructError(JsonParser.java:2337)\r\n\tat com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(ParserMinimalBase.java:720)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportInvalidToken(UTF8StreamJsonParser.java:3593)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleUnexpectedValue(UTF8StreamJsonParser.java:2688)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._nextTokenNotInObject(UTF8StreamJsonParser.java:870)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextToken(UTF8StreamJsonParser.java:762)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._initForReading(ObjectReader.java:355)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._bindAndClose(ObjectReader.java:2023)\r\n\tat com.fasterxml.jackson.databind.ObjectReader.readValue(ObjectReader.java:1528)\r\n\tat org.springframework.kafka.support.serializer.JsonDeserializer.deserialize(JsonDeserializer.java:534)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.parseRecord(Fetcher.java:1387)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.access$3400(Fetcher.java:133)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.fetchRecords(Fetcher.java:1618)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.access$1700(Fetcher.java:1454)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchRecords(Fetcher.java:687)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchedRecords(Fetcher.java:638)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.pollForFetches(KafkaConsumer.java:1272)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1233)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1206)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doPoll(KafkaMessageListenerContainer.java:1410)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1249)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1161)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:46:39.909Z","appMessage":"Consumer exception","class":"org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"ERROR","exception":"java.lang.IllegalStateException: This error handler cannot process 'SerializationException's directly; please consider configuring an 'ErrorHandlingDeserializer' in the value and/or key deserializer\r\n\tat org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:194)\r\n\tat org.springframework.kafka.listener.SeekToCurrentErrorHandler.handle(SeekToCurrentErrorHandler.java:112)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.handleConsumerException(KafkaMessageListenerContainer.java:1599)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1210)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Error deserializing key/value for partition customer-topic-2-0 at offset 0. If needed, please seek past the record to continue consumption.\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Can't deserialize data [[104, 105, 32, 116, 104, 101, 114, 101]] from topic [customer-topic-2]\r\nCaused by: com.fasterxml.jackson.core.JsonParseException: Unrecognized token 'hi': was expecting (JSON String, Number, Array, Object or token 'null', 'true' or 'false')\n at [Source: (byte[])\"hi there\"; line: 1, column: 4]\r\n\tat com.fasterxml.jackson.core.JsonParser._constructError(JsonParser.java:2337)\r\n\tat com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(ParserMinimalBase.java:720)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportInvalidToken(UTF8StreamJsonParser.java:3593)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleUnexpectedValue(UTF8StreamJsonParser.java:2688)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._nextTokenNotInObject(UTF8StreamJsonParser.java:870)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextToken(UTF8StreamJsonParser.java:762)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._initForReading(ObjectReader.java:355)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._bindAndClose(ObjectReader.java:2023)\r\n\tat com.fasterxml.jackson.databind.ObjectReader.readValue(ObjectReader.java:1528)\r\n\tat org.springframework.kafka.support.serializer.JsonDeserializer.deserialize(JsonDeserializer.java:534)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.parseRecord(Fetcher.java:1387)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.access$3400(Fetcher.java:133)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.fetchRecords(Fetcher.java:1618)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.access$1700(Fetcher.java:1454)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchRecords(Fetcher.java:687)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchedRecords(Fetcher.java:638)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.pollForFetches(KafkaConsumer.java:1272)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1233)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1206)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doPoll(KafkaMessageListenerContainer.java:1410)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1249)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1161)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:46:39.914Z","appMessage":"Consumer exception","class":"org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"ERROR","exception":"java.lang.IllegalStateException: This error handler cannot process 'SerializationException's directly; please consider configuring an 'ErrorHandlingDeserializer' in the value and/or key deserializer\r\n\tat org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:194)\r\n\tat org.springframework.kafka.listener.SeekToCurrentErrorHandler.handle(SeekToCurrentErrorHandler.java:112)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.handleConsumerException(KafkaMessageListenerContainer.java:1599)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1210)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Error deserializing key/value for partition customer-topic-2-0 at offset 0. If needed, please seek past the record to continue consumption.\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Can't deserialize data [[104, 105, 32, 116, 104, 101, 114, 101]] from topic [customer-topic-2]\r\nCaused by: com.fasterxml.jackson.core.JsonParseException: Unrecognized token 'hi': was expecting (JSON String, Number, Array, Object or token 'null', 'true' or 'false')\n at [Source: (byte[])\"hi there\"; line: 1, column: 4]\r\n\tat com.fasterxml.jackson.core.JsonParser._constructError(JsonParser.java:2337)\r\n\tat com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(ParserMinimalBase.java:720)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportInvalidToken(UTF8StreamJsonParser.java:3593)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleUnexpectedValue(UTF8StreamJsonParser.java:2688)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._nextTokenNotInObject(UTF8StreamJsonParser.java:870)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextToken(UTF8StreamJsonParser.java:762)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._initForReading(ObjectReader.java:355)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._bindAndClose(ObjectReader.java:2023)\r\n\tat com.fasterxml.jackson.databind.ObjectReader.readValue(ObjectReader.java:1528)\r\n\tat org.springframework.kafka.support.serializer.JsonDeserializer.deserialize(JsonDeserializer.java:534)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.parseRecord(Fetcher.java:1387)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.access$3400(Fetcher.java:133)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.fetchRecords(Fetcher.java:1618)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.access$1700(Fetcher.java:1454)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchRecords(Fetcher.java:687)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchedRecords(Fetcher.java:638)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.pollForFetches(KafkaConsumer.java:1272)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1233)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1206)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doPoll(KafkaMessageListenerContainer.java:1410)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1249)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1161)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:46:39.918Z","appMessage":"Consumer exception","class":"org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"ERROR","exception":"java.lang.IllegalStateException: This error handler cannot process 'SerializationException's directly; please consider configuring an 'ErrorHandlingDeserializer' in the value and/or key deserializer\r\n\tat org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:194)\r\n\tat org.springframework.kafka.listener.SeekToCurrentErrorHandler.handle(SeekToCurrentErrorHandler.java:112)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.handleConsumerException(KafkaMessageListenerContainer.java:1599)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1210)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Error deserializing key/value for partition customer-topic-2-0 at offset 0. If needed, please seek past the record to continue consumption.\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Can't deserialize data [[104, 105, 32, 116, 104, 101, 114, 101]] from topic [customer-topic-2]\r\nCaused by: com.fasterxml.jackson.core.JsonParseException: Unrecognized token 'hi': was expecting (JSON String, Number, Array, Object or token 'null', 'true' or 'false')\n at [Source: (byte[])\"hi there\"; line: 1, column: 4]\r\n\tat com.fasterxml.jackson.core.JsonParser._constructError(JsonParser.java:2337)\r\n\tat com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(ParserMinimalBase.java:720)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportInvalidToken(UTF8StreamJsonParser.java:3593)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleUnexpectedValue(UTF8StreamJsonParser.java:2688)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._nextTokenNotInObject(UTF8StreamJsonParser.java:870)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextToken(UTF8StreamJsonParser.java:762)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._initForReading(ObjectReader.java:355)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._bindAndClose(ObjectReader.java:2023)\r\n\tat com.fasterxml.jackson.databind.ObjectReader.readValue(ObjectReader.java:1528)\r\n\tat org.springframework.kafka.support.serializer.JsonDeserializer.deserialize(JsonDeserializer.java:534)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.parseRecord(Fetcher.java:1387)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.access$3400(Fetcher.java:133)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.fetchRecords(Fetcher.java:1618)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.access$1700(Fetcher.java:1454)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchRecords(Fetcher.java:687)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchedRecords(Fetcher.java:638)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.pollForFetches(KafkaConsumer.java:1272)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1233)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1206)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doPoll(KafkaMessageListenerContainer.java:1410)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1249)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1161)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:46:39.922Z","appMessage":"Consumer exception","class":"org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"ERROR","exception":"java.lang.IllegalStateException: This error handler cannot process 'SerializationException's directly; please consider configuring an 'ErrorHandlingDeserializer' in the value and/or key deserializer\r\n\tat org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:194)\r\n\tat org.springframework.kafka.listener.SeekToCurrentErrorHandler.handle(SeekToCurrentErrorHandler.java:112)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.handleConsumerException(KafkaMessageListenerContainer.java:1599)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1210)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Error deserializing key/value for partition customer-topic-2-0 at offset 0. If needed, please seek past the record to continue consumption.\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Can't deserialize data [[104, 105, 32, 116, 104, 101, 114, 101]] from topic [customer-topic-2]\r\nCaused by: com.fasterxml.jackson.core.JsonParseException: Unrecognized token 'hi': was expecting (JSON String, Number, Array, Object or token 'null', 'true' or 'false')\n at [Source: (byte[])\"hi there\"; line: 1, column: 4]\r\n\tat com.fasterxml.jackson.core.JsonParser._constructError(JsonParser.java:2337)\r\n\tat com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(ParserMinimalBase.java:720)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportInvalidToken(UTF8StreamJsonParser.java:3593)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleUnexpectedValue(UTF8StreamJsonParser.java:2688)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._nextTokenNotInObject(UTF8StreamJsonParser.java:870)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextToken(UTF8StreamJsonParser.java:762)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._initForReading(ObjectReader.java:355)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._bindAndClose(ObjectReader.java:2023)\r\n\tat com.fasterxml.jackson.databind.ObjectReader.readValue(ObjectReader.java:1528)\r\n\tat org.springframework.kafka.support.serializer.JsonDeserializer.deserialize(JsonDeserializer.java:534)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.parseRecord(Fetcher.java:1387)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.access$3400(Fetcher.java:133)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.fetchRecords(Fetcher.java:1618)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.access$1700(Fetcher.java:1454)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchRecords(Fetcher.java:687)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchedRecords(Fetcher.java:638)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.pollForFetches(KafkaConsumer.java:1272)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1233)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1206)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doPoll(KafkaMessageListenerContainer.java:1410)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1249)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1161)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:46:39.927Z","appMessage":"Consumer exception","class":"org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"ERROR","exception":"java.lang.IllegalStateException: This error handler cannot process 'SerializationException's directly; please consider configuring an 'ErrorHandlingDeserializer' in the value and/or key deserializer\r\n\tat org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:194)\r\n\tat org.springframework.kafka.listener.SeekToCurrentErrorHandler.handle(SeekToCurrentErrorHandler.java:112)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.handleConsumerException(KafkaMessageListenerContainer.java:1599)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1210)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Error deserializing key/value for partition customer-topic-2-0 at offset 0. If needed, please seek past the record to continue consumption.\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Can't deserialize data [[104, 105, 32, 116, 104, 101, 114, 101]] from topic [customer-topic-2]\r\nCaused by: com.fasterxml.jackson.core.JsonParseException: Unrecognized token 'hi': was expecting (JSON String, Number, Array, Object or token 'null', 'true' or 'false')\n at [Source: (byte[])\"hi there\"; line: 1, column: 4]\r\n\tat com.fasterxml.jackson.core.JsonParser._constructError(JsonParser.java:2337)\r\n\tat com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(ParserMinimalBase.java:720)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportInvalidToken(UTF8StreamJsonParser.java:3593)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleUnexpectedValue(UTF8StreamJsonParser.java:2688)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._nextTokenNotInObject(UTF8StreamJsonParser.java:870)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextToken(UTF8StreamJsonParser.java:762)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._initForReading(ObjectReader.java:355)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._bindAndClose(ObjectReader.java:2023)\r\n\tat com.fasterxml.jackson.databind.ObjectReader.readValue(ObjectReader.java:1528)\r\n\tat org.springframework.kafka.support.serializer.JsonDeserializer.deserialize(JsonDeserializer.java:534)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.parseRecord(Fetcher.java:1387)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.access$3400(Fetcher.java:133)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.fetchRecords(Fetcher.java:1618)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.access$1700(Fetcher.java:1454)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchRecords(Fetcher.java:687)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchedRecords(Fetcher.java:638)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.pollForFetches(KafkaConsumer.java:1272)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1233)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1206)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doPoll(KafkaMessageListenerContainer.java:1410)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1249)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1161)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:46:39.931Z","appMessage":"Consumer exception","class":"org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"ERROR","exception":"java.lang.IllegalStateException: This error handler cannot process 'SerializationException's directly; please consider configuring an 'ErrorHandlingDeserializer' in the value and/or key deserializer\r\n\tat org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:194)\r\n\tat org.springframework.kafka.listener.SeekToCurrentErrorHandler.handle(SeekToCurrentErrorHandler.java:112)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.handleConsumerException(KafkaMessageListenerContainer.java:1599)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1210)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Error deserializing key/value for partition customer-topic-2-0 at offset 0. If needed, please seek past the record to continue consumption.\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Can't deserialize data [[104, 105, 32, 116, 104, 101, 114, 101]] from topic [customer-topic-2]\r\nCaused by: com.fasterxml.jackson.core.JsonParseException: Unrecognized token 'hi': was expecting (JSON String, Number, Array, Object or token 'null', 'true' or 'false')\n at [Source: (byte[])\"hi there\"; line: 1, column: 4]\r\n\tat com.fasterxml.jackson.core.JsonParser._constructError(JsonParser.java:2337)\r\n\tat com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(ParserMinimalBase.java:720)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportInvalidToken(UTF8StreamJsonParser.java:3593)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleUnexpectedValue(UTF8StreamJsonParser.java:2688)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._nextTokenNotInObject(UTF8StreamJsonParser.java:870)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextToken(UTF8StreamJsonParser.java:762)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._initForReading(ObjectReader.java:355)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._bindAndClose(ObjectReader.java:2023)\r\n\tat com.fasterxml.jackson.databind.ObjectReader.readValue(ObjectReader.java:1528)\r\n\tat org.springframework.kafka.support.serializer.JsonDeserializer.deserialize(JsonDeserializer.java:534)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.parseRecord(Fetcher.java:1387)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.access$3400(Fetcher.java:133)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.fetchRecords(Fetcher.java:1618)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.access$1700(Fetcher.java:1454)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchRecords(Fetcher.java:687)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchedRecords(Fetcher.java:638)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.pollForFetches(KafkaConsumer.java:1272)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1233)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1206)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doPoll(KafkaMessageListenerContainer.java:1410)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1249)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1161)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:46:39.936Z","appMessage":"Consumer exception","class":"org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"ERROR","exception":"java.lang.IllegalStateException: This error handler cannot process 'SerializationException's directly; please consider configuring an 'ErrorHandlingDeserializer' in the value and/or key deserializer\r\n\tat org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:194)\r\n\tat org.springframework.kafka.listener.SeekToCurrentErrorHandler.handle(SeekToCurrentErrorHandler.java:112)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.handleConsumerException(KafkaMessageListenerContainer.java:1599)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1210)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Error deserializing key/value for partition customer-topic-2-0 at offset 0. If needed, please seek past the record to continue consumption.\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Can't deserialize data [[104, 105, 32, 116, 104, 101, 114, 101]] from topic [customer-topic-2]\r\nCaused by: com.fasterxml.jackson.core.JsonParseException: Unrecognized token 'hi': was expecting (JSON String, Number, Array, Object or token 'null', 'true' or 'false')\n at [Source: (byte[])\"hi there\"; line: 1, column: 4]\r\n\tat com.fasterxml.jackson.core.JsonParser._constructError(JsonParser.java:2337)\r\n\tat com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(ParserMinimalBase.java:720)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportInvalidToken(UTF8StreamJsonParser.java:3593)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleUnexpectedValue(UTF8StreamJsonParser.java:2688)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._nextTokenNotInObject(UTF8StreamJsonParser.java:870)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextToken(UTF8StreamJsonParser.java:762)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._initForReading(ObjectReader.java:355)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._bindAndClose(ObjectReader.java:2023)\r\n\tat com.fasterxml.jackson.databind.ObjectReader.readValue(ObjectReader.java:1528)\r\n\tat org.springframework.kafka.support.serializer.JsonDeserializer.deserialize(JsonDeserializer.java:534)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.parseRecord(Fetcher.java:1387)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.access$3400(Fetcher.java:133)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.fetchRecords(Fetcher.java:1618)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.access$1700(Fetcher.java:1454)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchRecords(Fetcher.java:687)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchedRecords(Fetcher.java:638)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.pollForFetches(KafkaConsumer.java:1272)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1233)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1206)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doPoll(KafkaMessageListenerContainer.java:1410)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1249)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1161)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:46:39.940Z","appMessage":"Consumer exception","class":"org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"ERROR","exception":"java.lang.IllegalStateException: This error handler cannot process 'SerializationException's directly; please consider configuring an 'ErrorHandlingDeserializer' in the value and/or key deserializer\r\n\tat org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:194)\r\n\tat org.springframework.kafka.listener.SeekToCurrentErrorHandler.handle(SeekToCurrentErrorHandler.java:112)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.handleConsumerException(KafkaMessageListenerContainer.java:1599)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1210)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Error deserializing key/value for partition customer-topic-2-0 at offset 0. If needed, please seek past the record to continue consumption.\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Can't deserialize data [[104, 105, 32, 116, 104, 101, 114, 101]] from topic [customer-topic-2]\r\nCaused by: com.fasterxml.jackson.core.JsonParseException: Unrecognized token 'hi': was expecting (JSON String, Number, Array, Object or token 'null', 'true' or 'false')\n at [Source: (byte[])\"hi there\"; line: 1, column: 4]\r\n\tat com.fasterxml.jackson.core.JsonParser._constructError(JsonParser.java:2337)\r\n\tat com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(ParserMinimalBase.java:720)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportInvalidToken(UTF8StreamJsonParser.java:3593)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleUnexpectedValue(UTF8StreamJsonParser.java:2688)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._nextTokenNotInObject(UTF8StreamJsonParser.java:870)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextToken(UTF8StreamJsonParser.java:762)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._initForReading(ObjectReader.java:355)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._bindAndClose(ObjectReader.java:2023)\r\n\tat com.fasterxml.jackson.databind.ObjectReader.readValue(ObjectReader.java:1528)\r\n\tat org.springframework.kafka.support.serializer.JsonDeserializer.deserialize(JsonDeserializer.java:534)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.parseRecord(Fetcher.java:1387)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.access$3400(Fetcher.java:133)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.fetchRecords(Fetcher.java:1618)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.access$1700(Fetcher.java:1454)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchRecords(Fetcher.java:687)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchedRecords(Fetcher.java:638)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.pollForFetches(KafkaConsumer.java:1272)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1233)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1206)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doPoll(KafkaMessageListenerContainer.java:1410)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1249)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1161)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:46:39.945Z","appMessage":"Consumer exception","class":"org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"ERROR","exception":"java.lang.IllegalStateException: This error handler cannot process 'SerializationException's directly; please consider configuring an 'ErrorHandlingDeserializer' in the value and/or key deserializer\r\n\tat org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:194)\r\n\tat org.springframework.kafka.listener.SeekToCurrentErrorHandler.handle(SeekToCurrentErrorHandler.java:112)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.handleConsumerException(KafkaMessageListenerContainer.java:1599)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1210)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Error deserializing key/value for partition customer-topic-2-0 at offset 0. If needed, please seek past the record to continue consumption.\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Can't deserialize data [[104, 105, 32, 116, 104, 101, 114, 101]] from topic [customer-topic-2]\r\nCaused by: com.fasterxml.jackson.core.JsonParseException: Unrecognized token 'hi': was expecting (JSON String, Number, Array, Object or token 'null', 'true' or 'false')\n at [Source: (byte[])\"hi there\"; line: 1, column: 4]\r\n\tat com.fasterxml.jackson.core.JsonParser._constructError(JsonParser.java:2337)\r\n\tat com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(ParserMinimalBase.java:720)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportInvalidToken(UTF8StreamJsonParser.java:3593)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleUnexpectedValue(UTF8StreamJsonParser.java:2688)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._nextTokenNotInObject(UTF8StreamJsonParser.java:870)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextToken(UTF8StreamJsonParser.java:762)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._initForReading(ObjectReader.java:355)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._bindAndClose(ObjectReader.java:2023)\r\n\tat com.fasterxml.jackson.databind.ObjectReader.readValue(ObjectReader.java:1528)\r\n\tat org.springframework.kafka.support.serializer.JsonDeserializer.deserialize(JsonDeserializer.java:534)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.parseRecord(Fetcher.java:1387)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.access$3400(Fetcher.java:133)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.fetchRecords(Fetcher.java:1618)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.access$1700(Fetcher.java:1454)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchRecords(Fetcher.java:687)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchedRecords(Fetcher.java:638)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.pollForFetches(KafkaConsumer.java:1272)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1233)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1206)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doPoll(KafkaMessageListenerContainer.java:1410)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1249)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1161)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:46:39.950Z","appMessage":"Consumer exception","class":"org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"ERROR","exception":"java.lang.IllegalStateException: This error handler cannot process 'SerializationException's directly; please consider configuring an 'ErrorHandlingDeserializer' in the value and/or key deserializer\r\n\tat org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:194)\r\n\tat org.springframework.kafka.listener.SeekToCurrentErrorHandler.handle(SeekToCurrentErrorHandler.java:112)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.handleConsumerException(KafkaMessageListenerContainer.java:1599)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1210)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Error deserializing key/value for partition customer-topic-2-0 at offset 0. If needed, please seek past the record to continue consumption.\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Can't deserialize data [[104, 105, 32, 116, 104, 101, 114, 101]] from topic [customer-topic-2]\r\nCaused by: com.fasterxml.jackson.core.JsonParseException: Unrecognized token 'hi': was expecting (JSON String, Number, Array, Object or token 'null', 'true' or 'false')\n at [Source: (byte[])\"hi there\"; line: 1, column: 4]\r\n\tat com.fasterxml.jackson.core.JsonParser._constructError(JsonParser.java:2337)\r\n\tat com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(ParserMinimalBase.java:720)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportInvalidToken(UTF8StreamJsonParser.java:3593)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleUnexpectedValue(UTF8StreamJsonParser.java:2688)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._nextTokenNotInObject(UTF8StreamJsonParser.java:870)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextToken(UTF8StreamJsonParser.java:762)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._initForReading(ObjectReader.java:355)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._bindAndClose(ObjectReader.java:2023)\r\n\tat com.fasterxml.jackson.databind.ObjectReader.readValue(ObjectReader.java:1528)\r\n\tat org.springframework.kafka.support.serializer.JsonDeserializer.deserialize(JsonDeserializer.java:534)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.parseRecord(Fetcher.java:1387)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.access$3400(Fetcher.java:133)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.fetchRecords(Fetcher.java:1618)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.access$1700(Fetcher.java:1454)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchRecords(Fetcher.java:687)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchedRecords(Fetcher.java:638)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.pollForFetches(KafkaConsumer.java:1272)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1233)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1206)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doPoll(KafkaMessageListenerContainer.java:1410)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1249)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1161)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:46:39.956Z","appMessage":"Consumer exception","class":"org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"ERROR","exception":"java.lang.IllegalStateException: This error handler cannot process 'SerializationException's directly; please consider configuring an 'ErrorHandlingDeserializer' in the value and/or key deserializer\r\n\tat org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:194)\r\n\tat org.springframework.kafka.listener.SeekToCurrentErrorHandler.handle(SeekToCurrentErrorHandler.java:112)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.handleConsumerException(KafkaMessageListenerContainer.java:1599)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1210)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Error deserializing key/value for partition customer-topic-2-0 at offset 0. If needed, please seek past the record to continue consumption.\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Can't deserialize data [[104, 105, 32, 116, 104, 101, 114, 101]] from topic [customer-topic-2]\r\nCaused by: com.fasterxml.jackson.core.JsonParseException: Unrecognized token 'hi': was expecting (JSON String, Number, Array, Object or token 'null', 'true' or 'false')\n at [Source: (byte[])\"hi there\"; line: 1, column: 4]\r\n\tat com.fasterxml.jackson.core.JsonParser._constructError(JsonParser.java:2337)\r\n\tat com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(ParserMinimalBase.java:720)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportInvalidToken(UTF8StreamJsonParser.java:3593)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleUnexpectedValue(UTF8StreamJsonParser.java:2688)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._nextTokenNotInObject(UTF8StreamJsonParser.java:870)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextToken(UTF8StreamJsonParser.java:762)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._initForReading(ObjectReader.java:355)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._bindAndClose(ObjectReader.java:2023)\r\n\tat com.fasterxml.jackson.databind.ObjectReader.readValue(ObjectReader.java:1528)\r\n\tat org.springframework.kafka.support.serializer.JsonDeserializer.deserialize(JsonDeserializer.java:534)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.parseRecord(Fetcher.java:1387)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.access$3400(Fetcher.java:133)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.fetchRecords(Fetcher.java:1618)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.access$1700(Fetcher.java:1454)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchRecords(Fetcher.java:687)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchedRecords(Fetcher.java:638)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.pollForFetches(KafkaConsumer.java:1272)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1233)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1206)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doPoll(KafkaMessageListenerContainer.java:1410)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1249)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1161)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:46:39.961Z","appMessage":"Consumer exception","class":"org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"ERROR","exception":"java.lang.IllegalStateException: This error handler cannot process 'SerializationException's directly; please consider configuring an 'ErrorHandlingDeserializer' in the value and/or key deserializer\r\n\tat org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:194)\r\n\tat org.springframework.kafka.listener.SeekToCurrentErrorHandler.handle(SeekToCurrentErrorHandler.java:112)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.handleConsumerException(KafkaMessageListenerContainer.java:1599)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1210)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Error deserializing key/value for partition customer-topic-2-0 at offset 0. If needed, please seek past the record to continue consumption.\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Can't deserialize data [[104, 105, 32, 116, 104, 101, 114, 101]] from topic [customer-topic-2]\r\nCaused by: com.fasterxml.jackson.core.JsonParseException: Unrecognized token 'hi': was expecting (JSON String, Number, Array, Object or token 'null', 'true' or 'false')\n at [Source: (byte[])\"hi there\"; line: 1, column: 4]\r\n\tat com.fasterxml.jackson.core.JsonParser._constructError(JsonParser.java:2337)\r\n\tat com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(ParserMinimalBase.java:720)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportInvalidToken(UTF8StreamJsonParser.java:3593)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleUnexpectedValue(UTF8StreamJsonParser.java:2688)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._nextTokenNotInObject(UTF8StreamJsonParser.java:870)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextToken(UTF8StreamJsonParser.java:762)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._initForReading(ObjectReader.java:355)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._bindAndClose(ObjectReader.java:2023)\r\n\tat com.fasterxml.jackson.databind.ObjectReader.readValue(ObjectReader.java:1528)\r\n\tat org.springframework.kafka.support.serializer.JsonDeserializer.deserialize(JsonDeserializer.java:534)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.parseRecord(Fetcher.java:1387)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.access$3400(Fetcher.java:133)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.fetchRecords(Fetcher.java:1618)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.access$1700(Fetcher.java:1454)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchRecords(Fetcher.java:687)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchedRecords(Fetcher.java:638)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.pollForFetches(KafkaConsumer.java:1272)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1233)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1206)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doPoll(KafkaMessageListenerContainer.java:1410)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1249)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1161)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:46:39.966Z","appMessage":"Consumer exception","class":"org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"ERROR","exception":"java.lang.IllegalStateException: This error handler cannot process 'SerializationException's directly; please consider configuring an 'ErrorHandlingDeserializer' in the value and/or key deserializer\r\n\tat org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:194)\r\n\tat org.springframework.kafka.listener.SeekToCurrentErrorHandler.handle(SeekToCurrentErrorHandler.java:112)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.handleConsumerException(KafkaMessageListenerContainer.java:1599)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1210)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Error deserializing key/value for partition customer-topic-2-0 at offset 0. If needed, please seek past the record to continue consumption.\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Can't deserialize data [[104, 105, 32, 116, 104, 101, 114, 101]] from topic [customer-topic-2]\r\nCaused by: com.fasterxml.jackson.core.JsonParseException: Unrecognized token 'hi': was expecting (JSON String, Number, Array, Object or token 'null', 'true' or 'false')\n at [Source: (byte[])\"hi there\"; line: 1, column: 4]\r\n\tat com.fasterxml.jackson.core.JsonParser._constructError(JsonParser.java:2337)\r\n\tat com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(ParserMinimalBase.java:720)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportInvalidToken(UTF8StreamJsonParser.java:3593)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleUnexpectedValue(UTF8StreamJsonParser.java:2688)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._nextTokenNotInObject(UTF8StreamJsonParser.java:870)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextToken(UTF8StreamJsonParser.java:762)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._initForReading(ObjectReader.java:355)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._bindAndClose(ObjectReader.java:2023)\r\n\tat com.fasterxml.jackson.databind.ObjectReader.readValue(ObjectReader.java:1528)\r\n\tat org.springframework.kafka.support.serializer.JsonDeserializer.deserialize(JsonDeserializer.java:534)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.parseRecord(Fetcher.java:1387)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.access$3400(Fetcher.java:133)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.fetchRecords(Fetcher.java:1618)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.access$1700(Fetcher.java:1454)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchRecords(Fetcher.java:687)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchedRecords(Fetcher.java:638)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.pollForFetches(KafkaConsumer.java:1272)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1233)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1206)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doPoll(KafkaMessageListenerContainer.java:1410)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1249)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1161)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:46:39.970Z","appMessage":"Consumer exception","class":"org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"ERROR","exception":"java.lang.IllegalStateException: This error handler cannot process 'SerializationException's directly; please consider configuring an 'ErrorHandlingDeserializer' in the value and/or key deserializer\r\n\tat org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:194)\r\n\tat org.springframework.kafka.listener.SeekToCurrentErrorHandler.handle(SeekToCurrentErrorHandler.java:112)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.handleConsumerException(KafkaMessageListenerContainer.java:1599)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1210)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Error deserializing key/value for partition customer-topic-2-0 at offset 0. If needed, please seek past the record to continue consumption.\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Can't deserialize data [[104, 105, 32, 116, 104, 101, 114, 101]] from topic [customer-topic-2]\r\nCaused by: com.fasterxml.jackson.core.JsonParseException: Unrecognized token 'hi': was expecting (JSON String, Number, Array, Object or token 'null', 'true' or 'false')\n at [Source: (byte[])\"hi there\"; line: 1, column: 4]\r\n\tat com.fasterxml.jackson.core.JsonParser._constructError(JsonParser.java:2337)\r\n\tat com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(ParserMinimalBase.java:720)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportInvalidToken(UTF8StreamJsonParser.java:3593)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleUnexpectedValue(UTF8StreamJsonParser.java:2688)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._nextTokenNotInObject(UTF8StreamJsonParser.java:870)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextToken(UTF8StreamJsonParser.java:762)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._initForReading(ObjectReader.java:355)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._bindAndClose(ObjectReader.java:2023)\r\n\tat com.fasterxml.jackson.databind.ObjectReader.readValue(ObjectReader.java:1528)\r\n\tat org.springframework.kafka.support.serializer.JsonDeserializer.deserialize(JsonDeserializer.java:534)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.parseRecord(Fetcher.java:1387)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.access$3400(Fetcher.java:133)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.fetchRecords(Fetcher.java:1618)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.access$1700(Fetcher.java:1454)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchRecords(Fetcher.java:687)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchedRecords(Fetcher.java:638)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.pollForFetches(KafkaConsumer.java:1272)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1233)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1206)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doPoll(KafkaMessageListenerContainer.java:1410)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1249)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1161)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:46:39.975Z","appMessage":"Consumer exception","class":"org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"ERROR","exception":"java.lang.IllegalStateException: This error handler cannot process 'SerializationException's directly; please consider configuring an 'ErrorHandlingDeserializer' in the value and/or key deserializer\r\n\tat org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:194)\r\n\tat org.springframework.kafka.listener.SeekToCurrentErrorHandler.handle(SeekToCurrentErrorHandler.java:112)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.handleConsumerException(KafkaMessageListenerContainer.java:1599)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1210)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Error deserializing key/value for partition customer-topic-2-0 at offset 0. If needed, please seek past the record to continue consumption.\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Can't deserialize data [[104, 105, 32, 116, 104, 101, 114, 101]] from topic [customer-topic-2]\r\nCaused by: com.fasterxml.jackson.core.JsonParseException: Unrecognized token 'hi': was expecting (JSON String, Number, Array, Object or token 'null', 'true' or 'false')\n at [Source: (byte[])\"hi there\"; line: 1, column: 4]\r\n\tat com.fasterxml.jackson.core.JsonParser._constructError(JsonParser.java:2337)\r\n\tat com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(ParserMinimalBase.java:720)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportInvalidToken(UTF8StreamJsonParser.java:3593)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleUnexpectedValue(UTF8StreamJsonParser.java:2688)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._nextTokenNotInObject(UTF8StreamJsonParser.java:870)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextToken(UTF8StreamJsonParser.java:762)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._initForReading(ObjectReader.java:355)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._bindAndClose(ObjectReader.java:2023)\r\n\tat com.fasterxml.jackson.databind.ObjectReader.readValue(ObjectReader.java:1528)\r\n\tat org.springframework.kafka.support.serializer.JsonDeserializer.deserialize(JsonDeserializer.java:534)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.parseRecord(Fetcher.java:1387)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.access$3400(Fetcher.java:133)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.fetchRecords(Fetcher.java:1618)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.access$1700(Fetcher.java:1454)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchRecords(Fetcher.java:687)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchedRecords(Fetcher.java:638)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.pollForFetches(KafkaConsumer.java:1272)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1233)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1206)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doPoll(KafkaMessageListenerContainer.java:1410)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1249)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1161)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:46:39.980Z","appMessage":"Consumer exception","class":"org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"ERROR","exception":"java.lang.IllegalStateException: This error handler cannot process 'SerializationException's directly; please consider configuring an 'ErrorHandlingDeserializer' in the value and/or key deserializer\r\n\tat org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:194)\r\n\tat org.springframework.kafka.listener.SeekToCurrentErrorHandler.handle(SeekToCurrentErrorHandler.java:112)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.handleConsumerException(KafkaMessageListenerContainer.java:1599)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1210)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Error deserializing key/value for partition customer-topic-2-0 at offset 0. If needed, please seek past the record to continue consumption.\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Can't deserialize data [[104, 105, 32, 116, 104, 101, 114, 101]] from topic [customer-topic-2]\r\nCaused by: com.fasterxml.jackson.core.JsonParseException: Unrecognized token 'hi': was expecting (JSON String, Number, Array, Object or token 'null', 'true' or 'false')\n at [Source: (byte[])\"hi there\"; line: 1, column: 4]\r\n\tat com.fasterxml.jackson.core.JsonParser._constructError(JsonParser.java:2337)\r\n\tat com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(ParserMinimalBase.java:720)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportInvalidToken(UTF8StreamJsonParser.java:3593)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleUnexpectedValue(UTF8StreamJsonParser.java:2688)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._nextTokenNotInObject(UTF8StreamJsonParser.java:870)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextToken(UTF8StreamJsonParser.java:762)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._initForReading(ObjectReader.java:355)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._bindAndClose(ObjectReader.java:2023)\r\n\tat com.fasterxml.jackson.databind.ObjectReader.readValue(ObjectReader.java:1528)\r\n\tat org.springframework.kafka.support.serializer.JsonDeserializer.deserialize(JsonDeserializer.java:534)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.parseRecord(Fetcher.java:1387)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.access$3400(Fetcher.java:133)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.fetchRecords(Fetcher.java:1618)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.access$1700(Fetcher.java:1454)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchRecords(Fetcher.java:687)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchedRecords(Fetcher.java:638)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.pollForFetches(KafkaConsumer.java:1272)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1233)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1206)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doPoll(KafkaMessageListenerContainer.java:1410)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1249)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1161)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:46:39.985Z","appMessage":"Consumer exception","class":"org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"ERROR","exception":"java.lang.IllegalStateException: This error handler cannot process 'SerializationException's directly; please consider configuring an 'ErrorHandlingDeserializer' in the value and/or key deserializer\r\n\tat org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:194)\r\n\tat org.springframework.kafka.listener.SeekToCurrentErrorHandler.handle(SeekToCurrentErrorHandler.java:112)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.handleConsumerException(KafkaMessageListenerContainer.java:1599)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1210)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Error deserializing key/value for partition customer-topic-2-0 at offset 0. If needed, please seek past the record to continue consumption.\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Can't deserialize data [[104, 105, 32, 116, 104, 101, 114, 101]] from topic [customer-topic-2]\r\nCaused by: com.fasterxml.jackson.core.JsonParseException: Unrecognized token 'hi': was expecting (JSON String, Number, Array, Object or token 'null', 'true' or 'false')\n at [Source: (byte[])\"hi there\"; line: 1, column: 4]\r\n\tat com.fasterxml.jackson.core.JsonParser._constructError(JsonParser.java:2337)\r\n\tat com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(ParserMinimalBase.java:720)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportInvalidToken(UTF8StreamJsonParser.java:3593)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleUnexpectedValue(UTF8StreamJsonParser.java:2688)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._nextTokenNotInObject(UTF8StreamJsonParser.java:870)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextToken(UTF8StreamJsonParser.java:762)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._initForReading(ObjectReader.java:355)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._bindAndClose(ObjectReader.java:2023)\r\n\tat com.fasterxml.jackson.databind.ObjectReader.readValue(ObjectReader.java:1528)\r\n\tat org.springframework.kafka.support.serializer.JsonDeserializer.deserialize(JsonDeserializer.java:534)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.parseRecord(Fetcher.java:1387)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.access$3400(Fetcher.java:133)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.fetchRecords(Fetcher.java:1618)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.access$1700(Fetcher.java:1454)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchRecords(Fetcher.java:687)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchedRecords(Fetcher.java:638)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.pollForFetches(KafkaConsumer.java:1272)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1233)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1206)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doPoll(KafkaMessageListenerContainer.java:1410)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1249)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1161)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:46:39.989Z","appMessage":"Consumer exception","class":"org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"ERROR","exception":"java.lang.IllegalStateException: This error handler cannot process 'SerializationException's directly; please consider configuring an 'ErrorHandlingDeserializer' in the value and/or key deserializer\r\n\tat org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:194)\r\n\tat org.springframework.kafka.listener.SeekToCurrentErrorHandler.handle(SeekToCurrentErrorHandler.java:112)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.handleConsumerException(KafkaMessageListenerContainer.java:1599)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1210)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Error deserializing key/value for partition customer-topic-2-0 at offset 0. If needed, please seek past the record to continue consumption.\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Can't deserialize data [[104, 105, 32, 116, 104, 101, 114, 101]] from topic [customer-topic-2]\r\nCaused by: com.fasterxml.jackson.core.JsonParseException: Unrecognized token 'hi': was expecting (JSON String, Number, Array, Object or token 'null', 'true' or 'false')\n at [Source: (byte[])\"hi there\"; line: 1, column: 4]\r\n\tat com.fasterxml.jackson.core.JsonParser._constructError(JsonParser.java:2337)\r\n\tat com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(ParserMinimalBase.java:720)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportInvalidToken(UTF8StreamJsonParser.java:3593)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleUnexpectedValue(UTF8StreamJsonParser.java:2688)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._nextTokenNotInObject(UTF8StreamJsonParser.java:870)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextToken(UTF8StreamJsonParser.java:762)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._initForReading(ObjectReader.java:355)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._bindAndClose(ObjectReader.java:2023)\r\n\tat com.fasterxml.jackson.databind.ObjectReader.readValue(ObjectReader.java:1528)\r\n\tat org.springframework.kafka.support.serializer.JsonDeserializer.deserialize(JsonDeserializer.java:534)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.parseRecord(Fetcher.java:1387)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.access$3400(Fetcher.java:133)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.fetchRecords(Fetcher.java:1618)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.access$1700(Fetcher.java:1454)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchRecords(Fetcher.java:687)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchedRecords(Fetcher.java:638)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.pollForFetches(KafkaConsumer.java:1272)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1233)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1206)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doPoll(KafkaMessageListenerContainer.java:1410)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1249)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1161)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:46:39.994Z","appMessage":"Consumer exception","class":"org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"ERROR","exception":"java.lang.IllegalStateException: This error handler cannot process 'SerializationException's directly; please consider configuring an 'ErrorHandlingDeserializer' in the value and/or key deserializer\r\n\tat org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:194)\r\n\tat org.springframework.kafka.listener.SeekToCurrentErrorHandler.handle(SeekToCurrentErrorHandler.java:112)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.handleConsumerException(KafkaMessageListenerContainer.java:1599)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1210)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Error deserializing key/value for partition customer-topic-2-0 at offset 0. If needed, please seek past the record to continue consumption.\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Can't deserialize data [[104, 105, 32, 116, 104, 101, 114, 101]] from topic [customer-topic-2]\r\nCaused by: com.fasterxml.jackson.core.JsonParseException: Unrecognized token 'hi': was expecting (JSON String, Number, Array, Object or token 'null', 'true' or 'false')\n at [Source: (byte[])\"hi there\"; line: 1, column: 4]\r\n\tat com.fasterxml.jackson.core.JsonParser._constructError(JsonParser.java:2337)\r\n\tat com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(ParserMinimalBase.java:720)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportInvalidToken(UTF8StreamJsonParser.java:3593)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleUnexpectedValue(UTF8StreamJsonParser.java:2688)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._nextTokenNotInObject(UTF8StreamJsonParser.java:870)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextToken(UTF8StreamJsonParser.java:762)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._initForReading(ObjectReader.java:355)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._bindAndClose(ObjectReader.java:2023)\r\n\tat com.fasterxml.jackson.databind.ObjectReader.readValue(ObjectReader.java:1528)\r\n\tat org.springframework.kafka.support.serializer.JsonDeserializer.deserialize(JsonDeserializer.java:534)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.parseRecord(Fetcher.java:1387)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.access$3400(Fetcher.java:133)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.fetchRecords(Fetcher.java:1618)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.access$1700(Fetcher.java:1454)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchRecords(Fetcher.java:687)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchedRecords(Fetcher.java:638)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.pollForFetches(KafkaConsumer.java:1272)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1233)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1206)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doPoll(KafkaMessageListenerContainer.java:1410)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1249)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1161)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:46:39.998Z","appMessage":"Consumer exception","class":"org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"ERROR","exception":"java.lang.IllegalStateException: This error handler cannot process 'SerializationException's directly; please consider configuring an 'ErrorHandlingDeserializer' in the value and/or key deserializer\r\n\tat org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:194)\r\n\tat org.springframework.kafka.listener.SeekToCurrentErrorHandler.handle(SeekToCurrentErrorHandler.java:112)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.handleConsumerException(KafkaMessageListenerContainer.java:1599)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1210)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Error deserializing key/value for partition customer-topic-2-0 at offset 0. If needed, please seek past the record to continue consumption.\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Can't deserialize data [[104, 105, 32, 116, 104, 101, 114, 101]] from topic [customer-topic-2]\r\nCaused by: com.fasterxml.jackson.core.JsonParseException: Unrecognized token 'hi': was expecting (JSON String, Number, Array, Object or token 'null', 'true' or 'false')\n at [Source: (byte[])\"hi there\"; line: 1, column: 4]\r\n\tat com.fasterxml.jackson.core.JsonParser._constructError(JsonParser.java:2337)\r\n\tat com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(ParserMinimalBase.java:720)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportInvalidToken(UTF8StreamJsonParser.java:3593)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleUnexpectedValue(UTF8StreamJsonParser.java:2688)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._nextTokenNotInObject(UTF8StreamJsonParser.java:870)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextToken(UTF8StreamJsonParser.java:762)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._initForReading(ObjectReader.java:355)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._bindAndClose(ObjectReader.java:2023)\r\n\tat com.fasterxml.jackson.databind.ObjectReader.readValue(ObjectReader.java:1528)\r\n\tat org.springframework.kafka.support.serializer.JsonDeserializer.deserialize(JsonDeserializer.java:534)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.parseRecord(Fetcher.java:1387)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.access$3400(Fetcher.java:133)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.fetchRecords(Fetcher.java:1618)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.access$1700(Fetcher.java:1454)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchRecords(Fetcher.java:687)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchedRecords(Fetcher.java:638)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.pollForFetches(KafkaConsumer.java:1272)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1233)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1206)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doPoll(KafkaMessageListenerContainer.java:1410)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1249)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1161)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:46:40.003Z","appMessage":"Consumer exception","class":"org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"ERROR","exception":"java.lang.IllegalStateException: This error handler cannot process 'SerializationException's directly; please consider configuring an 'ErrorHandlingDeserializer' in the value and/or key deserializer\r\n\tat org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:194)\r\n\tat org.springframework.kafka.listener.SeekToCurrentErrorHandler.handle(SeekToCurrentErrorHandler.java:112)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.handleConsumerException(KafkaMessageListenerContainer.java:1599)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1210)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Error deserializing key/value for partition customer-topic-2-0 at offset 0. If needed, please seek past the record to continue consumption.\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Can't deserialize data [[104, 105, 32, 116, 104, 101, 114, 101]] from topic [customer-topic-2]\r\nCaused by: com.fasterxml.jackson.core.JsonParseException: Unrecognized token 'hi': was expecting (JSON String, Number, Array, Object or token 'null', 'true' or 'false')\n at [Source: (byte[])\"hi there\"; line: 1, column: 4]\r\n\tat com.fasterxml.jackson.core.JsonParser._constructError(JsonParser.java:2337)\r\n\tat com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(ParserMinimalBase.java:720)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportInvalidToken(UTF8StreamJsonParser.java:3593)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleUnexpectedValue(UTF8StreamJsonParser.java:2688)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._nextTokenNotInObject(UTF8StreamJsonParser.java:870)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextToken(UTF8StreamJsonParser.java:762)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._initForReading(ObjectReader.java:355)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._bindAndClose(ObjectReader.java:2023)\r\n\tat com.fasterxml.jackson.databind.ObjectReader.readValue(ObjectReader.java:1528)\r\n\tat org.springframework.kafka.support.serializer.JsonDeserializer.deserialize(JsonDeserializer.java:534)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.parseRecord(Fetcher.java:1387)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.access$3400(Fetcher.java:133)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.fetchRecords(Fetcher.java:1618)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.access$1700(Fetcher.java:1454)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchRecords(Fetcher.java:687)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchedRecords(Fetcher.java:638)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.pollForFetches(KafkaConsumer.java:1272)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1233)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1206)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doPoll(KafkaMessageListenerContainer.java:1410)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1249)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1161)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:46:40.008Z","appMessage":"Consumer exception","class":"org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"ERROR","exception":"java.lang.IllegalStateException: This error handler cannot process 'SerializationException's directly; please consider configuring an 'ErrorHandlingDeserializer' in the value and/or key deserializer\r\n\tat org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:194)\r\n\tat org.springframework.kafka.listener.SeekToCurrentErrorHandler.handle(SeekToCurrentErrorHandler.java:112)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.handleConsumerException(KafkaMessageListenerContainer.java:1599)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1210)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Error deserializing key/value for partition customer-topic-2-0 at offset 0. If needed, please seek past the record to continue consumption.\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Can't deserialize data [[104, 105, 32, 116, 104, 101, 114, 101]] from topic [customer-topic-2]\r\nCaused by: com.fasterxml.jackson.core.JsonParseException: Unrecognized token 'hi': was expecting (JSON String, Number, Array, Object or token 'null', 'true' or 'false')\n at [Source: (byte[])\"hi there\"; line: 1, column: 4]\r\n\tat com.fasterxml.jackson.core.JsonParser._constructError(JsonParser.java:2337)\r\n\tat com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(ParserMinimalBase.java:720)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportInvalidToken(UTF8StreamJsonParser.java:3593)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleUnexpectedValue(UTF8StreamJsonParser.java:2688)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._nextTokenNotInObject(UTF8StreamJsonParser.java:870)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextToken(UTF8StreamJsonParser.java:762)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._initForReading(ObjectReader.java:355)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._bindAndClose(ObjectReader.java:2023)\r\n\tat com.fasterxml.jackson.databind.ObjectReader.readValue(ObjectReader.java:1528)\r\n\tat org.springframework.kafka.support.serializer.JsonDeserializer.deserialize(JsonDeserializer.java:534)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.parseRecord(Fetcher.java:1387)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.access$3400(Fetcher.java:133)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.fetchRecords(Fetcher.java:1618)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.access$1700(Fetcher.java:1454)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchRecords(Fetcher.java:687)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchedRecords(Fetcher.java:638)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.pollForFetches(KafkaConsumer.java:1272)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1233)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1206)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doPoll(KafkaMessageListenerContainer.java:1410)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1249)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1161)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:46:40.012Z","appMessage":"Consumer exception","class":"org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"ERROR","exception":"java.lang.IllegalStateException: This error handler cannot process 'SerializationException's directly; please consider configuring an 'ErrorHandlingDeserializer' in the value and/or key deserializer\r\n\tat org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:194)\r\n\tat org.springframework.kafka.listener.SeekToCurrentErrorHandler.handle(SeekToCurrentErrorHandler.java:112)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.handleConsumerException(KafkaMessageListenerContainer.java:1599)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1210)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Error deserializing key/value for partition customer-topic-2-0 at offset 0. If needed, please seek past the record to continue consumption.\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Can't deserialize data [[104, 105, 32, 116, 104, 101, 114, 101]] from topic [customer-topic-2]\r\nCaused by: com.fasterxml.jackson.core.JsonParseException: Unrecognized token 'hi': was expecting (JSON String, Number, Array, Object or token 'null', 'true' or 'false')\n at [Source: (byte[])\"hi there\"; line: 1, column: 4]\r\n\tat com.fasterxml.jackson.core.JsonParser._constructError(JsonParser.java:2337)\r\n\tat com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(ParserMinimalBase.java:720)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportInvalidToken(UTF8StreamJsonParser.java:3593)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleUnexpectedValue(UTF8StreamJsonParser.java:2688)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._nextTokenNotInObject(UTF8StreamJsonParser.java:870)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextToken(UTF8StreamJsonParser.java:762)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._initForReading(ObjectReader.java:355)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._bindAndClose(ObjectReader.java:2023)\r\n\tat com.fasterxml.jackson.databind.ObjectReader.readValue(ObjectReader.java:1528)\r\n\tat org.springframework.kafka.support.serializer.JsonDeserializer.deserialize(JsonDeserializer.java:534)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.parseRecord(Fetcher.java:1387)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.access$3400(Fetcher.java:133)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.fetchRecords(Fetcher.java:1618)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.access$1700(Fetcher.java:1454)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchRecords(Fetcher.java:687)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchedRecords(Fetcher.java:638)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.pollForFetches(KafkaConsumer.java:1272)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1233)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1206)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doPoll(KafkaMessageListenerContainer.java:1410)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1249)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1161)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:46:40.017Z","appMessage":"Consumer exception","class":"org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"ERROR","exception":"java.lang.IllegalStateException: This error handler cannot process 'SerializationException's directly; please consider configuring an 'ErrorHandlingDeserializer' in the value and/or key deserializer\r\n\tat org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:194)\r\n\tat org.springframework.kafka.listener.SeekToCurrentErrorHandler.handle(SeekToCurrentErrorHandler.java:112)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.handleConsumerException(KafkaMessageListenerContainer.java:1599)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1210)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Error deserializing key/value for partition customer-topic-2-0 at offset 0. If needed, please seek past the record to continue consumption.\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Can't deserialize data [[104, 105, 32, 116, 104, 101, 114, 101]] from topic [customer-topic-2]\r\nCaused by: com.fasterxml.jackson.core.JsonParseException: Unrecognized token 'hi': was expecting (JSON String, Number, Array, Object or token 'null', 'true' or 'false')\n at [Source: (byte[])\"hi there\"; line: 1, column: 4]\r\n\tat com.fasterxml.jackson.core.JsonParser._constructError(JsonParser.java:2337)\r\n\tat com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(ParserMinimalBase.java:720)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportInvalidToken(UTF8StreamJsonParser.java:3593)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleUnexpectedValue(UTF8StreamJsonParser.java:2688)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._nextTokenNotInObject(UTF8StreamJsonParser.java:870)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextToken(UTF8StreamJsonParser.java:762)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._initForReading(ObjectReader.java:355)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._bindAndClose(ObjectReader.java:2023)\r\n\tat com.fasterxml.jackson.databind.ObjectReader.readValue(ObjectReader.java:1528)\r\n\tat org.springframework.kafka.support.serializer.JsonDeserializer.deserialize(JsonDeserializer.java:534)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.parseRecord(Fetcher.java:1387)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.access$3400(Fetcher.java:133)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.fetchRecords(Fetcher.java:1618)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.access$1700(Fetcher.java:1454)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchRecords(Fetcher.java:687)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchedRecords(Fetcher.java:638)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.pollForFetches(KafkaConsumer.java:1272)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1233)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1206)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doPoll(KafkaMessageListenerContainer.java:1410)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1249)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1161)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:46:40.021Z","appMessage":"Consumer exception","class":"org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"ERROR","exception":"java.lang.IllegalStateException: This error handler cannot process 'SerializationException's directly; please consider configuring an 'ErrorHandlingDeserializer' in the value and/or key deserializer\r\n\tat org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:194)\r\n\tat org.springframework.kafka.listener.SeekToCurrentErrorHandler.handle(SeekToCurrentErrorHandler.java:112)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.handleConsumerException(KafkaMessageListenerContainer.java:1599)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1210)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Error deserializing key/value for partition customer-topic-2-0 at offset 0. If needed, please seek past the record to continue consumption.\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Can't deserialize data [[104, 105, 32, 116, 104, 101, 114, 101]] from topic [customer-topic-2]\r\nCaused by: com.fasterxml.jackson.core.JsonParseException: Unrecognized token 'hi': was expecting (JSON String, Number, Array, Object or token 'null', 'true' or 'false')\n at [Source: (byte[])\"hi there\"; line: 1, column: 4]\r\n\tat com.fasterxml.jackson.core.JsonParser._constructError(JsonParser.java:2337)\r\n\tat com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(ParserMinimalBase.java:720)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportInvalidToken(UTF8StreamJsonParser.java:3593)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleUnexpectedValue(UTF8StreamJsonParser.java:2688)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._nextTokenNotInObject(UTF8StreamJsonParser.java:870)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextToken(UTF8StreamJsonParser.java:762)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._initForReading(ObjectReader.java:355)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._bindAndClose(ObjectReader.java:2023)\r\n\tat com.fasterxml.jackson.databind.ObjectReader.readValue(ObjectReader.java:1528)\r\n\tat org.springframework.kafka.support.serializer.JsonDeserializer.deserialize(JsonDeserializer.java:534)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.parseRecord(Fetcher.java:1387)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.access$3400(Fetcher.java:133)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.fetchRecords(Fetcher.java:1618)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.access$1700(Fetcher.java:1454)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchRecords(Fetcher.java:687)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchedRecords(Fetcher.java:638)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.pollForFetches(KafkaConsumer.java:1272)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1233)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1206)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doPoll(KafkaMessageListenerContainer.java:1410)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1249)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1161)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:46:40.026Z","appMessage":"Consumer exception","class":"org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"ERROR","exception":"java.lang.IllegalStateException: This error handler cannot process 'SerializationException's directly; please consider configuring an 'ErrorHandlingDeserializer' in the value and/or key deserializer\r\n\tat org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:194)\r\n\tat org.springframework.kafka.listener.SeekToCurrentErrorHandler.handle(SeekToCurrentErrorHandler.java:112)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.handleConsumerException(KafkaMessageListenerContainer.java:1599)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1210)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Error deserializing key/value for partition customer-topic-2-0 at offset 0. If needed, please seek past the record to continue consumption.\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Can't deserialize data [[104, 105, 32, 116, 104, 101, 114, 101]] from topic [customer-topic-2]\r\nCaused by: com.fasterxml.jackson.core.JsonParseException: Unrecognized token 'hi': was expecting (JSON String, Number, Array, Object or token 'null', 'true' or 'false')\n at [Source: (byte[])\"hi there\"; line: 1, column: 4]\r\n\tat com.fasterxml.jackson.core.JsonParser._constructError(JsonParser.java:2337)\r\n\tat com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(ParserMinimalBase.java:720)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportInvalidToken(UTF8StreamJsonParser.java:3593)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleUnexpectedValue(UTF8StreamJsonParser.java:2688)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._nextTokenNotInObject(UTF8StreamJsonParser.java:870)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextToken(UTF8StreamJsonParser.java:762)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._initForReading(ObjectReader.java:355)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._bindAndClose(ObjectReader.java:2023)\r\n\tat com.fasterxml.jackson.databind.ObjectReader.readValue(ObjectReader.java:1528)\r\n\tat org.springframework.kafka.support.serializer.JsonDeserializer.deserialize(JsonDeserializer.java:534)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.parseRecord(Fetcher.java:1387)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.access$3400(Fetcher.java:133)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.fetchRecords(Fetcher.java:1618)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.access$1700(Fetcher.java:1454)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchRecords(Fetcher.java:687)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchedRecords(Fetcher.java:638)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.pollForFetches(KafkaConsumer.java:1272)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1233)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1206)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doPoll(KafkaMessageListenerContainer.java:1410)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1249)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1161)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:46:40.030Z","appMessage":"Consumer exception","class":"org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"ERROR","exception":"java.lang.IllegalStateException: This error handler cannot process 'SerializationException's directly; please consider configuring an 'ErrorHandlingDeserializer' in the value and/or key deserializer\r\n\tat org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:194)\r\n\tat org.springframework.kafka.listener.SeekToCurrentErrorHandler.handle(SeekToCurrentErrorHandler.java:112)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.handleConsumerException(KafkaMessageListenerContainer.java:1599)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1210)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Error deserializing key/value for partition customer-topic-2-0 at offset 0. If needed, please seek past the record to continue consumption.\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Can't deserialize data [[104, 105, 32, 116, 104, 101, 114, 101]] from topic [customer-topic-2]\r\nCaused by: com.fasterxml.jackson.core.JsonParseException: Unrecognized token 'hi': was expecting (JSON String, Number, Array, Object or token 'null', 'true' or 'false')\n at [Source: (byte[])\"hi there\"; line: 1, column: 4]\r\n\tat com.fasterxml.jackson.core.JsonParser._constructError(JsonParser.java:2337)\r\n\tat com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(ParserMinimalBase.java:720)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportInvalidToken(UTF8StreamJsonParser.java:3593)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleUnexpectedValue(UTF8StreamJsonParser.java:2688)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._nextTokenNotInObject(UTF8StreamJsonParser.java:870)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextToken(UTF8StreamJsonParser.java:762)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._initForReading(ObjectReader.java:355)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._bindAndClose(ObjectReader.java:2023)\r\n\tat com.fasterxml.jackson.databind.ObjectReader.readValue(ObjectReader.java:1528)\r\n\tat org.springframework.kafka.support.serializer.JsonDeserializer.deserialize(JsonDeserializer.java:534)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.parseRecord(Fetcher.java:1387)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.access$3400(Fetcher.java:133)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.fetchRecords(Fetcher.java:1618)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.access$1700(Fetcher.java:1454)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchRecords(Fetcher.java:687)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchedRecords(Fetcher.java:638)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.pollForFetches(KafkaConsumer.java:1272)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1233)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1206)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doPoll(KafkaMessageListenerContainer.java:1410)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1249)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1161)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:46:40.035Z","appMessage":"Consumer exception","class":"org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"ERROR","exception":"java.lang.IllegalStateException: This error handler cannot process 'SerializationException's directly; please consider configuring an 'ErrorHandlingDeserializer' in the value and/or key deserializer\r\n\tat org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:194)\r\n\tat org.springframework.kafka.listener.SeekToCurrentErrorHandler.handle(SeekToCurrentErrorHandler.java:112)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.handleConsumerException(KafkaMessageListenerContainer.java:1599)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1210)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Error deserializing key/value for partition customer-topic-2-0 at offset 0. If needed, please seek past the record to continue consumption.\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Can't deserialize data [[104, 105, 32, 116, 104, 101, 114, 101]] from topic [customer-topic-2]\r\nCaused by: com.fasterxml.jackson.core.JsonParseException: Unrecognized token 'hi': was expecting (JSON String, Number, Array, Object or token 'null', 'true' or 'false')\n at [Source: (byte[])\"hi there\"; line: 1, column: 4]\r\n\tat com.fasterxml.jackson.core.JsonParser._constructError(JsonParser.java:2337)\r\n\tat com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(ParserMinimalBase.java:720)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportInvalidToken(UTF8StreamJsonParser.java:3593)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleUnexpectedValue(UTF8StreamJsonParser.java:2688)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._nextTokenNotInObject(UTF8StreamJsonParser.java:870)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextToken(UTF8StreamJsonParser.java:762)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._initForReading(ObjectReader.java:355)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._bindAndClose(ObjectReader.java:2023)\r\n\tat com.fasterxml.jackson.databind.ObjectReader.readValue(ObjectReader.java:1528)\r\n\tat org.springframework.kafka.support.serializer.JsonDeserializer.deserialize(JsonDeserializer.java:534)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.parseRecord(Fetcher.java:1387)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.access$3400(Fetcher.java:133)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.fetchRecords(Fetcher.java:1618)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.access$1700(Fetcher.java:1454)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchRecords(Fetcher.java:687)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchedRecords(Fetcher.java:638)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.pollForFetches(KafkaConsumer.java:1272)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1233)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1206)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doPoll(KafkaMessageListenerContainer.java:1410)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1249)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1161)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:46:40.039Z","appMessage":"Consumer exception","class":"org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"ERROR","exception":"java.lang.IllegalStateException: This error handler cannot process 'SerializationException's directly; please consider configuring an 'ErrorHandlingDeserializer' in the value and/or key deserializer\r\n\tat org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:194)\r\n\tat org.springframework.kafka.listener.SeekToCurrentErrorHandler.handle(SeekToCurrentErrorHandler.java:112)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.handleConsumerException(KafkaMessageListenerContainer.java:1599)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1210)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Error deserializing key/value for partition customer-topic-2-0 at offset 0. If needed, please seek past the record to continue consumption.\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Can't deserialize data [[104, 105, 32, 116, 104, 101, 114, 101]] from topic [customer-topic-2]\r\nCaused by: com.fasterxml.jackson.core.JsonParseException: Unrecognized token 'hi': was expecting (JSON String, Number, Array, Object or token 'null', 'true' or 'false')\n at [Source: (byte[])\"hi there\"; line: 1, column: 4]\r\n\tat com.fasterxml.jackson.core.JsonParser._constructError(JsonParser.java:2337)\r\n\tat com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(ParserMinimalBase.java:720)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportInvalidToken(UTF8StreamJsonParser.java:3593)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleUnexpectedValue(UTF8StreamJsonParser.java:2688)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._nextTokenNotInObject(UTF8StreamJsonParser.java:870)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextToken(UTF8StreamJsonParser.java:762)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._initForReading(ObjectReader.java:355)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._bindAndClose(ObjectReader.java:2023)\r\n\tat com.fasterxml.jackson.databind.ObjectReader.readValue(ObjectReader.java:1528)\r\n\tat org.springframework.kafka.support.serializer.JsonDeserializer.deserialize(JsonDeserializer.java:534)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.parseRecord(Fetcher.java:1387)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.access$3400(Fetcher.java:133)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.fetchRecords(Fetcher.java:1618)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.access$1700(Fetcher.java:1454)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchRecords(Fetcher.java:687)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchedRecords(Fetcher.java:638)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.pollForFetches(KafkaConsumer.java:1272)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1233)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1206)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doPoll(KafkaMessageListenerContainer.java:1410)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1249)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1161)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:46:40.044Z","appMessage":"Consumer exception","class":"org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"ERROR","exception":"java.lang.IllegalStateException: This error handler cannot process 'SerializationException's directly; please consider configuring an 'ErrorHandlingDeserializer' in the value and/or key deserializer\r\n\tat org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:194)\r\n\tat org.springframework.kafka.listener.SeekToCurrentErrorHandler.handle(SeekToCurrentErrorHandler.java:112)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.handleConsumerException(KafkaMessageListenerContainer.java:1599)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1210)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Error deserializing key/value for partition customer-topic-2-0 at offset 0. If needed, please seek past the record to continue consumption.\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Can't deserialize data [[104, 105, 32, 116, 104, 101, 114, 101]] from topic [customer-topic-2]\r\nCaused by: com.fasterxml.jackson.core.JsonParseException: Unrecognized token 'hi': was expecting (JSON String, Number, Array, Object or token 'null', 'true' or 'false')\n at [Source: (byte[])\"hi there\"; line: 1, column: 4]\r\n\tat com.fasterxml.jackson.core.JsonParser._constructError(JsonParser.java:2337)\r\n\tat com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(ParserMinimalBase.java:720)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportInvalidToken(UTF8StreamJsonParser.java:3593)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleUnexpectedValue(UTF8StreamJsonParser.java:2688)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._nextTokenNotInObject(UTF8StreamJsonParser.java:870)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextToken(UTF8StreamJsonParser.java:762)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._initForReading(ObjectReader.java:355)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._bindAndClose(ObjectReader.java:2023)\r\n\tat com.fasterxml.jackson.databind.ObjectReader.readValue(ObjectReader.java:1528)\r\n\tat org.springframework.kafka.support.serializer.JsonDeserializer.deserialize(JsonDeserializer.java:534)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.parseRecord(Fetcher.java:1387)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.access$3400(Fetcher.java:133)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.fetchRecords(Fetcher.java:1618)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.access$1700(Fetcher.java:1454)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchRecords(Fetcher.java:687)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchedRecords(Fetcher.java:638)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.pollForFetches(KafkaConsumer.java:1272)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1233)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1206)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doPoll(KafkaMessageListenerContainer.java:1410)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1249)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1161)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:46:40.052Z","appMessage":"Consumer exception","class":"org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"ERROR","exception":"java.lang.IllegalStateException: This error handler cannot process 'SerializationException's directly; please consider configuring an 'ErrorHandlingDeserializer' in the value and/or key deserializer\r\n\tat org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:194)\r\n\tat org.springframework.kafka.listener.SeekToCurrentErrorHandler.handle(SeekToCurrentErrorHandler.java:112)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.handleConsumerException(KafkaMessageListenerContainer.java:1599)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1210)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Error deserializing key/value for partition customer-topic-2-0 at offset 0. If needed, please seek past the record to continue consumption.\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Can't deserialize data [[104, 105, 32, 116, 104, 101, 114, 101]] from topic [customer-topic-2]\r\nCaused by: com.fasterxml.jackson.core.JsonParseException: Unrecognized token 'hi': was expecting (JSON String, Number, Array, Object or token 'null', 'true' or 'false')\n at [Source: (byte[])\"hi there\"; line: 1, column: 4]\r\n\tat com.fasterxml.jackson.core.JsonParser._constructError(JsonParser.java:2337)\r\n\tat com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(ParserMinimalBase.java:720)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportInvalidToken(UTF8StreamJsonParser.java:3593)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleUnexpectedValue(UTF8StreamJsonParser.java:2688)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._nextTokenNotInObject(UTF8StreamJsonParser.java:870)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextToken(UTF8StreamJsonParser.java:762)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._initForReading(ObjectReader.java:355)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._bindAndClose(ObjectReader.java:2023)\r\n\tat com.fasterxml.jackson.databind.ObjectReader.readValue(ObjectReader.java:1528)\r\n\tat org.springframework.kafka.support.serializer.JsonDeserializer.deserialize(JsonDeserializer.java:534)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.parseRecord(Fetcher.java:1387)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.access$3400(Fetcher.java:133)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.fetchRecords(Fetcher.java:1618)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.access$1700(Fetcher.java:1454)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchRecords(Fetcher.java:687)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchedRecords(Fetcher.java:638)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.pollForFetches(KafkaConsumer.java:1272)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1233)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1206)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doPoll(KafkaMessageListenerContainer.java:1410)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1249)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1161)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:46:40.057Z","appMessage":"Consumer exception","class":"org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"ERROR","exception":"java.lang.IllegalStateException: This error handler cannot process 'SerializationException's directly; please consider configuring an 'ErrorHandlingDeserializer' in the value and/or key deserializer\r\n\tat org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:194)\r\n\tat org.springframework.kafka.listener.SeekToCurrentErrorHandler.handle(SeekToCurrentErrorHandler.java:112)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.handleConsumerException(KafkaMessageListenerContainer.java:1599)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1210)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Error deserializing key/value for partition customer-topic-2-0 at offset 0. If needed, please seek past the record to continue consumption.\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Can't deserialize data [[104, 105, 32, 116, 104, 101, 114, 101]] from topic [customer-topic-2]\r\nCaused by: com.fasterxml.jackson.core.JsonParseException: Unrecognized token 'hi': was expecting (JSON String, Number, Array, Object or token 'null', 'true' or 'false')\n at [Source: (byte[])\"hi there\"; line: 1, column: 4]\r\n\tat com.fasterxml.jackson.core.JsonParser._constructError(JsonParser.java:2337)\r\n\tat com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(ParserMinimalBase.java:720)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportInvalidToken(UTF8StreamJsonParser.java:3593)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleUnexpectedValue(UTF8StreamJsonParser.java:2688)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._nextTokenNotInObject(UTF8StreamJsonParser.java:870)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextToken(UTF8StreamJsonParser.java:762)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._initForReading(ObjectReader.java:355)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._bindAndClose(ObjectReader.java:2023)\r\n\tat com.fasterxml.jackson.databind.ObjectReader.readValue(ObjectReader.java:1528)\r\n\tat org.springframework.kafka.support.serializer.JsonDeserializer.deserialize(JsonDeserializer.java:534)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.parseRecord(Fetcher.java:1387)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.access$3400(Fetcher.java:133)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.fetchRecords(Fetcher.java:1618)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.access$1700(Fetcher.java:1454)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchRecords(Fetcher.java:687)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchedRecords(Fetcher.java:638)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.pollForFetches(KafkaConsumer.java:1272)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1233)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1206)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doPoll(KafkaMessageListenerContainer.java:1410)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1249)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1161)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:46:40.063Z","appMessage":"Consumer exception","class":"org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"ERROR","exception":"java.lang.IllegalStateException: This error handler cannot process 'SerializationException's directly; please consider configuring an 'ErrorHandlingDeserializer' in the value and/or key deserializer\r\n\tat org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:194)\r\n\tat org.springframework.kafka.listener.SeekToCurrentErrorHandler.handle(SeekToCurrentErrorHandler.java:112)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.handleConsumerException(KafkaMessageListenerContainer.java:1599)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1210)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Error deserializing key/value for partition customer-topic-2-0 at offset 0. If needed, please seek past the record to continue consumption.\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Can't deserialize data [[104, 105, 32, 116, 104, 101, 114, 101]] from topic [customer-topic-2]\r\nCaused by: com.fasterxml.jackson.core.JsonParseException: Unrecognized token 'hi': was expecting (JSON String, Number, Array, Object or token 'null', 'true' or 'false')\n at [Source: (byte[])\"hi there\"; line: 1, column: 4]\r\n\tat com.fasterxml.jackson.core.JsonParser._constructError(JsonParser.java:2337)\r\n\tat com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(ParserMinimalBase.java:720)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportInvalidToken(UTF8StreamJsonParser.java:3593)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleUnexpectedValue(UTF8StreamJsonParser.java:2688)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._nextTokenNotInObject(UTF8StreamJsonParser.java:870)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextToken(UTF8StreamJsonParser.java:762)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._initForReading(ObjectReader.java:355)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._bindAndClose(ObjectReader.java:2023)\r\n\tat com.fasterxml.jackson.databind.ObjectReader.readValue(ObjectReader.java:1528)\r\n\tat org.springframework.kafka.support.serializer.JsonDeserializer.deserialize(JsonDeserializer.java:534)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.parseRecord(Fetcher.java:1387)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.access$3400(Fetcher.java:133)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.fetchRecords(Fetcher.java:1618)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.access$1700(Fetcher.java:1454)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchRecords(Fetcher.java:687)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchedRecords(Fetcher.java:638)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.pollForFetches(KafkaConsumer.java:1272)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1233)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1206)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doPoll(KafkaMessageListenerContainer.java:1410)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1249)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1161)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:46:40.068Z","appMessage":"Consumer exception","class":"org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"ERROR","exception":"java.lang.IllegalStateException: This error handler cannot process 'SerializationException's directly; please consider configuring an 'ErrorHandlingDeserializer' in the value and/or key deserializer\r\n\tat org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:194)\r\n\tat org.springframework.kafka.listener.SeekToCurrentErrorHandler.handle(SeekToCurrentErrorHandler.java:112)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.handleConsumerException(KafkaMessageListenerContainer.java:1599)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1210)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Error deserializing key/value for partition customer-topic-2-0 at offset 0. If needed, please seek past the record to continue consumption.\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Can't deserialize data [[104, 105, 32, 116, 104, 101, 114, 101]] from topic [customer-topic-2]\r\nCaused by: com.fasterxml.jackson.core.JsonParseException: Unrecognized token 'hi': was expecting (JSON String, Number, Array, Object or token 'null', 'true' or 'false')\n at [Source: (byte[])\"hi there\"; line: 1, column: 4]\r\n\tat com.fasterxml.jackson.core.JsonParser._constructError(JsonParser.java:2337)\r\n\tat com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(ParserMinimalBase.java:720)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportInvalidToken(UTF8StreamJsonParser.java:3593)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleUnexpectedValue(UTF8StreamJsonParser.java:2688)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._nextTokenNotInObject(UTF8StreamJsonParser.java:870)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextToken(UTF8StreamJsonParser.java:762)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._initForReading(ObjectReader.java:355)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._bindAndClose(ObjectReader.java:2023)\r\n\tat com.fasterxml.jackson.databind.ObjectReader.readValue(ObjectReader.java:1528)\r\n\tat org.springframework.kafka.support.serializer.JsonDeserializer.deserialize(JsonDeserializer.java:534)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.parseRecord(Fetcher.java:1387)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.access$3400(Fetcher.java:133)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.fetchRecords(Fetcher.java:1618)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.access$1700(Fetcher.java:1454)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchRecords(Fetcher.java:687)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchedRecords(Fetcher.java:638)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.pollForFetches(KafkaConsumer.java:1272)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1233)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1206)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doPoll(KafkaMessageListenerContainer.java:1410)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1249)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1161)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:46:40.073Z","appMessage":"Consumer exception","class":"org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"ERROR","exception":"java.lang.IllegalStateException: This error handler cannot process 'SerializationException's directly; please consider configuring an 'ErrorHandlingDeserializer' in the value and/or key deserializer\r\n\tat org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:194)\r\n\tat org.springframework.kafka.listener.SeekToCurrentErrorHandler.handle(SeekToCurrentErrorHandler.java:112)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.handleConsumerException(KafkaMessageListenerContainer.java:1599)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1210)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Error deserializing key/value for partition customer-topic-2-0 at offset 0. If needed, please seek past the record to continue consumption.\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Can't deserialize data [[104, 105, 32, 116, 104, 101, 114, 101]] from topic [customer-topic-2]\r\nCaused by: com.fasterxml.jackson.core.JsonParseException: Unrecognized token 'hi': was expecting (JSON String, Number, Array, Object or token 'null', 'true' or 'false')\n at [Source: (byte[])\"hi there\"; line: 1, column: 4]\r\n\tat com.fasterxml.jackson.core.JsonParser._constructError(JsonParser.java:2337)\r\n\tat com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(ParserMinimalBase.java:720)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportInvalidToken(UTF8StreamJsonParser.java:3593)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleUnexpectedValue(UTF8StreamJsonParser.java:2688)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._nextTokenNotInObject(UTF8StreamJsonParser.java:870)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextToken(UTF8StreamJsonParser.java:762)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._initForReading(ObjectReader.java:355)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._bindAndClose(ObjectReader.java:2023)\r\n\tat com.fasterxml.jackson.databind.ObjectReader.readValue(ObjectReader.java:1528)\r\n\tat org.springframework.kafka.support.serializer.JsonDeserializer.deserialize(JsonDeserializer.java:534)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.parseRecord(Fetcher.java:1387)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.access$3400(Fetcher.java:133)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.fetchRecords(Fetcher.java:1618)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.access$1700(Fetcher.java:1454)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchRecords(Fetcher.java:687)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchedRecords(Fetcher.java:638)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.pollForFetches(KafkaConsumer.java:1272)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1233)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1206)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doPoll(KafkaMessageListenerContainer.java:1410)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1249)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1161)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:46:40.077Z","appMessage":"Consumer exception","class":"org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"ERROR","exception":"java.lang.IllegalStateException: This error handler cannot process 'SerializationException's directly; please consider configuring an 'ErrorHandlingDeserializer' in the value and/or key deserializer\r\n\tat org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:194)\r\n\tat org.springframework.kafka.listener.SeekToCurrentErrorHandler.handle(SeekToCurrentErrorHandler.java:112)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.handleConsumerException(KafkaMessageListenerContainer.java:1599)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1210)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Error deserializing key/value for partition customer-topic-2-0 at offset 0. If needed, please seek past the record to continue consumption.\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Can't deserialize data [[104, 105, 32, 116, 104, 101, 114, 101]] from topic [customer-topic-2]\r\nCaused by: com.fasterxml.jackson.core.JsonParseException: Unrecognized token 'hi': was expecting (JSON String, Number, Array, Object or token 'null', 'true' or 'false')\n at [Source: (byte[])\"hi there\"; line: 1, column: 4]\r\n\tat com.fasterxml.jackson.core.JsonParser._constructError(JsonParser.java:2337)\r\n\tat com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(ParserMinimalBase.java:720)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportInvalidToken(UTF8StreamJsonParser.java:3593)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleUnexpectedValue(UTF8StreamJsonParser.java:2688)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._nextTokenNotInObject(UTF8StreamJsonParser.java:870)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextToken(UTF8StreamJsonParser.java:762)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._initForReading(ObjectReader.java:355)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._bindAndClose(ObjectReader.java:2023)\r\n\tat com.fasterxml.jackson.databind.ObjectReader.readValue(ObjectReader.java:1528)\r\n\tat org.springframework.kafka.support.serializer.JsonDeserializer.deserialize(JsonDeserializer.java:534)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.parseRecord(Fetcher.java:1387)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.access$3400(Fetcher.java:133)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.fetchRecords(Fetcher.java:1618)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.access$1700(Fetcher.java:1454)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchRecords(Fetcher.java:687)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchedRecords(Fetcher.java:638)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.pollForFetches(KafkaConsumer.java:1272)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1233)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1206)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doPoll(KafkaMessageListenerContainer.java:1410)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1249)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1161)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:46:40.082Z","appMessage":"Consumer exception","class":"org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"ERROR","exception":"java.lang.IllegalStateException: This error handler cannot process 'SerializationException's directly; please consider configuring an 'ErrorHandlingDeserializer' in the value and/or key deserializer\r\n\tat org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:194)\r\n\tat org.springframework.kafka.listener.SeekToCurrentErrorHandler.handle(SeekToCurrentErrorHandler.java:112)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.handleConsumerException(KafkaMessageListenerContainer.java:1599)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1210)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Error deserializing key/value for partition customer-topic-2-0 at offset 0. If needed, please seek past the record to continue consumption.\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Can't deserialize data [[104, 105, 32, 116, 104, 101, 114, 101]] from topic [customer-topic-2]\r\nCaused by: com.fasterxml.jackson.core.JsonParseException: Unrecognized token 'hi': was expecting (JSON String, Number, Array, Object or token 'null', 'true' or 'false')\n at [Source: (byte[])\"hi there\"; line: 1, column: 4]\r\n\tat com.fasterxml.jackson.core.JsonParser._constructError(JsonParser.java:2337)\r\n\tat com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(ParserMinimalBase.java:720)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportInvalidToken(UTF8StreamJsonParser.java:3593)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleUnexpectedValue(UTF8StreamJsonParser.java:2688)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._nextTokenNotInObject(UTF8StreamJsonParser.java:870)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextToken(UTF8StreamJsonParser.java:762)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._initForReading(ObjectReader.java:355)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._bindAndClose(ObjectReader.java:2023)\r\n\tat com.fasterxml.jackson.databind.ObjectReader.readValue(ObjectReader.java:1528)\r\n\tat org.springframework.kafka.support.serializer.JsonDeserializer.deserialize(JsonDeserializer.java:534)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.parseRecord(Fetcher.java:1387)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.access$3400(Fetcher.java:133)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.fetchRecords(Fetcher.java:1618)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.access$1700(Fetcher.java:1454)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchRecords(Fetcher.java:687)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchedRecords(Fetcher.java:638)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.pollForFetches(KafkaConsumer.java:1272)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1233)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1206)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doPoll(KafkaMessageListenerContainer.java:1410)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1249)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1161)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:46:40.086Z","appMessage":"Consumer exception","class":"org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"ERROR","exception":"java.lang.IllegalStateException: This error handler cannot process 'SerializationException's directly; please consider configuring an 'ErrorHandlingDeserializer' in the value and/or key deserializer\r\n\tat org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:194)\r\n\tat org.springframework.kafka.listener.SeekToCurrentErrorHandler.handle(SeekToCurrentErrorHandler.java:112)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.handleConsumerException(KafkaMessageListenerContainer.java:1599)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1210)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Error deserializing key/value for partition customer-topic-2-0 at offset 0. If needed, please seek past the record to continue consumption.\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Can't deserialize data [[104, 105, 32, 116, 104, 101, 114, 101]] from topic [customer-topic-2]\r\nCaused by: com.fasterxml.jackson.core.JsonParseException: Unrecognized token 'hi': was expecting (JSON String, Number, Array, Object or token 'null', 'true' or 'false')\n at [Source: (byte[])\"hi there\"; line: 1, column: 4]\r\n\tat com.fasterxml.jackson.core.JsonParser._constructError(JsonParser.java:2337)\r\n\tat com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(ParserMinimalBase.java:720)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportInvalidToken(UTF8StreamJsonParser.java:3593)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleUnexpectedValue(UTF8StreamJsonParser.java:2688)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._nextTokenNotInObject(UTF8StreamJsonParser.java:870)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextToken(UTF8StreamJsonParser.java:762)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._initForReading(ObjectReader.java:355)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._bindAndClose(ObjectReader.java:2023)\r\n\tat com.fasterxml.jackson.databind.ObjectReader.readValue(ObjectReader.java:1528)\r\n\tat org.springframework.kafka.support.serializer.JsonDeserializer.deserialize(JsonDeserializer.java:534)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.parseRecord(Fetcher.java:1387)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.access$3400(Fetcher.java:133)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.fetchRecords(Fetcher.java:1618)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.access$1700(Fetcher.java:1454)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchRecords(Fetcher.java:687)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchedRecords(Fetcher.java:638)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.pollForFetches(KafkaConsumer.java:1272)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1233)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1206)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doPoll(KafkaMessageListenerContainer.java:1410)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1249)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1161)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:46:40.090Z","appMessage":"Consumer exception","class":"org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"ERROR","exception":"java.lang.IllegalStateException: This error handler cannot process 'SerializationException's directly; please consider configuring an 'ErrorHandlingDeserializer' in the value and/or key deserializer\r\n\tat org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:194)\r\n\tat org.springframework.kafka.listener.SeekToCurrentErrorHandler.handle(SeekToCurrentErrorHandler.java:112)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.handleConsumerException(KafkaMessageListenerContainer.java:1599)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1210)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Error deserializing key/value for partition customer-topic-2-0 at offset 0. If needed, please seek past the record to continue consumption.\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Can't deserialize data [[104, 105, 32, 116, 104, 101, 114, 101]] from topic [customer-topic-2]\r\nCaused by: com.fasterxml.jackson.core.JsonParseException: Unrecognized token 'hi': was expecting (JSON String, Number, Array, Object or token 'null', 'true' or 'false')\n at [Source: (byte[])\"hi there\"; line: 1, column: 4]\r\n\tat com.fasterxml.jackson.core.JsonParser._constructError(JsonParser.java:2337)\r\n\tat com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(ParserMinimalBase.java:720)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportInvalidToken(UTF8StreamJsonParser.java:3593)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleUnexpectedValue(UTF8StreamJsonParser.java:2688)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._nextTokenNotInObject(UTF8StreamJsonParser.java:870)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextToken(UTF8StreamJsonParser.java:762)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._initForReading(ObjectReader.java:355)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._bindAndClose(ObjectReader.java:2023)\r\n\tat com.fasterxml.jackson.databind.ObjectReader.readValue(ObjectReader.java:1528)\r\n\tat org.springframework.kafka.support.serializer.JsonDeserializer.deserialize(JsonDeserializer.java:534)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.parseRecord(Fetcher.java:1387)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.access$3400(Fetcher.java:133)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.fetchRecords(Fetcher.java:1618)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.access$1700(Fetcher.java:1454)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchRecords(Fetcher.java:687)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchedRecords(Fetcher.java:638)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.pollForFetches(KafkaConsumer.java:1272)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1233)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1206)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doPoll(KafkaMessageListenerContainer.java:1410)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1249)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1161)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:46:40.095Z","appMessage":"Consumer exception","class":"org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"ERROR","exception":"java.lang.IllegalStateException: This error handler cannot process 'SerializationException's directly; please consider configuring an 'ErrorHandlingDeserializer' in the value and/or key deserializer\r\n\tat org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:194)\r\n\tat org.springframework.kafka.listener.SeekToCurrentErrorHandler.handle(SeekToCurrentErrorHandler.java:112)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.handleConsumerException(KafkaMessageListenerContainer.java:1599)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1210)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Error deserializing key/value for partition customer-topic-2-0 at offset 0. If needed, please seek past the record to continue consumption.\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Can't deserialize data [[104, 105, 32, 116, 104, 101, 114, 101]] from topic [customer-topic-2]\r\nCaused by: com.fasterxml.jackson.core.JsonParseException: Unrecognized token 'hi': was expecting (JSON String, Number, Array, Object or token 'null', 'true' or 'false')\n at [Source: (byte[])\"hi there\"; line: 1, column: 4]\r\n\tat com.fasterxml.jackson.core.JsonParser._constructError(JsonParser.java:2337)\r\n\tat com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(ParserMinimalBase.java:720)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportInvalidToken(UTF8StreamJsonParser.java:3593)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleUnexpectedValue(UTF8StreamJsonParser.java:2688)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._nextTokenNotInObject(UTF8StreamJsonParser.java:870)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextToken(UTF8StreamJsonParser.java:762)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._initForReading(ObjectReader.java:355)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._bindAndClose(ObjectReader.java:2023)\r\n\tat com.fasterxml.jackson.databind.ObjectReader.readValue(ObjectReader.java:1528)\r\n\tat org.springframework.kafka.support.serializer.JsonDeserializer.deserialize(JsonDeserializer.java:534)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.parseRecord(Fetcher.java:1387)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.access$3400(Fetcher.java:133)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.fetchRecords(Fetcher.java:1618)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.access$1700(Fetcher.java:1454)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchRecords(Fetcher.java:687)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchedRecords(Fetcher.java:638)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.pollForFetches(KafkaConsumer.java:1272)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1233)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1206)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doPoll(KafkaMessageListenerContainer.java:1410)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1249)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1161)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:46:40.099Z","appMessage":"Consumer exception","class":"org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"ERROR","exception":"java.lang.IllegalStateException: This error handler cannot process 'SerializationException's directly; please consider configuring an 'ErrorHandlingDeserializer' in the value and/or key deserializer\r\n\tat org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:194)\r\n\tat org.springframework.kafka.listener.SeekToCurrentErrorHandler.handle(SeekToCurrentErrorHandler.java:112)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.handleConsumerException(KafkaMessageListenerContainer.java:1599)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1210)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Error deserializing key/value for partition customer-topic-2-0 at offset 0. If needed, please seek past the record to continue consumption.\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Can't deserialize data [[104, 105, 32, 116, 104, 101, 114, 101]] from topic [customer-topic-2]\r\nCaused by: com.fasterxml.jackson.core.JsonParseException: Unrecognized token 'hi': was expecting (JSON String, Number, Array, Object or token 'null', 'true' or 'false')\n at [Source: (byte[])\"hi there\"; line: 1, column: 4]\r\n\tat com.fasterxml.jackson.core.JsonParser._constructError(JsonParser.java:2337)\r\n\tat com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(ParserMinimalBase.java:720)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportInvalidToken(UTF8StreamJsonParser.java:3593)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleUnexpectedValue(UTF8StreamJsonParser.java:2688)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._nextTokenNotInObject(UTF8StreamJsonParser.java:870)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextToken(UTF8StreamJsonParser.java:762)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._initForReading(ObjectReader.java:355)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._bindAndClose(ObjectReader.java:2023)\r\n\tat com.fasterxml.jackson.databind.ObjectReader.readValue(ObjectReader.java:1528)\r\n\tat org.springframework.kafka.support.serializer.JsonDeserializer.deserialize(JsonDeserializer.java:534)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.parseRecord(Fetcher.java:1387)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.access$3400(Fetcher.java:133)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.fetchRecords(Fetcher.java:1618)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.access$1700(Fetcher.java:1454)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchRecords(Fetcher.java:687)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchedRecords(Fetcher.java:638)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.pollForFetches(KafkaConsumer.java:1272)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1233)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1206)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doPoll(KafkaMessageListenerContainer.java:1410)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1249)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1161)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:46:40.104Z","appMessage":"Consumer exception","class":"org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"ERROR","exception":"java.lang.IllegalStateException: This error handler cannot process 'SerializationException's directly; please consider configuring an 'ErrorHandlingDeserializer' in the value and/or key deserializer\r\n\tat org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:194)\r\n\tat org.springframework.kafka.listener.SeekToCurrentErrorHandler.handle(SeekToCurrentErrorHandler.java:112)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.handleConsumerException(KafkaMessageListenerContainer.java:1599)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1210)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Error deserializing key/value for partition customer-topic-2-0 at offset 0. If needed, please seek past the record to continue consumption.\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Can't deserialize data [[104, 105, 32, 116, 104, 101, 114, 101]] from topic [customer-topic-2]\r\nCaused by: com.fasterxml.jackson.core.JsonParseException: Unrecognized token 'hi': was expecting (JSON String, Number, Array, Object or token 'null', 'true' or 'false')\n at [Source: (byte[])\"hi there\"; line: 1, column: 4]\r\n\tat com.fasterxml.jackson.core.JsonParser._constructError(JsonParser.java:2337)\r\n\tat com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(ParserMinimalBase.java:720)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportInvalidToken(UTF8StreamJsonParser.java:3593)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleUnexpectedValue(UTF8StreamJsonParser.java:2688)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._nextTokenNotInObject(UTF8StreamJsonParser.java:870)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextToken(UTF8StreamJsonParser.java:762)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._initForReading(ObjectReader.java:355)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._bindAndClose(ObjectReader.java:2023)\r\n\tat com.fasterxml.jackson.databind.ObjectReader.readValue(ObjectReader.java:1528)\r\n\tat org.springframework.kafka.support.serializer.JsonDeserializer.deserialize(JsonDeserializer.java:534)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.parseRecord(Fetcher.java:1387)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.access$3400(Fetcher.java:133)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.fetchRecords(Fetcher.java:1618)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.access$1700(Fetcher.java:1454)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchRecords(Fetcher.java:687)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchedRecords(Fetcher.java:638)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.pollForFetches(KafkaConsumer.java:1272)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1233)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1206)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doPoll(KafkaMessageListenerContainer.java:1410)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1249)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1161)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:46:40.108Z","appMessage":"Consumer exception","class":"org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"ERROR","exception":"java.lang.IllegalStateException: This error handler cannot process 'SerializationException's directly; please consider configuring an 'ErrorHandlingDeserializer' in the value and/or key deserializer\r\n\tat org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:194)\r\n\tat org.springframework.kafka.listener.SeekToCurrentErrorHandler.handle(SeekToCurrentErrorHandler.java:112)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.handleConsumerException(KafkaMessageListenerContainer.java:1599)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1210)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Error deserializing key/value for partition customer-topic-2-0 at offset 0. If needed, please seek past the record to continue consumption.\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Can't deserialize data [[104, 105, 32, 116, 104, 101, 114, 101]] from topic [customer-topic-2]\r\nCaused by: com.fasterxml.jackson.core.JsonParseException: Unrecognized token 'hi': was expecting (JSON String, Number, Array, Object or token 'null', 'true' or 'false')\n at [Source: (byte[])\"hi there\"; line: 1, column: 4]\r\n\tat com.fasterxml.jackson.core.JsonParser._constructError(JsonParser.java:2337)\r\n\tat com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(ParserMinimalBase.java:720)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportInvalidToken(UTF8StreamJsonParser.java:3593)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleUnexpectedValue(UTF8StreamJsonParser.java:2688)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._nextTokenNotInObject(UTF8StreamJsonParser.java:870)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextToken(UTF8StreamJsonParser.java:762)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._initForReading(ObjectReader.java:355)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._bindAndClose(ObjectReader.java:2023)\r\n\tat com.fasterxml.jackson.databind.ObjectReader.readValue(ObjectReader.java:1528)\r\n\tat org.springframework.kafka.support.serializer.JsonDeserializer.deserialize(JsonDeserializer.java:534)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.parseRecord(Fetcher.java:1387)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.access$3400(Fetcher.java:133)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.fetchRecords(Fetcher.java:1618)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.access$1700(Fetcher.java:1454)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchRecords(Fetcher.java:687)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchedRecords(Fetcher.java:638)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.pollForFetches(KafkaConsumer.java:1272)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1233)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1206)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doPoll(KafkaMessageListenerContainer.java:1410)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1249)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1161)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:46:40.113Z","appMessage":"Consumer exception","class":"org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"ERROR","exception":"java.lang.IllegalStateException: This error handler cannot process 'SerializationException's directly; please consider configuring an 'ErrorHandlingDeserializer' in the value and/or key deserializer\r\n\tat org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:194)\r\n\tat org.springframework.kafka.listener.SeekToCurrentErrorHandler.handle(SeekToCurrentErrorHandler.java:112)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.handleConsumerException(KafkaMessageListenerContainer.java:1599)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1210)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Error deserializing key/value for partition customer-topic-2-0 at offset 0. If needed, please seek past the record to continue consumption.\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Can't deserialize data [[104, 105, 32, 116, 104, 101, 114, 101]] from topic [customer-topic-2]\r\nCaused by: com.fasterxml.jackson.core.JsonParseException: Unrecognized token 'hi': was expecting (JSON String, Number, Array, Object or token 'null', 'true' or 'false')\n at [Source: (byte[])\"hi there\"; line: 1, column: 4]\r\n\tat com.fasterxml.jackson.core.JsonParser._constructError(JsonParser.java:2337)\r\n\tat com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(ParserMinimalBase.java:720)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportInvalidToken(UTF8StreamJsonParser.java:3593)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleUnexpectedValue(UTF8StreamJsonParser.java:2688)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._nextTokenNotInObject(UTF8StreamJsonParser.java:870)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextToken(UTF8StreamJsonParser.java:762)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._initForReading(ObjectReader.java:355)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._bindAndClose(ObjectReader.java:2023)\r\n\tat com.fasterxml.jackson.databind.ObjectReader.readValue(ObjectReader.java:1528)\r\n\tat org.springframework.kafka.support.serializer.JsonDeserializer.deserialize(JsonDeserializer.java:534)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.parseRecord(Fetcher.java:1387)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.access$3400(Fetcher.java:133)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.fetchRecords(Fetcher.java:1618)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.access$1700(Fetcher.java:1454)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchRecords(Fetcher.java:687)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchedRecords(Fetcher.java:638)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.pollForFetches(KafkaConsumer.java:1272)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1233)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1206)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doPoll(KafkaMessageListenerContainer.java:1410)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1249)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1161)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:46:40.118Z","appMessage":"Consumer exception","class":"org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"ERROR","exception":"java.lang.IllegalStateException: This error handler cannot process 'SerializationException's directly; please consider configuring an 'ErrorHandlingDeserializer' in the value and/or key deserializer\r\n\tat org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:194)\r\n\tat org.springframework.kafka.listener.SeekToCurrentErrorHandler.handle(SeekToCurrentErrorHandler.java:112)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.handleConsumerException(KafkaMessageListenerContainer.java:1599)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1210)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Error deserializing key/value for partition customer-topic-2-0 at offset 0. If needed, please seek past the record to continue consumption.\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Can't deserialize data [[104, 105, 32, 116, 104, 101, 114, 101]] from topic [customer-topic-2]\r\nCaused by: com.fasterxml.jackson.core.JsonParseException: Unrecognized token 'hi': was expecting (JSON String, Number, Array, Object or token 'null', 'true' or 'false')\n at [Source: (byte[])\"hi there\"; line: 1, column: 4]\r\n\tat com.fasterxml.jackson.core.JsonParser._constructError(JsonParser.java:2337)\r\n\tat com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(ParserMinimalBase.java:720)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportInvalidToken(UTF8StreamJsonParser.java:3593)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleUnexpectedValue(UTF8StreamJsonParser.java:2688)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._nextTokenNotInObject(UTF8StreamJsonParser.java:870)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextToken(UTF8StreamJsonParser.java:762)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._initForReading(ObjectReader.java:355)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._bindAndClose(ObjectReader.java:2023)\r\n\tat com.fasterxml.jackson.databind.ObjectReader.readValue(ObjectReader.java:1528)\r\n\tat org.springframework.kafka.support.serializer.JsonDeserializer.deserialize(JsonDeserializer.java:534)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.parseRecord(Fetcher.java:1387)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.access$3400(Fetcher.java:133)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.fetchRecords(Fetcher.java:1618)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.access$1700(Fetcher.java:1454)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchRecords(Fetcher.java:687)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchedRecords(Fetcher.java:638)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.pollForFetches(KafkaConsumer.java:1272)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1233)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1206)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doPoll(KafkaMessageListenerContainer.java:1410)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1249)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1161)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:46:40.122Z","appMessage":"Consumer exception","class":"org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"ERROR","exception":"java.lang.IllegalStateException: This error handler cannot process 'SerializationException's directly; please consider configuring an 'ErrorHandlingDeserializer' in the value and/or key deserializer\r\n\tat org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:194)\r\n\tat org.springframework.kafka.listener.SeekToCurrentErrorHandler.handle(SeekToCurrentErrorHandler.java:112)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.handleConsumerException(KafkaMessageListenerContainer.java:1599)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1210)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Error deserializing key/value for partition customer-topic-2-0 at offset 0. If needed, please seek past the record to continue consumption.\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Can't deserialize data [[104, 105, 32, 116, 104, 101, 114, 101]] from topic [customer-topic-2]\r\nCaused by: com.fasterxml.jackson.core.JsonParseException: Unrecognized token 'hi': was expecting (JSON String, Number, Array, Object or token 'null', 'true' or 'false')\n at [Source: (byte[])\"hi there\"; line: 1, column: 4]\r\n\tat com.fasterxml.jackson.core.JsonParser._constructError(JsonParser.java:2337)\r\n\tat com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(ParserMinimalBase.java:720)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportInvalidToken(UTF8StreamJsonParser.java:3593)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleUnexpectedValue(UTF8StreamJsonParser.java:2688)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._nextTokenNotInObject(UTF8StreamJsonParser.java:870)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextToken(UTF8StreamJsonParser.java:762)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._initForReading(ObjectReader.java:355)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._bindAndClose(ObjectReader.java:2023)\r\n\tat com.fasterxml.jackson.databind.ObjectReader.readValue(ObjectReader.java:1528)\r\n\tat org.springframework.kafka.support.serializer.JsonDeserializer.deserialize(JsonDeserializer.java:534)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.parseRecord(Fetcher.java:1387)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.access$3400(Fetcher.java:133)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.fetchRecords(Fetcher.java:1618)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.access$1700(Fetcher.java:1454)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchRecords(Fetcher.java:687)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchedRecords(Fetcher.java:638)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.pollForFetches(KafkaConsumer.java:1272)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1233)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1206)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doPoll(KafkaMessageListenerContainer.java:1410)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1249)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1161)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:46:40.127Z","appMessage":"Consumer exception","class":"org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"ERROR","exception":"java.lang.IllegalStateException: This error handler cannot process 'SerializationException's directly; please consider configuring an 'ErrorHandlingDeserializer' in the value and/or key deserializer\r\n\tat org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:194)\r\n\tat org.springframework.kafka.listener.SeekToCurrentErrorHandler.handle(SeekToCurrentErrorHandler.java:112)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.handleConsumerException(KafkaMessageListenerContainer.java:1599)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1210)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Error deserializing key/value for partition customer-topic-2-0 at offset 0. If needed, please seek past the record to continue consumption.\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Can't deserialize data [[104, 105, 32, 116, 104, 101, 114, 101]] from topic [customer-topic-2]\r\nCaused by: com.fasterxml.jackson.core.JsonParseException: Unrecognized token 'hi': was expecting (JSON String, Number, Array, Object or token 'null', 'true' or 'false')\n at [Source: (byte[])\"hi there\"; line: 1, column: 4]\r\n\tat com.fasterxml.jackson.core.JsonParser._constructError(JsonParser.java:2337)\r\n\tat com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(ParserMinimalBase.java:720)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportInvalidToken(UTF8StreamJsonParser.java:3593)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleUnexpectedValue(UTF8StreamJsonParser.java:2688)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._nextTokenNotInObject(UTF8StreamJsonParser.java:870)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextToken(UTF8StreamJsonParser.java:762)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._initForReading(ObjectReader.java:355)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._bindAndClose(ObjectReader.java:2023)\r\n\tat com.fasterxml.jackson.databind.ObjectReader.readValue(ObjectReader.java:1528)\r\n\tat org.springframework.kafka.support.serializer.JsonDeserializer.deserialize(JsonDeserializer.java:534)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.parseRecord(Fetcher.java:1387)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.access$3400(Fetcher.java:133)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.fetchRecords(Fetcher.java:1618)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.access$1700(Fetcher.java:1454)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchRecords(Fetcher.java:687)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchedRecords(Fetcher.java:638)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.pollForFetches(KafkaConsumer.java:1272)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1233)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1206)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doPoll(KafkaMessageListenerContainer.java:1410)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1249)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1161)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:46:40.132Z","appMessage":"Consumer exception","class":"org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"ERROR","exception":"java.lang.IllegalStateException: This error handler cannot process 'SerializationException's directly; please consider configuring an 'ErrorHandlingDeserializer' in the value and/or key deserializer\r\n\tat org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:194)\r\n\tat org.springframework.kafka.listener.SeekToCurrentErrorHandler.handle(SeekToCurrentErrorHandler.java:112)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.handleConsumerException(KafkaMessageListenerContainer.java:1599)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1210)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Error deserializing key/value for partition customer-topic-2-0 at offset 0. If needed, please seek past the record to continue consumption.\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Can't deserialize data [[104, 105, 32, 116, 104, 101, 114, 101]] from topic [customer-topic-2]\r\nCaused by: com.fasterxml.jackson.core.JsonParseException: Unrecognized token 'hi': was expecting (JSON String, Number, Array, Object or token 'null', 'true' or 'false')\n at [Source: (byte[])\"hi there\"; line: 1, column: 4]\r\n\tat com.fasterxml.jackson.core.JsonParser._constructError(JsonParser.java:2337)\r\n\tat com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(ParserMinimalBase.java:720)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportInvalidToken(UTF8StreamJsonParser.java:3593)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleUnexpectedValue(UTF8StreamJsonParser.java:2688)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._nextTokenNotInObject(UTF8StreamJsonParser.java:870)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextToken(UTF8StreamJsonParser.java:762)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._initForReading(ObjectReader.java:355)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._bindAndClose(ObjectReader.java:2023)\r\n\tat com.fasterxml.jackson.databind.ObjectReader.readValue(ObjectReader.java:1528)\r\n\tat org.springframework.kafka.support.serializer.JsonDeserializer.deserialize(JsonDeserializer.java:534)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.parseRecord(Fetcher.java:1387)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.access$3400(Fetcher.java:133)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.fetchRecords(Fetcher.java:1618)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.access$1700(Fetcher.java:1454)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchRecords(Fetcher.java:687)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchedRecords(Fetcher.java:638)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.pollForFetches(KafkaConsumer.java:1272)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1233)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1206)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doPoll(KafkaMessageListenerContainer.java:1410)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1249)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1161)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:46:40.136Z","appMessage":"Consumer exception","class":"org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"ERROR","exception":"java.lang.IllegalStateException: This error handler cannot process 'SerializationException's directly; please consider configuring an 'ErrorHandlingDeserializer' in the value and/or key deserializer\r\n\tat org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:194)\r\n\tat org.springframework.kafka.listener.SeekToCurrentErrorHandler.handle(SeekToCurrentErrorHandler.java:112)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.handleConsumerException(KafkaMessageListenerContainer.java:1599)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1210)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Error deserializing key/value for partition customer-topic-2-0 at offset 0. If needed, please seek past the record to continue consumption.\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Can't deserialize data [[104, 105, 32, 116, 104, 101, 114, 101]] from topic [customer-topic-2]\r\nCaused by: com.fasterxml.jackson.core.JsonParseException: Unrecognized token 'hi': was expecting (JSON String, Number, Array, Object or token 'null', 'true' or 'false')\n at [Source: (byte[])\"hi there\"; line: 1, column: 4]\r\n\tat com.fasterxml.jackson.core.JsonParser._constructError(JsonParser.java:2337)\r\n\tat com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(ParserMinimalBase.java:720)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportInvalidToken(UTF8StreamJsonParser.java:3593)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleUnexpectedValue(UTF8StreamJsonParser.java:2688)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._nextTokenNotInObject(UTF8StreamJsonParser.java:870)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextToken(UTF8StreamJsonParser.java:762)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._initForReading(ObjectReader.java:355)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._bindAndClose(ObjectReader.java:2023)\r\n\tat com.fasterxml.jackson.databind.ObjectReader.readValue(ObjectReader.java:1528)\r\n\tat org.springframework.kafka.support.serializer.JsonDeserializer.deserialize(JsonDeserializer.java:534)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.parseRecord(Fetcher.java:1387)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.access$3400(Fetcher.java:133)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.fetchRecords(Fetcher.java:1618)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.access$1700(Fetcher.java:1454)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchRecords(Fetcher.java:687)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchedRecords(Fetcher.java:638)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.pollForFetches(KafkaConsumer.java:1272)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1233)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1206)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doPoll(KafkaMessageListenerContainer.java:1410)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1249)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1161)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:46:40.141Z","appMessage":"Consumer exception","class":"org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"ERROR","exception":"java.lang.IllegalStateException: This error handler cannot process 'SerializationException's directly; please consider configuring an 'ErrorHandlingDeserializer' in the value and/or key deserializer\r\n\tat org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:194)\r\n\tat org.springframework.kafka.listener.SeekToCurrentErrorHandler.handle(SeekToCurrentErrorHandler.java:112)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.handleConsumerException(KafkaMessageListenerContainer.java:1599)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1210)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Error deserializing key/value for partition customer-topic-2-0 at offset 0. If needed, please seek past the record to continue consumption.\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Can't deserialize data [[104, 105, 32, 116, 104, 101, 114, 101]] from topic [customer-topic-2]\r\nCaused by: com.fasterxml.jackson.core.JsonParseException: Unrecognized token 'hi': was expecting (JSON String, Number, Array, Object or token 'null', 'true' or 'false')\n at [Source: (byte[])\"hi there\"; line: 1, column: 4]\r\n\tat com.fasterxml.jackson.core.JsonParser._constructError(JsonParser.java:2337)\r\n\tat com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(ParserMinimalBase.java:720)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportInvalidToken(UTF8StreamJsonParser.java:3593)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleUnexpectedValue(UTF8StreamJsonParser.java:2688)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._nextTokenNotInObject(UTF8StreamJsonParser.java:870)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextToken(UTF8StreamJsonParser.java:762)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._initForReading(ObjectReader.java:355)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._bindAndClose(ObjectReader.java:2023)\r\n\tat com.fasterxml.jackson.databind.ObjectReader.readValue(ObjectReader.java:1528)\r\n\tat org.springframework.kafka.support.serializer.JsonDeserializer.deserialize(JsonDeserializer.java:534)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.parseRecord(Fetcher.java:1387)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.access$3400(Fetcher.java:133)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.fetchRecords(Fetcher.java:1618)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.access$1700(Fetcher.java:1454)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchRecords(Fetcher.java:687)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchedRecords(Fetcher.java:638)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.pollForFetches(KafkaConsumer.java:1272)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1233)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1206)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doPoll(KafkaMessageListenerContainer.java:1410)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1249)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1161)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:46:40.146Z","appMessage":"Consumer exception","class":"org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"ERROR","exception":"java.lang.IllegalStateException: This error handler cannot process 'SerializationException's directly; please consider configuring an 'ErrorHandlingDeserializer' in the value and/or key deserializer\r\n\tat org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:194)\r\n\tat org.springframework.kafka.listener.SeekToCurrentErrorHandler.handle(SeekToCurrentErrorHandler.java:112)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.handleConsumerException(KafkaMessageListenerContainer.java:1599)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1210)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Error deserializing key/value for partition customer-topic-2-0 at offset 0. If needed, please seek past the record to continue consumption.\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Can't deserialize data [[104, 105, 32, 116, 104, 101, 114, 101]] from topic [customer-topic-2]\r\nCaused by: com.fasterxml.jackson.core.JsonParseException: Unrecognized token 'hi': was expecting (JSON String, Number, Array, Object or token 'null', 'true' or 'false')\n at [Source: (byte[])\"hi there\"; line: 1, column: 4]\r\n\tat com.fasterxml.jackson.core.JsonParser._constructError(JsonParser.java:2337)\r\n\tat com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(ParserMinimalBase.java:720)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportInvalidToken(UTF8StreamJsonParser.java:3593)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleUnexpectedValue(UTF8StreamJsonParser.java:2688)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._nextTokenNotInObject(UTF8StreamJsonParser.java:870)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextToken(UTF8StreamJsonParser.java:762)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._initForReading(ObjectReader.java:355)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._bindAndClose(ObjectReader.java:2023)\r\n\tat com.fasterxml.jackson.databind.ObjectReader.readValue(ObjectReader.java:1528)\r\n\tat org.springframework.kafka.support.serializer.JsonDeserializer.deserialize(JsonDeserializer.java:534)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.parseRecord(Fetcher.java:1387)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.access$3400(Fetcher.java:133)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.fetchRecords(Fetcher.java:1618)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.access$1700(Fetcher.java:1454)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchRecords(Fetcher.java:687)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchedRecords(Fetcher.java:638)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.pollForFetches(KafkaConsumer.java:1272)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1233)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1206)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doPoll(KafkaMessageListenerContainer.java:1410)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1249)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1161)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:46:40.151Z","appMessage":"Consumer exception","class":"org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"ERROR","exception":"java.lang.IllegalStateException: This error handler cannot process 'SerializationException's directly; please consider configuring an 'ErrorHandlingDeserializer' in the value and/or key deserializer\r\n\tat org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:194)\r\n\tat org.springframework.kafka.listener.SeekToCurrentErrorHandler.handle(SeekToCurrentErrorHandler.java:112)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.handleConsumerException(KafkaMessageListenerContainer.java:1599)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1210)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Error deserializing key/value for partition customer-topic-2-0 at offset 0. If needed, please seek past the record to continue consumption.\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Can't deserialize data [[104, 105, 32, 116, 104, 101, 114, 101]] from topic [customer-topic-2]\r\nCaused by: com.fasterxml.jackson.core.JsonParseException: Unrecognized token 'hi': was expecting (JSON String, Number, Array, Object or token 'null', 'true' or 'false')\n at [Source: (byte[])\"hi there\"; line: 1, column: 4]\r\n\tat com.fasterxml.jackson.core.JsonParser._constructError(JsonParser.java:2337)\r\n\tat com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(ParserMinimalBase.java:720)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportInvalidToken(UTF8StreamJsonParser.java:3593)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleUnexpectedValue(UTF8StreamJsonParser.java:2688)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._nextTokenNotInObject(UTF8StreamJsonParser.java:870)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextToken(UTF8StreamJsonParser.java:762)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._initForReading(ObjectReader.java:355)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._bindAndClose(ObjectReader.java:2023)\r\n\tat com.fasterxml.jackson.databind.ObjectReader.readValue(ObjectReader.java:1528)\r\n\tat org.springframework.kafka.support.serializer.JsonDeserializer.deserialize(JsonDeserializer.java:534)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.parseRecord(Fetcher.java:1387)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.access$3400(Fetcher.java:133)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.fetchRecords(Fetcher.java:1618)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.access$1700(Fetcher.java:1454)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchRecords(Fetcher.java:687)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchedRecords(Fetcher.java:638)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.pollForFetches(KafkaConsumer.java:1272)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1233)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1206)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doPoll(KafkaMessageListenerContainer.java:1410)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1249)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1161)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:46:40.155Z","appMessage":"Consumer exception","class":"org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"ERROR","exception":"java.lang.IllegalStateException: This error handler cannot process 'SerializationException's directly; please consider configuring an 'ErrorHandlingDeserializer' in the value and/or key deserializer\r\n\tat org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:194)\r\n\tat org.springframework.kafka.listener.SeekToCurrentErrorHandler.handle(SeekToCurrentErrorHandler.java:112)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.handleConsumerException(KafkaMessageListenerContainer.java:1599)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1210)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Error deserializing key/value for partition customer-topic-2-0 at offset 0. If needed, please seek past the record to continue consumption.\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Can't deserialize data [[104, 105, 32, 116, 104, 101, 114, 101]] from topic [customer-topic-2]\r\nCaused by: com.fasterxml.jackson.core.JsonParseException: Unrecognized token 'hi': was expecting (JSON String, Number, Array, Object or token 'null', 'true' or 'false')\n at [Source: (byte[])\"hi there\"; line: 1, column: 4]\r\n\tat com.fasterxml.jackson.core.JsonParser._constructError(JsonParser.java:2337)\r\n\tat com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(ParserMinimalBase.java:720)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportInvalidToken(UTF8StreamJsonParser.java:3593)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleUnexpectedValue(UTF8StreamJsonParser.java:2688)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._nextTokenNotInObject(UTF8StreamJsonParser.java:870)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextToken(UTF8StreamJsonParser.java:762)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._initForReading(ObjectReader.java:355)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._bindAndClose(ObjectReader.java:2023)\r\n\tat com.fasterxml.jackson.databind.ObjectReader.readValue(ObjectReader.java:1528)\r\n\tat org.springframework.kafka.support.serializer.JsonDeserializer.deserialize(JsonDeserializer.java:534)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.parseRecord(Fetcher.java:1387)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.access$3400(Fetcher.java:133)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.fetchRecords(Fetcher.java:1618)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.access$1700(Fetcher.java:1454)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchRecords(Fetcher.java:687)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchedRecords(Fetcher.java:638)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.pollForFetches(KafkaConsumer.java:1272)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1233)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1206)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doPoll(KafkaMessageListenerContainer.java:1410)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1249)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1161)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:46:40.160Z","appMessage":"Consumer exception","class":"org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"ERROR","exception":"java.lang.IllegalStateException: This error handler cannot process 'SerializationException's directly; please consider configuring an 'ErrorHandlingDeserializer' in the value and/or key deserializer\r\n\tat org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:194)\r\n\tat org.springframework.kafka.listener.SeekToCurrentErrorHandler.handle(SeekToCurrentErrorHandler.java:112)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.handleConsumerException(KafkaMessageListenerContainer.java:1599)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1210)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Error deserializing key/value for partition customer-topic-2-0 at offset 0. If needed, please seek past the record to continue consumption.\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Can't deserialize data [[104, 105, 32, 116, 104, 101, 114, 101]] from topic [customer-topic-2]\r\nCaused by: com.fasterxml.jackson.core.JsonParseException: Unrecognized token 'hi': was expecting (JSON String, Number, Array, Object or token 'null', 'true' or 'false')\n at [Source: (byte[])\"hi there\"; line: 1, column: 4]\r\n\tat com.fasterxml.jackson.core.JsonParser._constructError(JsonParser.java:2337)\r\n\tat com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(ParserMinimalBase.java:720)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportInvalidToken(UTF8StreamJsonParser.java:3593)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleUnexpectedValue(UTF8StreamJsonParser.java:2688)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._nextTokenNotInObject(UTF8StreamJsonParser.java:870)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextToken(UTF8StreamJsonParser.java:762)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._initForReading(ObjectReader.java:355)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._bindAndClose(ObjectReader.java:2023)\r\n\tat com.fasterxml.jackson.databind.ObjectReader.readValue(ObjectReader.java:1528)\r\n\tat org.springframework.kafka.support.serializer.JsonDeserializer.deserialize(JsonDeserializer.java:534)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.parseRecord(Fetcher.java:1387)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.access$3400(Fetcher.java:133)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.fetchRecords(Fetcher.java:1618)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.access$1700(Fetcher.java:1454)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchRecords(Fetcher.java:687)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchedRecords(Fetcher.java:638)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.pollForFetches(KafkaConsumer.java:1272)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1233)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1206)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doPoll(KafkaMessageListenerContainer.java:1410)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1249)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1161)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:46:40.164Z","appMessage":"Consumer exception","class":"org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"ERROR","exception":"java.lang.IllegalStateException: This error handler cannot process 'SerializationException's directly; please consider configuring an 'ErrorHandlingDeserializer' in the value and/or key deserializer\r\n\tat org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:194)\r\n\tat org.springframework.kafka.listener.SeekToCurrentErrorHandler.handle(SeekToCurrentErrorHandler.java:112)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.handleConsumerException(KafkaMessageListenerContainer.java:1599)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1210)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Error deserializing key/value for partition customer-topic-2-0 at offset 0. If needed, please seek past the record to continue consumption.\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Can't deserialize data [[104, 105, 32, 116, 104, 101, 114, 101]] from topic [customer-topic-2]\r\nCaused by: com.fasterxml.jackson.core.JsonParseException: Unrecognized token 'hi': was expecting (JSON String, Number, Array, Object or token 'null', 'true' or 'false')\n at [Source: (byte[])\"hi there\"; line: 1, column: 4]\r\n\tat com.fasterxml.jackson.core.JsonParser._constructError(JsonParser.java:2337)\r\n\tat com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(ParserMinimalBase.java:720)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportInvalidToken(UTF8StreamJsonParser.java:3593)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleUnexpectedValue(UTF8StreamJsonParser.java:2688)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._nextTokenNotInObject(UTF8StreamJsonParser.java:870)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextToken(UTF8StreamJsonParser.java:762)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._initForReading(ObjectReader.java:355)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._bindAndClose(ObjectReader.java:2023)\r\n\tat com.fasterxml.jackson.databind.ObjectReader.readValue(ObjectReader.java:1528)\r\n\tat org.springframework.kafka.support.serializer.JsonDeserializer.deserialize(JsonDeserializer.java:534)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.parseRecord(Fetcher.java:1387)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.access$3400(Fetcher.java:133)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.fetchRecords(Fetcher.java:1618)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.access$1700(Fetcher.java:1454)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchRecords(Fetcher.java:687)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchedRecords(Fetcher.java:638)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.pollForFetches(KafkaConsumer.java:1272)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1233)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1206)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doPoll(KafkaMessageListenerContainer.java:1410)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1249)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1161)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:46:40.169Z","appMessage":"Consumer exception","class":"org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"ERROR","exception":"java.lang.IllegalStateException: This error handler cannot process 'SerializationException's directly; please consider configuring an 'ErrorHandlingDeserializer' in the value and/or key deserializer\r\n\tat org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:194)\r\n\tat org.springframework.kafka.listener.SeekToCurrentErrorHandler.handle(SeekToCurrentErrorHandler.java:112)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.handleConsumerException(KafkaMessageListenerContainer.java:1599)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1210)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Error deserializing key/value for partition customer-topic-2-0 at offset 0. If needed, please seek past the record to continue consumption.\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Can't deserialize data [[104, 105, 32, 116, 104, 101, 114, 101]] from topic [customer-topic-2]\r\nCaused by: com.fasterxml.jackson.core.JsonParseException: Unrecognized token 'hi': was expecting (JSON String, Number, Array, Object or token 'null', 'true' or 'false')\n at [Source: (byte[])\"hi there\"; line: 1, column: 4]\r\n\tat com.fasterxml.jackson.core.JsonParser._constructError(JsonParser.java:2337)\r\n\tat com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(ParserMinimalBase.java:720)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportInvalidToken(UTF8StreamJsonParser.java:3593)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleUnexpectedValue(UTF8StreamJsonParser.java:2688)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._nextTokenNotInObject(UTF8StreamJsonParser.java:870)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextToken(UTF8StreamJsonParser.java:762)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._initForReading(ObjectReader.java:355)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._bindAndClose(ObjectReader.java:2023)\r\n\tat com.fasterxml.jackson.databind.ObjectReader.readValue(ObjectReader.java:1528)\r\n\tat org.springframework.kafka.support.serializer.JsonDeserializer.deserialize(JsonDeserializer.java:534)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.parseRecord(Fetcher.java:1387)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.access$3400(Fetcher.java:133)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.fetchRecords(Fetcher.java:1618)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.access$1700(Fetcher.java:1454)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchRecords(Fetcher.java:687)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchedRecords(Fetcher.java:638)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.pollForFetches(KafkaConsumer.java:1272)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1233)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1206)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doPoll(KafkaMessageListenerContainer.java:1410)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1249)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1161)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:46:40.173Z","appMessage":"Consumer exception","class":"org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"ERROR","exception":"java.lang.IllegalStateException: This error handler cannot process 'SerializationException's directly; please consider configuring an 'ErrorHandlingDeserializer' in the value and/or key deserializer\r\n\tat org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:194)\r\n\tat org.springframework.kafka.listener.SeekToCurrentErrorHandler.handle(SeekToCurrentErrorHandler.java:112)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.handleConsumerException(KafkaMessageListenerContainer.java:1599)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1210)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Error deserializing key/value for partition customer-topic-2-0 at offset 0. If needed, please seek past the record to continue consumption.\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Can't deserialize data [[104, 105, 32, 116, 104, 101, 114, 101]] from topic [customer-topic-2]\r\nCaused by: com.fasterxml.jackson.core.JsonParseException: Unrecognized token 'hi': was expecting (JSON String, Number, Array, Object or token 'null', 'true' or 'false')\n at [Source: (byte[])\"hi there\"; line: 1, column: 4]\r\n\tat com.fasterxml.jackson.core.JsonParser._constructError(JsonParser.java:2337)\r\n\tat com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(ParserMinimalBase.java:720)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportInvalidToken(UTF8StreamJsonParser.java:3593)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleUnexpectedValue(UTF8StreamJsonParser.java:2688)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._nextTokenNotInObject(UTF8StreamJsonParser.java:870)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextToken(UTF8StreamJsonParser.java:762)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._initForReading(ObjectReader.java:355)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._bindAndClose(ObjectReader.java:2023)\r\n\tat com.fasterxml.jackson.databind.ObjectReader.readValue(ObjectReader.java:1528)\r\n\tat org.springframework.kafka.support.serializer.JsonDeserializer.deserialize(JsonDeserializer.java:534)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.parseRecord(Fetcher.java:1387)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.access$3400(Fetcher.java:133)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.fetchRecords(Fetcher.java:1618)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.access$1700(Fetcher.java:1454)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchRecords(Fetcher.java:687)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchedRecords(Fetcher.java:638)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.pollForFetches(KafkaConsumer.java:1272)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1233)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1206)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doPoll(KafkaMessageListenerContainer.java:1410)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1249)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1161)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:46:40.177Z","appMessage":"Consumer exception","class":"org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"ERROR","exception":"java.lang.IllegalStateException: This error handler cannot process 'SerializationException's directly; please consider configuring an 'ErrorHandlingDeserializer' in the value and/or key deserializer\r\n\tat org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:194)\r\n\tat org.springframework.kafka.listener.SeekToCurrentErrorHandler.handle(SeekToCurrentErrorHandler.java:112)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.handleConsumerException(KafkaMessageListenerContainer.java:1599)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1210)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Error deserializing key/value for partition customer-topic-2-0 at offset 0. If needed, please seek past the record to continue consumption.\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Can't deserialize data [[104, 105, 32, 116, 104, 101, 114, 101]] from topic [customer-topic-2]\r\nCaused by: com.fasterxml.jackson.core.JsonParseException: Unrecognized token 'hi': was expecting (JSON String, Number, Array, Object or token 'null', 'true' or 'false')\n at [Source: (byte[])\"hi there\"; line: 1, column: 4]\r\n\tat com.fasterxml.jackson.core.JsonParser._constructError(JsonParser.java:2337)\r\n\tat com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(ParserMinimalBase.java:720)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportInvalidToken(UTF8StreamJsonParser.java:3593)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleUnexpectedValue(UTF8StreamJsonParser.java:2688)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._nextTokenNotInObject(UTF8StreamJsonParser.java:870)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextToken(UTF8StreamJsonParser.java:762)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._initForReading(ObjectReader.java:355)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._bindAndClose(ObjectReader.java:2023)\r\n\tat com.fasterxml.jackson.databind.ObjectReader.readValue(ObjectReader.java:1528)\r\n\tat org.springframework.kafka.support.serializer.JsonDeserializer.deserialize(JsonDeserializer.java:534)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.parseRecord(Fetcher.java:1387)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.access$3400(Fetcher.java:133)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.fetchRecords(Fetcher.java:1618)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.access$1700(Fetcher.java:1454)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchRecords(Fetcher.java:687)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchedRecords(Fetcher.java:638)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.pollForFetches(KafkaConsumer.java:1272)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1233)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1206)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doPoll(KafkaMessageListenerContainer.java:1410)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1249)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1161)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:46:40.182Z","appMessage":"Consumer exception","class":"org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"ERROR","exception":"java.lang.IllegalStateException: This error handler cannot process 'SerializationException's directly; please consider configuring an 'ErrorHandlingDeserializer' in the value and/or key deserializer\r\n\tat org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:194)\r\n\tat org.springframework.kafka.listener.SeekToCurrentErrorHandler.handle(SeekToCurrentErrorHandler.java:112)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.handleConsumerException(KafkaMessageListenerContainer.java:1599)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1210)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Error deserializing key/value for partition customer-topic-2-0 at offset 0. If needed, please seek past the record to continue consumption.\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Can't deserialize data [[104, 105, 32, 116, 104, 101, 114, 101]] from topic [customer-topic-2]\r\nCaused by: com.fasterxml.jackson.core.JsonParseException: Unrecognized token 'hi': was expecting (JSON String, Number, Array, Object or token 'null', 'true' or 'false')\n at [Source: (byte[])\"hi there\"; line: 1, column: 4]\r\n\tat com.fasterxml.jackson.core.JsonParser._constructError(JsonParser.java:2337)\r\n\tat com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(ParserMinimalBase.java:720)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportInvalidToken(UTF8StreamJsonParser.java:3593)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleUnexpectedValue(UTF8StreamJsonParser.java:2688)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._nextTokenNotInObject(UTF8StreamJsonParser.java:870)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextToken(UTF8StreamJsonParser.java:762)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._initForReading(ObjectReader.java:355)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._bindAndClose(ObjectReader.java:2023)\r\n\tat com.fasterxml.jackson.databind.ObjectReader.readValue(ObjectReader.java:1528)\r\n\tat org.springframework.kafka.support.serializer.JsonDeserializer.deserialize(JsonDeserializer.java:534)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.parseRecord(Fetcher.java:1387)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.access$3400(Fetcher.java:133)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.fetchRecords(Fetcher.java:1618)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.access$1700(Fetcher.java:1454)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchRecords(Fetcher.java:687)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchedRecords(Fetcher.java:638)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.pollForFetches(KafkaConsumer.java:1272)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1233)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1206)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doPoll(KafkaMessageListenerContainer.java:1410)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1249)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1161)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:46:40.186Z","appMessage":"Consumer exception","class":"org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"ERROR","exception":"java.lang.IllegalStateException: This error handler cannot process 'SerializationException's directly; please consider configuring an 'ErrorHandlingDeserializer' in the value and/or key deserializer\r\n\tat org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:194)\r\n\tat org.springframework.kafka.listener.SeekToCurrentErrorHandler.handle(SeekToCurrentErrorHandler.java:112)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.handleConsumerException(KafkaMessageListenerContainer.java:1599)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1210)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Error deserializing key/value for partition customer-topic-2-0 at offset 0. If needed, please seek past the record to continue consumption.\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Can't deserialize data [[104, 105, 32, 116, 104, 101, 114, 101]] from topic [customer-topic-2]\r\nCaused by: com.fasterxml.jackson.core.JsonParseException: Unrecognized token 'hi': was expecting (JSON String, Number, Array, Object or token 'null', 'true' or 'false')\n at [Source: (byte[])\"hi there\"; line: 1, column: 4]\r\n\tat com.fasterxml.jackson.core.JsonParser._constructError(JsonParser.java:2337)\r\n\tat com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(ParserMinimalBase.java:720)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportInvalidToken(UTF8StreamJsonParser.java:3593)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleUnexpectedValue(UTF8StreamJsonParser.java:2688)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._nextTokenNotInObject(UTF8StreamJsonParser.java:870)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextToken(UTF8StreamJsonParser.java:762)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._initForReading(ObjectReader.java:355)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._bindAndClose(ObjectReader.java:2023)\r\n\tat com.fasterxml.jackson.databind.ObjectReader.readValue(ObjectReader.java:1528)\r\n\tat org.springframework.kafka.support.serializer.JsonDeserializer.deserialize(JsonDeserializer.java:534)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.parseRecord(Fetcher.java:1387)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.access$3400(Fetcher.java:133)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.fetchRecords(Fetcher.java:1618)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.access$1700(Fetcher.java:1454)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchRecords(Fetcher.java:687)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchedRecords(Fetcher.java:638)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.pollForFetches(KafkaConsumer.java:1272)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1233)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1206)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doPoll(KafkaMessageListenerContainer.java:1410)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1249)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1161)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:46:40.190Z","appMessage":"Consumer exception","class":"org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"ERROR","exception":"java.lang.IllegalStateException: This error handler cannot process 'SerializationException's directly; please consider configuring an 'ErrorHandlingDeserializer' in the value and/or key deserializer\r\n\tat org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:194)\r\n\tat org.springframework.kafka.listener.SeekToCurrentErrorHandler.handle(SeekToCurrentErrorHandler.java:112)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.handleConsumerException(KafkaMessageListenerContainer.java:1599)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1210)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Error deserializing key/value for partition customer-topic-2-0 at offset 0. If needed, please seek past the record to continue consumption.\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Can't deserialize data [[104, 105, 32, 116, 104, 101, 114, 101]] from topic [customer-topic-2]\r\nCaused by: com.fasterxml.jackson.core.JsonParseException: Unrecognized token 'hi': was expecting (JSON String, Number, Array, Object or token 'null', 'true' or 'false')\n at [Source: (byte[])\"hi there\"; line: 1, column: 4]\r\n\tat com.fasterxml.jackson.core.JsonParser._constructError(JsonParser.java:2337)\r\n\tat com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(ParserMinimalBase.java:720)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportInvalidToken(UTF8StreamJsonParser.java:3593)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleUnexpectedValue(UTF8StreamJsonParser.java:2688)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._nextTokenNotInObject(UTF8StreamJsonParser.java:870)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextToken(UTF8StreamJsonParser.java:762)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._initForReading(ObjectReader.java:355)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._bindAndClose(ObjectReader.java:2023)\r\n\tat com.fasterxml.jackson.databind.ObjectReader.readValue(ObjectReader.java:1528)\r\n\tat org.springframework.kafka.support.serializer.JsonDeserializer.deserialize(JsonDeserializer.java:534)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.parseRecord(Fetcher.java:1387)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.access$3400(Fetcher.java:133)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.fetchRecords(Fetcher.java:1618)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.access$1700(Fetcher.java:1454)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchRecords(Fetcher.java:687)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchedRecords(Fetcher.java:638)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.pollForFetches(KafkaConsumer.java:1272)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1233)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1206)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doPoll(KafkaMessageListenerContainer.java:1410)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1249)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1161)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:46:40.195Z","appMessage":"Consumer exception","class":"org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"ERROR","exception":"java.lang.IllegalStateException: This error handler cannot process 'SerializationException's directly; please consider configuring an 'ErrorHandlingDeserializer' in the value and/or key deserializer\r\n\tat org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:194)\r\n\tat org.springframework.kafka.listener.SeekToCurrentErrorHandler.handle(SeekToCurrentErrorHandler.java:112)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.handleConsumerException(KafkaMessageListenerContainer.java:1599)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1210)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Error deserializing key/value for partition customer-topic-2-0 at offset 0. If needed, please seek past the record to continue consumption.\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Can't deserialize data [[104, 105, 32, 116, 104, 101, 114, 101]] from topic [customer-topic-2]\r\nCaused by: com.fasterxml.jackson.core.JsonParseException: Unrecognized token 'hi': was expecting (JSON String, Number, Array, Object or token 'null', 'true' or 'false')\n at [Source: (byte[])\"hi there\"; line: 1, column: 4]\r\n\tat com.fasterxml.jackson.core.JsonParser._constructError(JsonParser.java:2337)\r\n\tat com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(ParserMinimalBase.java:720)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportInvalidToken(UTF8StreamJsonParser.java:3593)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleUnexpectedValue(UTF8StreamJsonParser.java:2688)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._nextTokenNotInObject(UTF8StreamJsonParser.java:870)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextToken(UTF8StreamJsonParser.java:762)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._initForReading(ObjectReader.java:355)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._bindAndClose(ObjectReader.java:2023)\r\n\tat com.fasterxml.jackson.databind.ObjectReader.readValue(ObjectReader.java:1528)\r\n\tat org.springframework.kafka.support.serializer.JsonDeserializer.deserialize(JsonDeserializer.java:534)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.parseRecord(Fetcher.java:1387)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.access$3400(Fetcher.java:133)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.fetchRecords(Fetcher.java:1618)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.access$1700(Fetcher.java:1454)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchRecords(Fetcher.java:687)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchedRecords(Fetcher.java:638)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.pollForFetches(KafkaConsumer.java:1272)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1233)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1206)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doPoll(KafkaMessageListenerContainer.java:1410)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1249)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1161)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:46:40.199Z","appMessage":"Consumer exception","class":"org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"ERROR","exception":"java.lang.IllegalStateException: This error handler cannot process 'SerializationException's directly; please consider configuring an 'ErrorHandlingDeserializer' in the value and/or key deserializer\r\n\tat org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:194)\r\n\tat org.springframework.kafka.listener.SeekToCurrentErrorHandler.handle(SeekToCurrentErrorHandler.java:112)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.handleConsumerException(KafkaMessageListenerContainer.java:1599)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1210)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Error deserializing key/value for partition customer-topic-2-0 at offset 0. If needed, please seek past the record to continue consumption.\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Can't deserialize data [[104, 105, 32, 116, 104, 101, 114, 101]] from topic [customer-topic-2]\r\nCaused by: com.fasterxml.jackson.core.JsonParseException: Unrecognized token 'hi': was expecting (JSON String, Number, Array, Object or token 'null', 'true' or 'false')\n at [Source: (byte[])\"hi there\"; line: 1, column: 4]\r\n\tat com.fasterxml.jackson.core.JsonParser._constructError(JsonParser.java:2337)\r\n\tat com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(ParserMinimalBase.java:720)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportInvalidToken(UTF8StreamJsonParser.java:3593)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleUnexpectedValue(UTF8StreamJsonParser.java:2688)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._nextTokenNotInObject(UTF8StreamJsonParser.java:870)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextToken(UTF8StreamJsonParser.java:762)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._initForReading(ObjectReader.java:355)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._bindAndClose(ObjectReader.java:2023)\r\n\tat com.fasterxml.jackson.databind.ObjectReader.readValue(ObjectReader.java:1528)\r\n\tat org.springframework.kafka.support.serializer.JsonDeserializer.deserialize(JsonDeserializer.java:534)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.parseRecord(Fetcher.java:1387)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.access$3400(Fetcher.java:133)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.fetchRecords(Fetcher.java:1618)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.access$1700(Fetcher.java:1454)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchRecords(Fetcher.java:687)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchedRecords(Fetcher.java:638)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.pollForFetches(KafkaConsumer.java:1272)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1233)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1206)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doPoll(KafkaMessageListenerContainer.java:1410)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1249)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1161)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:46:40.204Z","appMessage":"Consumer exception","class":"org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"ERROR","exception":"java.lang.IllegalStateException: This error handler cannot process 'SerializationException's directly; please consider configuring an 'ErrorHandlingDeserializer' in the value and/or key deserializer\r\n\tat org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:194)\r\n\tat org.springframework.kafka.listener.SeekToCurrentErrorHandler.handle(SeekToCurrentErrorHandler.java:112)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.handleConsumerException(KafkaMessageListenerContainer.java:1599)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1210)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Error deserializing key/value for partition customer-topic-2-0 at offset 0. If needed, please seek past the record to continue consumption.\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Can't deserialize data [[104, 105, 32, 116, 104, 101, 114, 101]] from topic [customer-topic-2]\r\nCaused by: com.fasterxml.jackson.core.JsonParseException: Unrecognized token 'hi': was expecting (JSON String, Number, Array, Object or token 'null', 'true' or 'false')\n at [Source: (byte[])\"hi there\"; line: 1, column: 4]\r\n\tat com.fasterxml.jackson.core.JsonParser._constructError(JsonParser.java:2337)\r\n\tat com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(ParserMinimalBase.java:720)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportInvalidToken(UTF8StreamJsonParser.java:3593)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleUnexpectedValue(UTF8StreamJsonParser.java:2688)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._nextTokenNotInObject(UTF8StreamJsonParser.java:870)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextToken(UTF8StreamJsonParser.java:762)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._initForReading(ObjectReader.java:355)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._bindAndClose(ObjectReader.java:2023)\r\n\tat com.fasterxml.jackson.databind.ObjectReader.readValue(ObjectReader.java:1528)\r\n\tat org.springframework.kafka.support.serializer.JsonDeserializer.deserialize(JsonDeserializer.java:534)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.parseRecord(Fetcher.java:1387)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.access$3400(Fetcher.java:133)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.fetchRecords(Fetcher.java:1618)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.access$1700(Fetcher.java:1454)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchRecords(Fetcher.java:687)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchedRecords(Fetcher.java:638)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.pollForFetches(KafkaConsumer.java:1272)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1233)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1206)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doPoll(KafkaMessageListenerContainer.java:1410)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1249)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1161)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:46:40.208Z","appMessage":"Consumer exception","class":"org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"ERROR","exception":"java.lang.IllegalStateException: This error handler cannot process 'SerializationException's directly; please consider configuring an 'ErrorHandlingDeserializer' in the value and/or key deserializer\r\n\tat org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:194)\r\n\tat org.springframework.kafka.listener.SeekToCurrentErrorHandler.handle(SeekToCurrentErrorHandler.java:112)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.handleConsumerException(KafkaMessageListenerContainer.java:1599)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1210)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Error deserializing key/value for partition customer-topic-2-0 at offset 0. If needed, please seek past the record to continue consumption.\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Can't deserialize data [[104, 105, 32, 116, 104, 101, 114, 101]] from topic [customer-topic-2]\r\nCaused by: com.fasterxml.jackson.core.JsonParseException: Unrecognized token 'hi': was expecting (JSON String, Number, Array, Object or token 'null', 'true' or 'false')\n at [Source: (byte[])\"hi there\"; line: 1, column: 4]\r\n\tat com.fasterxml.jackson.core.JsonParser._constructError(JsonParser.java:2337)\r\n\tat com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(ParserMinimalBase.java:720)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportInvalidToken(UTF8StreamJsonParser.java:3593)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleUnexpectedValue(UTF8StreamJsonParser.java:2688)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._nextTokenNotInObject(UTF8StreamJsonParser.java:870)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextToken(UTF8StreamJsonParser.java:762)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._initForReading(ObjectReader.java:355)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._bindAndClose(ObjectReader.java:2023)\r\n\tat com.fasterxml.jackson.databind.ObjectReader.readValue(ObjectReader.java:1528)\r\n\tat org.springframework.kafka.support.serializer.JsonDeserializer.deserialize(JsonDeserializer.java:534)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.parseRecord(Fetcher.java:1387)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.access$3400(Fetcher.java:133)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.fetchRecords(Fetcher.java:1618)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.access$1700(Fetcher.java:1454)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchRecords(Fetcher.java:687)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchedRecords(Fetcher.java:638)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.pollForFetches(KafkaConsumer.java:1272)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1233)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1206)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doPoll(KafkaMessageListenerContainer.java:1410)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1249)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1161)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:46:40.212Z","appMessage":"Consumer exception","class":"org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"ERROR","exception":"java.lang.IllegalStateException: This error handler cannot process 'SerializationException's directly; please consider configuring an 'ErrorHandlingDeserializer' in the value and/or key deserializer\r\n\tat org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:194)\r\n\tat org.springframework.kafka.listener.SeekToCurrentErrorHandler.handle(SeekToCurrentErrorHandler.java:112)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.handleConsumerException(KafkaMessageListenerContainer.java:1599)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1210)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Error deserializing key/value for partition customer-topic-2-0 at offset 0. If needed, please seek past the record to continue consumption.\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Can't deserialize data [[104, 105, 32, 116, 104, 101, 114, 101]] from topic [customer-topic-2]\r\nCaused by: com.fasterxml.jackson.core.JsonParseException: Unrecognized token 'hi': was expecting (JSON String, Number, Array, Object or token 'null', 'true' or 'false')\n at [Source: (byte[])\"hi there\"; line: 1, column: 4]\r\n\tat com.fasterxml.jackson.core.JsonParser._constructError(JsonParser.java:2337)\r\n\tat com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(ParserMinimalBase.java:720)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportInvalidToken(UTF8StreamJsonParser.java:3593)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleUnexpectedValue(UTF8StreamJsonParser.java:2688)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._nextTokenNotInObject(UTF8StreamJsonParser.java:870)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextToken(UTF8StreamJsonParser.java:762)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._initForReading(ObjectReader.java:355)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._bindAndClose(ObjectReader.java:2023)\r\n\tat com.fasterxml.jackson.databind.ObjectReader.readValue(ObjectReader.java:1528)\r\n\tat org.springframework.kafka.support.serializer.JsonDeserializer.deserialize(JsonDeserializer.java:534)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.parseRecord(Fetcher.java:1387)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.access$3400(Fetcher.java:133)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.fetchRecords(Fetcher.java:1618)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.access$1700(Fetcher.java:1454)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchRecords(Fetcher.java:687)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchedRecords(Fetcher.java:638)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.pollForFetches(KafkaConsumer.java:1272)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1233)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1206)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doPoll(KafkaMessageListenerContainer.java:1410)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1249)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1161)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:46:40.217Z","appMessage":"Consumer exception","class":"org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"ERROR","exception":"java.lang.IllegalStateException: This error handler cannot process 'SerializationException's directly; please consider configuring an 'ErrorHandlingDeserializer' in the value and/or key deserializer\r\n\tat org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:194)\r\n\tat org.springframework.kafka.listener.SeekToCurrentErrorHandler.handle(SeekToCurrentErrorHandler.java:112)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.handleConsumerException(KafkaMessageListenerContainer.java:1599)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1210)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Error deserializing key/value for partition customer-topic-2-0 at offset 0. If needed, please seek past the record to continue consumption.\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Can't deserialize data [[104, 105, 32, 116, 104, 101, 114, 101]] from topic [customer-topic-2]\r\nCaused by: com.fasterxml.jackson.core.JsonParseException: Unrecognized token 'hi': was expecting (JSON String, Number, Array, Object or token 'null', 'true' or 'false')\n at [Source: (byte[])\"hi there\"; line: 1, column: 4]\r\n\tat com.fasterxml.jackson.core.JsonParser._constructError(JsonParser.java:2337)\r\n\tat com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(ParserMinimalBase.java:720)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportInvalidToken(UTF8StreamJsonParser.java:3593)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleUnexpectedValue(UTF8StreamJsonParser.java:2688)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._nextTokenNotInObject(UTF8StreamJsonParser.java:870)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextToken(UTF8StreamJsonParser.java:762)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._initForReading(ObjectReader.java:355)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._bindAndClose(ObjectReader.java:2023)\r\n\tat com.fasterxml.jackson.databind.ObjectReader.readValue(ObjectReader.java:1528)\r\n\tat org.springframework.kafka.support.serializer.JsonDeserializer.deserialize(JsonDeserializer.java:534)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.parseRecord(Fetcher.java:1387)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.access$3400(Fetcher.java:133)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.fetchRecords(Fetcher.java:1618)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.access$1700(Fetcher.java:1454)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchRecords(Fetcher.java:687)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchedRecords(Fetcher.java:638)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.pollForFetches(KafkaConsumer.java:1272)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1233)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1206)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doPoll(KafkaMessageListenerContainer.java:1410)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1249)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1161)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:46:40.221Z","appMessage":"Consumer exception","class":"org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"ERROR","exception":"java.lang.IllegalStateException: This error handler cannot process 'SerializationException's directly; please consider configuring an 'ErrorHandlingDeserializer' in the value and/or key deserializer\r\n\tat org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:194)\r\n\tat org.springframework.kafka.listener.SeekToCurrentErrorHandler.handle(SeekToCurrentErrorHandler.java:112)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.handleConsumerException(KafkaMessageListenerContainer.java:1599)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1210)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Error deserializing key/value for partition customer-topic-2-0 at offset 0. If needed, please seek past the record to continue consumption.\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Can't deserialize data [[104, 105, 32, 116, 104, 101, 114, 101]] from topic [customer-topic-2]\r\nCaused by: com.fasterxml.jackson.core.JsonParseException: Unrecognized token 'hi': was expecting (JSON String, Number, Array, Object or token 'null', 'true' or 'false')\n at [Source: (byte[])\"hi there\"; line: 1, column: 4]\r\n\tat com.fasterxml.jackson.core.JsonParser._constructError(JsonParser.java:2337)\r\n\tat com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(ParserMinimalBase.java:720)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportInvalidToken(UTF8StreamJsonParser.java:3593)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleUnexpectedValue(UTF8StreamJsonParser.java:2688)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._nextTokenNotInObject(UTF8StreamJsonParser.java:870)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextToken(UTF8StreamJsonParser.java:762)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._initForReading(ObjectReader.java:355)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._bindAndClose(ObjectReader.java:2023)\r\n\tat com.fasterxml.jackson.databind.ObjectReader.readValue(ObjectReader.java:1528)\r\n\tat org.springframework.kafka.support.serializer.JsonDeserializer.deserialize(JsonDeserializer.java:534)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.parseRecord(Fetcher.java:1387)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.access$3400(Fetcher.java:133)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.fetchRecords(Fetcher.java:1618)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.access$1700(Fetcher.java:1454)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchRecords(Fetcher.java:687)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchedRecords(Fetcher.java:638)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.pollForFetches(KafkaConsumer.java:1272)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1233)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1206)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doPoll(KafkaMessageListenerContainer.java:1410)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1249)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1161)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:46:40.225Z","appMessage":"Consumer exception","class":"org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"ERROR","exception":"java.lang.IllegalStateException: This error handler cannot process 'SerializationException's directly; please consider configuring an 'ErrorHandlingDeserializer' in the value and/or key deserializer\r\n\tat org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:194)\r\n\tat org.springframework.kafka.listener.SeekToCurrentErrorHandler.handle(SeekToCurrentErrorHandler.java:112)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.handleConsumerException(KafkaMessageListenerContainer.java:1599)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1210)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Error deserializing key/value for partition customer-topic-2-0 at offset 0. If needed, please seek past the record to continue consumption.\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Can't deserialize data [[104, 105, 32, 116, 104, 101, 114, 101]] from topic [customer-topic-2]\r\nCaused by: com.fasterxml.jackson.core.JsonParseException: Unrecognized token 'hi': was expecting (JSON String, Number, Array, Object or token 'null', 'true' or 'false')\n at [Source: (byte[])\"hi there\"; line: 1, column: 4]\r\n\tat com.fasterxml.jackson.core.JsonParser._constructError(JsonParser.java:2337)\r\n\tat com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(ParserMinimalBase.java:720)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportInvalidToken(UTF8StreamJsonParser.java:3593)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleUnexpectedValue(UTF8StreamJsonParser.java:2688)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._nextTokenNotInObject(UTF8StreamJsonParser.java:870)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextToken(UTF8StreamJsonParser.java:762)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._initForReading(ObjectReader.java:355)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._bindAndClose(ObjectReader.java:2023)\r\n\tat com.fasterxml.jackson.databind.ObjectReader.readValue(ObjectReader.java:1528)\r\n\tat org.springframework.kafka.support.serializer.JsonDeserializer.deserialize(JsonDeserializer.java:534)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.parseRecord(Fetcher.java:1387)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.access$3400(Fetcher.java:133)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.fetchRecords(Fetcher.java:1618)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.access$1700(Fetcher.java:1454)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchRecords(Fetcher.java:687)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchedRecords(Fetcher.java:638)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.pollForFetches(KafkaConsumer.java:1272)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1233)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1206)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doPoll(KafkaMessageListenerContainer.java:1410)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1249)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1161)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:46:40.230Z","appMessage":"Consumer exception","class":"org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"ERROR","exception":"java.lang.IllegalStateException: This error handler cannot process 'SerializationException's directly; please consider configuring an 'ErrorHandlingDeserializer' in the value and/or key deserializer\r\n\tat org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:194)\r\n\tat org.springframework.kafka.listener.SeekToCurrentErrorHandler.handle(SeekToCurrentErrorHandler.java:112)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.handleConsumerException(KafkaMessageListenerContainer.java:1599)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1210)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Error deserializing key/value for partition customer-topic-2-0 at offset 0. If needed, please seek past the record to continue consumption.\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Can't deserialize data [[104, 105, 32, 116, 104, 101, 114, 101]] from topic [customer-topic-2]\r\nCaused by: com.fasterxml.jackson.core.JsonParseException: Unrecognized token 'hi': was expecting (JSON String, Number, Array, Object or token 'null', 'true' or 'false')\n at [Source: (byte[])\"hi there\"; line: 1, column: 4]\r\n\tat com.fasterxml.jackson.core.JsonParser._constructError(JsonParser.java:2337)\r\n\tat com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(ParserMinimalBase.java:720)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportInvalidToken(UTF8StreamJsonParser.java:3593)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleUnexpectedValue(UTF8StreamJsonParser.java:2688)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._nextTokenNotInObject(UTF8StreamJsonParser.java:870)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextToken(UTF8StreamJsonParser.java:762)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._initForReading(ObjectReader.java:355)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._bindAndClose(ObjectReader.java:2023)\r\n\tat com.fasterxml.jackson.databind.ObjectReader.readValue(ObjectReader.java:1528)\r\n\tat org.springframework.kafka.support.serializer.JsonDeserializer.deserialize(JsonDeserializer.java:534)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.parseRecord(Fetcher.java:1387)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.access$3400(Fetcher.java:133)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.fetchRecords(Fetcher.java:1618)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.access$1700(Fetcher.java:1454)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchRecords(Fetcher.java:687)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchedRecords(Fetcher.java:638)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.pollForFetches(KafkaConsumer.java:1272)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1233)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1206)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doPoll(KafkaMessageListenerContainer.java:1410)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1249)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1161)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:46:40.234Z","appMessage":"Consumer exception","class":"org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"ERROR","exception":"java.lang.IllegalStateException: This error handler cannot process 'SerializationException's directly; please consider configuring an 'ErrorHandlingDeserializer' in the value and/or key deserializer\r\n\tat org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:194)\r\n\tat org.springframework.kafka.listener.SeekToCurrentErrorHandler.handle(SeekToCurrentErrorHandler.java:112)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.handleConsumerException(KafkaMessageListenerContainer.java:1599)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1210)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Error deserializing key/value for partition customer-topic-2-0 at offset 0. If needed, please seek past the record to continue consumption.\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Can't deserialize data [[104, 105, 32, 116, 104, 101, 114, 101]] from topic [customer-topic-2]\r\nCaused by: com.fasterxml.jackson.core.JsonParseException: Unrecognized token 'hi': was expecting (JSON String, Number, Array, Object or token 'null', 'true' or 'false')\n at [Source: (byte[])\"hi there\"; line: 1, column: 4]\r\n\tat com.fasterxml.jackson.core.JsonParser._constructError(JsonParser.java:2337)\r\n\tat com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(ParserMinimalBase.java:720)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportInvalidToken(UTF8StreamJsonParser.java:3593)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleUnexpectedValue(UTF8StreamJsonParser.java:2688)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._nextTokenNotInObject(UTF8StreamJsonParser.java:870)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextToken(UTF8StreamJsonParser.java:762)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._initForReading(ObjectReader.java:355)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._bindAndClose(ObjectReader.java:2023)\r\n\tat com.fasterxml.jackson.databind.ObjectReader.readValue(ObjectReader.java:1528)\r\n\tat org.springframework.kafka.support.serializer.JsonDeserializer.deserialize(JsonDeserializer.java:534)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.parseRecord(Fetcher.java:1387)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.access$3400(Fetcher.java:133)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.fetchRecords(Fetcher.java:1618)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.access$1700(Fetcher.java:1454)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchRecords(Fetcher.java:687)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchedRecords(Fetcher.java:638)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.pollForFetches(KafkaConsumer.java:1272)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1233)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1206)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doPoll(KafkaMessageListenerContainer.java:1410)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1249)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1161)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:46:40.239Z","appMessage":"Consumer exception","class":"org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"ERROR","exception":"java.lang.IllegalStateException: This error handler cannot process 'SerializationException's directly; please consider configuring an 'ErrorHandlingDeserializer' in the value and/or key deserializer\r\n\tat org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:194)\r\n\tat org.springframework.kafka.listener.SeekToCurrentErrorHandler.handle(SeekToCurrentErrorHandler.java:112)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.handleConsumerException(KafkaMessageListenerContainer.java:1599)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1210)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Error deserializing key/value for partition customer-topic-2-0 at offset 0. If needed, please seek past the record to continue consumption.\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Can't deserialize data [[104, 105, 32, 116, 104, 101, 114, 101]] from topic [customer-topic-2]\r\nCaused by: com.fasterxml.jackson.core.JsonParseException: Unrecognized token 'hi': was expecting (JSON String, Number, Array, Object or token 'null', 'true' or 'false')\n at [Source: (byte[])\"hi there\"; line: 1, column: 4]\r\n\tat com.fasterxml.jackson.core.JsonParser._constructError(JsonParser.java:2337)\r\n\tat com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(ParserMinimalBase.java:720)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportInvalidToken(UTF8StreamJsonParser.java:3593)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleUnexpectedValue(UTF8StreamJsonParser.java:2688)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._nextTokenNotInObject(UTF8StreamJsonParser.java:870)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextToken(UTF8StreamJsonParser.java:762)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._initForReading(ObjectReader.java:355)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._bindAndClose(ObjectReader.java:2023)\r\n\tat com.fasterxml.jackson.databind.ObjectReader.readValue(ObjectReader.java:1528)\r\n\tat org.springframework.kafka.support.serializer.JsonDeserializer.deserialize(JsonDeserializer.java:534)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.parseRecord(Fetcher.java:1387)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.access$3400(Fetcher.java:133)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.fetchRecords(Fetcher.java:1618)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.access$1700(Fetcher.java:1454)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchRecords(Fetcher.java:687)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchedRecords(Fetcher.java:638)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.pollForFetches(KafkaConsumer.java:1272)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1233)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1206)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doPoll(KafkaMessageListenerContainer.java:1410)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1249)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1161)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:46:40.243Z","appMessage":"Consumer exception","class":"org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"ERROR","exception":"java.lang.IllegalStateException: This error handler cannot process 'SerializationException's directly; please consider configuring an 'ErrorHandlingDeserializer' in the value and/or key deserializer\r\n\tat org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:194)\r\n\tat org.springframework.kafka.listener.SeekToCurrentErrorHandler.handle(SeekToCurrentErrorHandler.java:112)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.handleConsumerException(KafkaMessageListenerContainer.java:1599)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1210)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Error deserializing key/value for partition customer-topic-2-0 at offset 0. If needed, please seek past the record to continue consumption.\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Can't deserialize data [[104, 105, 32, 116, 104, 101, 114, 101]] from topic [customer-topic-2]\r\nCaused by: com.fasterxml.jackson.core.JsonParseException: Unrecognized token 'hi': was expecting (JSON String, Number, Array, Object or token 'null', 'true' or 'false')\n at [Source: (byte[])\"hi there\"; line: 1, column: 4]\r\n\tat com.fasterxml.jackson.core.JsonParser._constructError(JsonParser.java:2337)\r\n\tat com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(ParserMinimalBase.java:720)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportInvalidToken(UTF8StreamJsonParser.java:3593)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleUnexpectedValue(UTF8StreamJsonParser.java:2688)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._nextTokenNotInObject(UTF8StreamJsonParser.java:870)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextToken(UTF8StreamJsonParser.java:762)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._initForReading(ObjectReader.java:355)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._bindAndClose(ObjectReader.java:2023)\r\n\tat com.fasterxml.jackson.databind.ObjectReader.readValue(ObjectReader.java:1528)\r\n\tat org.springframework.kafka.support.serializer.JsonDeserializer.deserialize(JsonDeserializer.java:534)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.parseRecord(Fetcher.java:1387)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.access$3400(Fetcher.java:133)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.fetchRecords(Fetcher.java:1618)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.access$1700(Fetcher.java:1454)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchRecords(Fetcher.java:687)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchedRecords(Fetcher.java:638)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.pollForFetches(KafkaConsumer.java:1272)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1233)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1206)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doPoll(KafkaMessageListenerContainer.java:1410)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1249)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1161)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:46:40.248Z","appMessage":"Consumer exception","class":"org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"ERROR","exception":"java.lang.IllegalStateException: This error handler cannot process 'SerializationException's directly; please consider configuring an 'ErrorHandlingDeserializer' in the value and/or key deserializer\r\n\tat org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:194)\r\n\tat org.springframework.kafka.listener.SeekToCurrentErrorHandler.handle(SeekToCurrentErrorHandler.java:112)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.handleConsumerException(KafkaMessageListenerContainer.java:1599)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1210)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Error deserializing key/value for partition customer-topic-2-0 at offset 0. If needed, please seek past the record to continue consumption.\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Can't deserialize data [[104, 105, 32, 116, 104, 101, 114, 101]] from topic [customer-topic-2]\r\nCaused by: com.fasterxml.jackson.core.JsonParseException: Unrecognized token 'hi': was expecting (JSON String, Number, Array, Object or token 'null', 'true' or 'false')\n at [Source: (byte[])\"hi there\"; line: 1, column: 4]\r\n\tat com.fasterxml.jackson.core.JsonParser._constructError(JsonParser.java:2337)\r\n\tat com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(ParserMinimalBase.java:720)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportInvalidToken(UTF8StreamJsonParser.java:3593)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleUnexpectedValue(UTF8StreamJsonParser.java:2688)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._nextTokenNotInObject(UTF8StreamJsonParser.java:870)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextToken(UTF8StreamJsonParser.java:762)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._initForReading(ObjectReader.java:355)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._bindAndClose(ObjectReader.java:2023)\r\n\tat com.fasterxml.jackson.databind.ObjectReader.readValue(ObjectReader.java:1528)\r\n\tat org.springframework.kafka.support.serializer.JsonDeserializer.deserialize(JsonDeserializer.java:534)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.parseRecord(Fetcher.java:1387)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.access$3400(Fetcher.java:133)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.fetchRecords(Fetcher.java:1618)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.access$1700(Fetcher.java:1454)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchRecords(Fetcher.java:687)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchedRecords(Fetcher.java:638)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.pollForFetches(KafkaConsumer.java:1272)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1233)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1206)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doPoll(KafkaMessageListenerContainer.java:1410)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1249)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1161)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:46:40.252Z","appMessage":"Consumer exception","class":"org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"ERROR","exception":"java.lang.IllegalStateException: This error handler cannot process 'SerializationException's directly; please consider configuring an 'ErrorHandlingDeserializer' in the value and/or key deserializer\r\n\tat org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:194)\r\n\tat org.springframework.kafka.listener.SeekToCurrentErrorHandler.handle(SeekToCurrentErrorHandler.java:112)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.handleConsumerException(KafkaMessageListenerContainer.java:1599)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1210)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Error deserializing key/value for partition customer-topic-2-0 at offset 0. If needed, please seek past the record to continue consumption.\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Can't deserialize data [[104, 105, 32, 116, 104, 101, 114, 101]] from topic [customer-topic-2]\r\nCaused by: com.fasterxml.jackson.core.JsonParseException: Unrecognized token 'hi': was expecting (JSON String, Number, Array, Object or token 'null', 'true' or 'false')\n at [Source: (byte[])\"hi there\"; line: 1, column: 4]\r\n\tat com.fasterxml.jackson.core.JsonParser._constructError(JsonParser.java:2337)\r\n\tat com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(ParserMinimalBase.java:720)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportInvalidToken(UTF8StreamJsonParser.java:3593)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleUnexpectedValue(UTF8StreamJsonParser.java:2688)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._nextTokenNotInObject(UTF8StreamJsonParser.java:870)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextToken(UTF8StreamJsonParser.java:762)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._initForReading(ObjectReader.java:355)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._bindAndClose(ObjectReader.java:2023)\r\n\tat com.fasterxml.jackson.databind.ObjectReader.readValue(ObjectReader.java:1528)\r\n\tat org.springframework.kafka.support.serializer.JsonDeserializer.deserialize(JsonDeserializer.java:534)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.parseRecord(Fetcher.java:1387)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.access$3400(Fetcher.java:133)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.fetchRecords(Fetcher.java:1618)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.access$1700(Fetcher.java:1454)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchRecords(Fetcher.java:687)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchedRecords(Fetcher.java:638)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.pollForFetches(KafkaConsumer.java:1272)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1233)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1206)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doPoll(KafkaMessageListenerContainer.java:1410)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1249)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1161)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:46:40.257Z","appMessage":"Consumer exception","class":"org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"ERROR","exception":"java.lang.IllegalStateException: This error handler cannot process 'SerializationException's directly; please consider configuring an 'ErrorHandlingDeserializer' in the value and/or key deserializer\r\n\tat org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:194)\r\n\tat org.springframework.kafka.listener.SeekToCurrentErrorHandler.handle(SeekToCurrentErrorHandler.java:112)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.handleConsumerException(KafkaMessageListenerContainer.java:1599)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1210)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Error deserializing key/value for partition customer-topic-2-0 at offset 0. If needed, please seek past the record to continue consumption.\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Can't deserialize data [[104, 105, 32, 116, 104, 101, 114, 101]] from topic [customer-topic-2]\r\nCaused by: com.fasterxml.jackson.core.JsonParseException: Unrecognized token 'hi': was expecting (JSON String, Number, Array, Object or token 'null', 'true' or 'false')\n at [Source: (byte[])\"hi there\"; line: 1, column: 4]\r\n\tat com.fasterxml.jackson.core.JsonParser._constructError(JsonParser.java:2337)\r\n\tat com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(ParserMinimalBase.java:720)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportInvalidToken(UTF8StreamJsonParser.java:3593)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleUnexpectedValue(UTF8StreamJsonParser.java:2688)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._nextTokenNotInObject(UTF8StreamJsonParser.java:870)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextToken(UTF8StreamJsonParser.java:762)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._initForReading(ObjectReader.java:355)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._bindAndClose(ObjectReader.java:2023)\r\n\tat com.fasterxml.jackson.databind.ObjectReader.readValue(ObjectReader.java:1528)\r\n\tat org.springframework.kafka.support.serializer.JsonDeserializer.deserialize(JsonDeserializer.java:534)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.parseRecord(Fetcher.java:1387)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.access$3400(Fetcher.java:133)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.fetchRecords(Fetcher.java:1618)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.access$1700(Fetcher.java:1454)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchRecords(Fetcher.java:687)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchedRecords(Fetcher.java:638)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.pollForFetches(KafkaConsumer.java:1272)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1233)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1206)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doPoll(KafkaMessageListenerContainer.java:1410)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1249)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1161)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:46:40.261Z","appMessage":"Consumer exception","class":"org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"ERROR","exception":"java.lang.IllegalStateException: This error handler cannot process 'SerializationException's directly; please consider configuring an 'ErrorHandlingDeserializer' in the value and/or key deserializer\r\n\tat org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:194)\r\n\tat org.springframework.kafka.listener.SeekToCurrentErrorHandler.handle(SeekToCurrentErrorHandler.java:112)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.handleConsumerException(KafkaMessageListenerContainer.java:1599)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1210)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Error deserializing key/value for partition customer-topic-2-0 at offset 0. If needed, please seek past the record to continue consumption.\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Can't deserialize data [[104, 105, 32, 116, 104, 101, 114, 101]] from topic [customer-topic-2]\r\nCaused by: com.fasterxml.jackson.core.JsonParseException: Unrecognized token 'hi': was expecting (JSON String, Number, Array, Object or token 'null', 'true' or 'false')\n at [Source: (byte[])\"hi there\"; line: 1, column: 4]\r\n\tat com.fasterxml.jackson.core.JsonParser._constructError(JsonParser.java:2337)\r\n\tat com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(ParserMinimalBase.java:720)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportInvalidToken(UTF8StreamJsonParser.java:3593)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleUnexpectedValue(UTF8StreamJsonParser.java:2688)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._nextTokenNotInObject(UTF8StreamJsonParser.java:870)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextToken(UTF8StreamJsonParser.java:762)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._initForReading(ObjectReader.java:355)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._bindAndClose(ObjectReader.java:2023)\r\n\tat com.fasterxml.jackson.databind.ObjectReader.readValue(ObjectReader.java:1528)\r\n\tat org.springframework.kafka.support.serializer.JsonDeserializer.deserialize(JsonDeserializer.java:534)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.parseRecord(Fetcher.java:1387)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.access$3400(Fetcher.java:133)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.fetchRecords(Fetcher.java:1618)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.access$1700(Fetcher.java:1454)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchRecords(Fetcher.java:687)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchedRecords(Fetcher.java:638)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.pollForFetches(KafkaConsumer.java:1272)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1233)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1206)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doPoll(KafkaMessageListenerContainer.java:1410)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1249)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1161)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:46:40.266Z","appMessage":"Consumer exception","class":"org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"ERROR","exception":"java.lang.IllegalStateException: This error handler cannot process 'SerializationException's directly; please consider configuring an 'ErrorHandlingDeserializer' in the value and/or key deserializer\r\n\tat org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:194)\r\n\tat org.springframework.kafka.listener.SeekToCurrentErrorHandler.handle(SeekToCurrentErrorHandler.java:112)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.handleConsumerException(KafkaMessageListenerContainer.java:1599)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1210)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Error deserializing key/value for partition customer-topic-2-0 at offset 0. If needed, please seek past the record to continue consumption.\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Can't deserialize data [[104, 105, 32, 116, 104, 101, 114, 101]] from topic [customer-topic-2]\r\nCaused by: com.fasterxml.jackson.core.JsonParseException: Unrecognized token 'hi': was expecting (JSON String, Number, Array, Object or token 'null', 'true' or 'false')\n at [Source: (byte[])\"hi there\"; line: 1, column: 4]\r\n\tat com.fasterxml.jackson.core.JsonParser._constructError(JsonParser.java:2337)\r\n\tat com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(ParserMinimalBase.java:720)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportInvalidToken(UTF8StreamJsonParser.java:3593)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleUnexpectedValue(UTF8StreamJsonParser.java:2688)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._nextTokenNotInObject(UTF8StreamJsonParser.java:870)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextToken(UTF8StreamJsonParser.java:762)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._initForReading(ObjectReader.java:355)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._bindAndClose(ObjectReader.java:2023)\r\n\tat com.fasterxml.jackson.databind.ObjectReader.readValue(ObjectReader.java:1528)\r\n\tat org.springframework.kafka.support.serializer.JsonDeserializer.deserialize(JsonDeserializer.java:534)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.parseRecord(Fetcher.java:1387)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.access$3400(Fetcher.java:133)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.fetchRecords(Fetcher.java:1618)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.access$1700(Fetcher.java:1454)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchRecords(Fetcher.java:687)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchedRecords(Fetcher.java:638)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.pollForFetches(KafkaConsumer.java:1272)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1233)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1206)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doPoll(KafkaMessageListenerContainer.java:1410)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1249)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1161)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:46:40.271Z","appMessage":"Consumer exception","class":"org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"ERROR","exception":"java.lang.IllegalStateException: This error handler cannot process 'SerializationException's directly; please consider configuring an 'ErrorHandlingDeserializer' in the value and/or key deserializer\r\n\tat org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:194)\r\n\tat org.springframework.kafka.listener.SeekToCurrentErrorHandler.handle(SeekToCurrentErrorHandler.java:112)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.handleConsumerException(KafkaMessageListenerContainer.java:1599)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1210)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Error deserializing key/value for partition customer-topic-2-0 at offset 0. If needed, please seek past the record to continue consumption.\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Can't deserialize data [[104, 105, 32, 116, 104, 101, 114, 101]] from topic [customer-topic-2]\r\nCaused by: com.fasterxml.jackson.core.JsonParseException: Unrecognized token 'hi': was expecting (JSON String, Number, Array, Object or token 'null', 'true' or 'false')\n at [Source: (byte[])\"hi there\"; line: 1, column: 4]\r\n\tat com.fasterxml.jackson.core.JsonParser._constructError(JsonParser.java:2337)\r\n\tat com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(ParserMinimalBase.java:720)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportInvalidToken(UTF8StreamJsonParser.java:3593)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleUnexpectedValue(UTF8StreamJsonParser.java:2688)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._nextTokenNotInObject(UTF8StreamJsonParser.java:870)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextToken(UTF8StreamJsonParser.java:762)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._initForReading(ObjectReader.java:355)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._bindAndClose(ObjectReader.java:2023)\r\n\tat com.fasterxml.jackson.databind.ObjectReader.readValue(ObjectReader.java:1528)\r\n\tat org.springframework.kafka.support.serializer.JsonDeserializer.deserialize(JsonDeserializer.java:534)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.parseRecord(Fetcher.java:1387)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.access$3400(Fetcher.java:133)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.fetchRecords(Fetcher.java:1618)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.access$1700(Fetcher.java:1454)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchRecords(Fetcher.java:687)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchedRecords(Fetcher.java:638)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.pollForFetches(KafkaConsumer.java:1272)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1233)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1206)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doPoll(KafkaMessageListenerContainer.java:1410)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1249)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1161)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:46:40.276Z","appMessage":"Consumer exception","class":"org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"ERROR","exception":"java.lang.IllegalStateException: This error handler cannot process 'SerializationException's directly; please consider configuring an 'ErrorHandlingDeserializer' in the value and/or key deserializer\r\n\tat org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:194)\r\n\tat org.springframework.kafka.listener.SeekToCurrentErrorHandler.handle(SeekToCurrentErrorHandler.java:112)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.handleConsumerException(KafkaMessageListenerContainer.java:1599)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1210)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Error deserializing key/value for partition customer-topic-2-0 at offset 0. If needed, please seek past the record to continue consumption.\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Can't deserialize data [[104, 105, 32, 116, 104, 101, 114, 101]] from topic [customer-topic-2]\r\nCaused by: com.fasterxml.jackson.core.JsonParseException: Unrecognized token 'hi': was expecting (JSON String, Number, Array, Object or token 'null', 'true' or 'false')\n at [Source: (byte[])\"hi there\"; line: 1, column: 4]\r\n\tat com.fasterxml.jackson.core.JsonParser._constructError(JsonParser.java:2337)\r\n\tat com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(ParserMinimalBase.java:720)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportInvalidToken(UTF8StreamJsonParser.java:3593)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleUnexpectedValue(UTF8StreamJsonParser.java:2688)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._nextTokenNotInObject(UTF8StreamJsonParser.java:870)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextToken(UTF8StreamJsonParser.java:762)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._initForReading(ObjectReader.java:355)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._bindAndClose(ObjectReader.java:2023)\r\n\tat com.fasterxml.jackson.databind.ObjectReader.readValue(ObjectReader.java:1528)\r\n\tat org.springframework.kafka.support.serializer.JsonDeserializer.deserialize(JsonDeserializer.java:534)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.parseRecord(Fetcher.java:1387)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.access$3400(Fetcher.java:133)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.fetchRecords(Fetcher.java:1618)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.access$1700(Fetcher.java:1454)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchRecords(Fetcher.java:687)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchedRecords(Fetcher.java:638)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.pollForFetches(KafkaConsumer.java:1272)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1233)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1206)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doPoll(KafkaMessageListenerContainer.java:1410)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1249)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1161)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:46:40.280Z","appMessage":"Consumer exception","class":"org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"ERROR","exception":"java.lang.IllegalStateException: This error handler cannot process 'SerializationException's directly; please consider configuring an 'ErrorHandlingDeserializer' in the value and/or key deserializer\r\n\tat org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:194)\r\n\tat org.springframework.kafka.listener.SeekToCurrentErrorHandler.handle(SeekToCurrentErrorHandler.java:112)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.handleConsumerException(KafkaMessageListenerContainer.java:1599)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1210)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Error deserializing key/value for partition customer-topic-2-0 at offset 0. If needed, please seek past the record to continue consumption.\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Can't deserialize data [[104, 105, 32, 116, 104, 101, 114, 101]] from topic [customer-topic-2]\r\nCaused by: com.fasterxml.jackson.core.JsonParseException: Unrecognized token 'hi': was expecting (JSON String, Number, Array, Object or token 'null', 'true' or 'false')\n at [Source: (byte[])\"hi there\"; line: 1, column: 4]\r\n\tat com.fasterxml.jackson.core.JsonParser._constructError(JsonParser.java:2337)\r\n\tat com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(ParserMinimalBase.java:720)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportInvalidToken(UTF8StreamJsonParser.java:3593)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleUnexpectedValue(UTF8StreamJsonParser.java:2688)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._nextTokenNotInObject(UTF8StreamJsonParser.java:870)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextToken(UTF8StreamJsonParser.java:762)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._initForReading(ObjectReader.java:355)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._bindAndClose(ObjectReader.java:2023)\r\n\tat com.fasterxml.jackson.databind.ObjectReader.readValue(ObjectReader.java:1528)\r\n\tat org.springframework.kafka.support.serializer.JsonDeserializer.deserialize(JsonDeserializer.java:534)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.parseRecord(Fetcher.java:1387)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.access$3400(Fetcher.java:133)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.fetchRecords(Fetcher.java:1618)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.access$1700(Fetcher.java:1454)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchRecords(Fetcher.java:687)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchedRecords(Fetcher.java:638)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.pollForFetches(KafkaConsumer.java:1272)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1233)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1206)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doPoll(KafkaMessageListenerContainer.java:1410)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1249)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1161)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:46:40.285Z","appMessage":"Consumer exception","class":"org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"ERROR","exception":"java.lang.IllegalStateException: This error handler cannot process 'SerializationException's directly; please consider configuring an 'ErrorHandlingDeserializer' in the value and/or key deserializer\r\n\tat org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:194)\r\n\tat org.springframework.kafka.listener.SeekToCurrentErrorHandler.handle(SeekToCurrentErrorHandler.java:112)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.handleConsumerException(KafkaMessageListenerContainer.java:1599)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1210)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Error deserializing key/value for partition customer-topic-2-0 at offset 0. If needed, please seek past the record to continue consumption.\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Can't deserialize data [[104, 105, 32, 116, 104, 101, 114, 101]] from topic [customer-topic-2]\r\nCaused by: com.fasterxml.jackson.core.JsonParseException: Unrecognized token 'hi': was expecting (JSON String, Number, Array, Object or token 'null', 'true' or 'false')\n at [Source: (byte[])\"hi there\"; line: 1, column: 4]\r\n\tat com.fasterxml.jackson.core.JsonParser._constructError(JsonParser.java:2337)\r\n\tat com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(ParserMinimalBase.java:720)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportInvalidToken(UTF8StreamJsonParser.java:3593)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleUnexpectedValue(UTF8StreamJsonParser.java:2688)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._nextTokenNotInObject(UTF8StreamJsonParser.java:870)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextToken(UTF8StreamJsonParser.java:762)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._initForReading(ObjectReader.java:355)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._bindAndClose(ObjectReader.java:2023)\r\n\tat com.fasterxml.jackson.databind.ObjectReader.readValue(ObjectReader.java:1528)\r\n\tat org.springframework.kafka.support.serializer.JsonDeserializer.deserialize(JsonDeserializer.java:534)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.parseRecord(Fetcher.java:1387)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.access$3400(Fetcher.java:133)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.fetchRecords(Fetcher.java:1618)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.access$1700(Fetcher.java:1454)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchRecords(Fetcher.java:687)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchedRecords(Fetcher.java:638)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.pollForFetches(KafkaConsumer.java:1272)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1233)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1206)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doPoll(KafkaMessageListenerContainer.java:1410)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1249)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1161)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:46:40.291Z","appMessage":"Consumer exception","class":"org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"ERROR","exception":"java.lang.IllegalStateException: This error handler cannot process 'SerializationException's directly; please consider configuring an 'ErrorHandlingDeserializer' in the value and/or key deserializer\r\n\tat org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:194)\r\n\tat org.springframework.kafka.listener.SeekToCurrentErrorHandler.handle(SeekToCurrentErrorHandler.java:112)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.handleConsumerException(KafkaMessageListenerContainer.java:1599)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1210)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Error deserializing key/value for partition customer-topic-2-0 at offset 0. If needed, please seek past the record to continue consumption.\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Can't deserialize data [[104, 105, 32, 116, 104, 101, 114, 101]] from topic [customer-topic-2]\r\nCaused by: com.fasterxml.jackson.core.JsonParseException: Unrecognized token 'hi': was expecting (JSON String, Number, Array, Object or token 'null', 'true' or 'false')\n at [Source: (byte[])\"hi there\"; line: 1, column: 4]\r\n\tat com.fasterxml.jackson.core.JsonParser._constructError(JsonParser.java:2337)\r\n\tat com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(ParserMinimalBase.java:720)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportInvalidToken(UTF8StreamJsonParser.java:3593)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleUnexpectedValue(UTF8StreamJsonParser.java:2688)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._nextTokenNotInObject(UTF8StreamJsonParser.java:870)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextToken(UTF8StreamJsonParser.java:762)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._initForReading(ObjectReader.java:355)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._bindAndClose(ObjectReader.java:2023)\r\n\tat com.fasterxml.jackson.databind.ObjectReader.readValue(ObjectReader.java:1528)\r\n\tat org.springframework.kafka.support.serializer.JsonDeserializer.deserialize(JsonDeserializer.java:534)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.parseRecord(Fetcher.java:1387)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.access$3400(Fetcher.java:133)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.fetchRecords(Fetcher.java:1618)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.access$1700(Fetcher.java:1454)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchRecords(Fetcher.java:687)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchedRecords(Fetcher.java:638)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.pollForFetches(KafkaConsumer.java:1272)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1233)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1206)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doPoll(KafkaMessageListenerContainer.java:1410)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1249)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1161)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:46:40.297Z","appMessage":"Consumer exception","class":"org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"ERROR","exception":"java.lang.IllegalStateException: This error handler cannot process 'SerializationException's directly; please consider configuring an 'ErrorHandlingDeserializer' in the value and/or key deserializer\r\n\tat org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:194)\r\n\tat org.springframework.kafka.listener.SeekToCurrentErrorHandler.handle(SeekToCurrentErrorHandler.java:112)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.handleConsumerException(KafkaMessageListenerContainer.java:1599)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1210)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Error deserializing key/value for partition customer-topic-2-0 at offset 0. If needed, please seek past the record to continue consumption.\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Can't deserialize data [[104, 105, 32, 116, 104, 101, 114, 101]] from topic [customer-topic-2]\r\nCaused by: com.fasterxml.jackson.core.JsonParseException: Unrecognized token 'hi': was expecting (JSON String, Number, Array, Object or token 'null', 'true' or 'false')\n at [Source: (byte[])\"hi there\"; line: 1, column: 4]\r\n\tat com.fasterxml.jackson.core.JsonParser._constructError(JsonParser.java:2337)\r\n\tat com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(ParserMinimalBase.java:720)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportInvalidToken(UTF8StreamJsonParser.java:3593)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleUnexpectedValue(UTF8StreamJsonParser.java:2688)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._nextTokenNotInObject(UTF8StreamJsonParser.java:870)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextToken(UTF8StreamJsonParser.java:762)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._initForReading(ObjectReader.java:355)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._bindAndClose(ObjectReader.java:2023)\r\n\tat com.fasterxml.jackson.databind.ObjectReader.readValue(ObjectReader.java:1528)\r\n\tat org.springframework.kafka.support.serializer.JsonDeserializer.deserialize(JsonDeserializer.java:534)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.parseRecord(Fetcher.java:1387)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.access$3400(Fetcher.java:133)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.fetchRecords(Fetcher.java:1618)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.access$1700(Fetcher.java:1454)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchRecords(Fetcher.java:687)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchedRecords(Fetcher.java:638)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.pollForFetches(KafkaConsumer.java:1272)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1233)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1206)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doPoll(KafkaMessageListenerContainer.java:1410)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1249)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1161)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:46:40.304Z","appMessage":"Consumer exception","class":"org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"ERROR","exception":"java.lang.IllegalStateException: This error handler cannot process 'SerializationException's directly; please consider configuring an 'ErrorHandlingDeserializer' in the value and/or key deserializer\r\n\tat org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:194)\r\n\tat org.springframework.kafka.listener.SeekToCurrentErrorHandler.handle(SeekToCurrentErrorHandler.java:112)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.handleConsumerException(KafkaMessageListenerContainer.java:1599)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1210)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Error deserializing key/value for partition customer-topic-2-0 at offset 0. If needed, please seek past the record to continue consumption.\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Can't deserialize data [[104, 105, 32, 116, 104, 101, 114, 101]] from topic [customer-topic-2]\r\nCaused by: com.fasterxml.jackson.core.JsonParseException: Unrecognized token 'hi': was expecting (JSON String, Number, Array, Object or token 'null', 'true' or 'false')\n at [Source: (byte[])\"hi there\"; line: 1, column: 4]\r\n\tat com.fasterxml.jackson.core.JsonParser._constructError(JsonParser.java:2337)\r\n\tat com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(ParserMinimalBase.java:720)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportInvalidToken(UTF8StreamJsonParser.java:3593)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleUnexpectedValue(UTF8StreamJsonParser.java:2688)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._nextTokenNotInObject(UTF8StreamJsonParser.java:870)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextToken(UTF8StreamJsonParser.java:762)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._initForReading(ObjectReader.java:355)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._bindAndClose(ObjectReader.java:2023)\r\n\tat com.fasterxml.jackson.databind.ObjectReader.readValue(ObjectReader.java:1528)\r\n\tat org.springframework.kafka.support.serializer.JsonDeserializer.deserialize(JsonDeserializer.java:534)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.parseRecord(Fetcher.java:1387)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.access$3400(Fetcher.java:133)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.fetchRecords(Fetcher.java:1618)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.access$1700(Fetcher.java:1454)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchRecords(Fetcher.java:687)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchedRecords(Fetcher.java:638)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.pollForFetches(KafkaConsumer.java:1272)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1233)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1206)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doPoll(KafkaMessageListenerContainer.java:1410)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1249)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1161)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:46:40.310Z","appMessage":"Consumer exception","class":"org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"ERROR","exception":"java.lang.IllegalStateException: This error handler cannot process 'SerializationException's directly; please consider configuring an 'ErrorHandlingDeserializer' in the value and/or key deserializer\r\n\tat org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:194)\r\n\tat org.springframework.kafka.listener.SeekToCurrentErrorHandler.handle(SeekToCurrentErrorHandler.java:112)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.handleConsumerException(KafkaMessageListenerContainer.java:1599)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1210)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Error deserializing key/value for partition customer-topic-2-0 at offset 0. If needed, please seek past the record to continue consumption.\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Can't deserialize data [[104, 105, 32, 116, 104, 101, 114, 101]] from topic [customer-topic-2]\r\nCaused by: com.fasterxml.jackson.core.JsonParseException: Unrecognized token 'hi': was expecting (JSON String, Number, Array, Object or token 'null', 'true' or 'false')\n at [Source: (byte[])\"hi there\"; line: 1, column: 4]\r\n\tat com.fasterxml.jackson.core.JsonParser._constructError(JsonParser.java:2337)\r\n\tat com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(ParserMinimalBase.java:720)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportInvalidToken(UTF8StreamJsonParser.java:3593)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleUnexpectedValue(UTF8StreamJsonParser.java:2688)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._nextTokenNotInObject(UTF8StreamJsonParser.java:870)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextToken(UTF8StreamJsonParser.java:762)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._initForReading(ObjectReader.java:355)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._bindAndClose(ObjectReader.java:2023)\r\n\tat com.fasterxml.jackson.databind.ObjectReader.readValue(ObjectReader.java:1528)\r\n\tat org.springframework.kafka.support.serializer.JsonDeserializer.deserialize(JsonDeserializer.java:534)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.parseRecord(Fetcher.java:1387)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.access$3400(Fetcher.java:133)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.fetchRecords(Fetcher.java:1618)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.access$1700(Fetcher.java:1454)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchRecords(Fetcher.java:687)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchedRecords(Fetcher.java:638)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.pollForFetches(KafkaConsumer.java:1272)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1233)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1206)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doPoll(KafkaMessageListenerContainer.java:1410)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1249)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1161)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:46:40.315Z","appMessage":"Consumer exception","class":"org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"ERROR","exception":"java.lang.IllegalStateException: This error handler cannot process 'SerializationException's directly; please consider configuring an 'ErrorHandlingDeserializer' in the value and/or key deserializer\r\n\tat org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:194)\r\n\tat org.springframework.kafka.listener.SeekToCurrentErrorHandler.handle(SeekToCurrentErrorHandler.java:112)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.handleConsumerException(KafkaMessageListenerContainer.java:1599)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1210)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Error deserializing key/value for partition customer-topic-2-0 at offset 0. If needed, please seek past the record to continue consumption.\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Can't deserialize data [[104, 105, 32, 116, 104, 101, 114, 101]] from topic [customer-topic-2]\r\nCaused by: com.fasterxml.jackson.core.JsonParseException: Unrecognized token 'hi': was expecting (JSON String, Number, Array, Object or token 'null', 'true' or 'false')\n at [Source: (byte[])\"hi there\"; line: 1, column: 4]\r\n\tat com.fasterxml.jackson.core.JsonParser._constructError(JsonParser.java:2337)\r\n\tat com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(ParserMinimalBase.java:720)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportInvalidToken(UTF8StreamJsonParser.java:3593)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleUnexpectedValue(UTF8StreamJsonParser.java:2688)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._nextTokenNotInObject(UTF8StreamJsonParser.java:870)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextToken(UTF8StreamJsonParser.java:762)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._initForReading(ObjectReader.java:355)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._bindAndClose(ObjectReader.java:2023)\r\n\tat com.fasterxml.jackson.databind.ObjectReader.readValue(ObjectReader.java:1528)\r\n\tat org.springframework.kafka.support.serializer.JsonDeserializer.deserialize(JsonDeserializer.java:534)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.parseRecord(Fetcher.java:1387)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.access$3400(Fetcher.java:133)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.fetchRecords(Fetcher.java:1618)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.access$1700(Fetcher.java:1454)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchRecords(Fetcher.java:687)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchedRecords(Fetcher.java:638)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.pollForFetches(KafkaConsumer.java:1272)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1233)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1206)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doPoll(KafkaMessageListenerContainer.java:1410)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1249)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1161)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:46:40.320Z","appMessage":"Consumer exception","class":"org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"ERROR","exception":"java.lang.IllegalStateException: This error handler cannot process 'SerializationException's directly; please consider configuring an 'ErrorHandlingDeserializer' in the value and/or key deserializer\r\n\tat org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:194)\r\n\tat org.springframework.kafka.listener.SeekToCurrentErrorHandler.handle(SeekToCurrentErrorHandler.java:112)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.handleConsumerException(KafkaMessageListenerContainer.java:1599)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1210)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Error deserializing key/value for partition customer-topic-2-0 at offset 0. If needed, please seek past the record to continue consumption.\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Can't deserialize data [[104, 105, 32, 116, 104, 101, 114, 101]] from topic [customer-topic-2]\r\nCaused by: com.fasterxml.jackson.core.JsonParseException: Unrecognized token 'hi': was expecting (JSON String, Number, Array, Object or token 'null', 'true' or 'false')\n at [Source: (byte[])\"hi there\"; line: 1, column: 4]\r\n\tat com.fasterxml.jackson.core.JsonParser._constructError(JsonParser.java:2337)\r\n\tat com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(ParserMinimalBase.java:720)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportInvalidToken(UTF8StreamJsonParser.java:3593)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleUnexpectedValue(UTF8StreamJsonParser.java:2688)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._nextTokenNotInObject(UTF8StreamJsonParser.java:870)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextToken(UTF8StreamJsonParser.java:762)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._initForReading(ObjectReader.java:355)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._bindAndClose(ObjectReader.java:2023)\r\n\tat com.fasterxml.jackson.databind.ObjectReader.readValue(ObjectReader.java:1528)\r\n\tat org.springframework.kafka.support.serializer.JsonDeserializer.deserialize(JsonDeserializer.java:534)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.parseRecord(Fetcher.java:1387)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.access$3400(Fetcher.java:133)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.fetchRecords(Fetcher.java:1618)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.access$1700(Fetcher.java:1454)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchRecords(Fetcher.java:687)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchedRecords(Fetcher.java:638)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.pollForFetches(KafkaConsumer.java:1272)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1233)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1206)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doPoll(KafkaMessageListenerContainer.java:1410)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1249)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1161)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:46:40.325Z","appMessage":"Consumer exception","class":"org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"ERROR","exception":"java.lang.IllegalStateException: This error handler cannot process 'SerializationException's directly; please consider configuring an 'ErrorHandlingDeserializer' in the value and/or key deserializer\r\n\tat org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:194)\r\n\tat org.springframework.kafka.listener.SeekToCurrentErrorHandler.handle(SeekToCurrentErrorHandler.java:112)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.handleConsumerException(KafkaMessageListenerContainer.java:1599)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1210)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Error deserializing key/value for partition customer-topic-2-0 at offset 0. If needed, please seek past the record to continue consumption.\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Can't deserialize data [[104, 105, 32, 116, 104, 101, 114, 101]] from topic [customer-topic-2]\r\nCaused by: com.fasterxml.jackson.core.JsonParseException: Unrecognized token 'hi': was expecting (JSON String, Number, Array, Object or token 'null', 'true' or 'false')\n at [Source: (byte[])\"hi there\"; line: 1, column: 4]\r\n\tat com.fasterxml.jackson.core.JsonParser._constructError(JsonParser.java:2337)\r\n\tat com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(ParserMinimalBase.java:720)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportInvalidToken(UTF8StreamJsonParser.java:3593)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleUnexpectedValue(UTF8StreamJsonParser.java:2688)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._nextTokenNotInObject(UTF8StreamJsonParser.java:870)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextToken(UTF8StreamJsonParser.java:762)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._initForReading(ObjectReader.java:355)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._bindAndClose(ObjectReader.java:2023)\r\n\tat com.fasterxml.jackson.databind.ObjectReader.readValue(ObjectReader.java:1528)\r\n\tat org.springframework.kafka.support.serializer.JsonDeserializer.deserialize(JsonDeserializer.java:534)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.parseRecord(Fetcher.java:1387)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.access$3400(Fetcher.java:133)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.fetchRecords(Fetcher.java:1618)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.access$1700(Fetcher.java:1454)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchRecords(Fetcher.java:687)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchedRecords(Fetcher.java:638)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.pollForFetches(KafkaConsumer.java:1272)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1233)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1206)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doPoll(KafkaMessageListenerContainer.java:1410)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1249)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1161)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:46:40.330Z","appMessage":"Consumer exception","class":"org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"ERROR","exception":"java.lang.IllegalStateException: This error handler cannot process 'SerializationException's directly; please consider configuring an 'ErrorHandlingDeserializer' in the value and/or key deserializer\r\n\tat org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:194)\r\n\tat org.springframework.kafka.listener.SeekToCurrentErrorHandler.handle(SeekToCurrentErrorHandler.java:112)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.handleConsumerException(KafkaMessageListenerContainer.java:1599)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1210)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Error deserializing key/value for partition customer-topic-2-0 at offset 0. If needed, please seek past the record to continue consumption.\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Can't deserialize data [[104, 105, 32, 116, 104, 101, 114, 101]] from topic [customer-topic-2]\r\nCaused by: com.fasterxml.jackson.core.JsonParseException: Unrecognized token 'hi': was expecting (JSON String, Number, Array, Object or token 'null', 'true' or 'false')\n at [Source: (byte[])\"hi there\"; line: 1, column: 4]\r\n\tat com.fasterxml.jackson.core.JsonParser._constructError(JsonParser.java:2337)\r\n\tat com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(ParserMinimalBase.java:720)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportInvalidToken(UTF8StreamJsonParser.java:3593)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleUnexpectedValue(UTF8StreamJsonParser.java:2688)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._nextTokenNotInObject(UTF8StreamJsonParser.java:870)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextToken(UTF8StreamJsonParser.java:762)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._initForReading(ObjectReader.java:355)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._bindAndClose(ObjectReader.java:2023)\r\n\tat com.fasterxml.jackson.databind.ObjectReader.readValue(ObjectReader.java:1528)\r\n\tat org.springframework.kafka.support.serializer.JsonDeserializer.deserialize(JsonDeserializer.java:534)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.parseRecord(Fetcher.java:1387)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.access$3400(Fetcher.java:133)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.fetchRecords(Fetcher.java:1618)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.access$1700(Fetcher.java:1454)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchRecords(Fetcher.java:687)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchedRecords(Fetcher.java:638)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.pollForFetches(KafkaConsumer.java:1272)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1233)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1206)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doPoll(KafkaMessageListenerContainer.java:1410)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1249)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1161)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:46:40.334Z","appMessage":"Consumer exception","class":"org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"ERROR","exception":"java.lang.IllegalStateException: This error handler cannot process 'SerializationException's directly; please consider configuring an 'ErrorHandlingDeserializer' in the value and/or key deserializer\r\n\tat org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:194)\r\n\tat org.springframework.kafka.listener.SeekToCurrentErrorHandler.handle(SeekToCurrentErrorHandler.java:112)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.handleConsumerException(KafkaMessageListenerContainer.java:1599)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1210)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Error deserializing key/value for partition customer-topic-2-0 at offset 0. If needed, please seek past the record to continue consumption.\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Can't deserialize data [[104, 105, 32, 116, 104, 101, 114, 101]] from topic [customer-topic-2]\r\nCaused by: com.fasterxml.jackson.core.JsonParseException: Unrecognized token 'hi': was expecting (JSON String, Number, Array, Object or token 'null', 'true' or 'false')\n at [Source: (byte[])\"hi there\"; line: 1, column: 4]\r\n\tat com.fasterxml.jackson.core.JsonParser._constructError(JsonParser.java:2337)\r\n\tat com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(ParserMinimalBase.java:720)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportInvalidToken(UTF8StreamJsonParser.java:3593)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleUnexpectedValue(UTF8StreamJsonParser.java:2688)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._nextTokenNotInObject(UTF8StreamJsonParser.java:870)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextToken(UTF8StreamJsonParser.java:762)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._initForReading(ObjectReader.java:355)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._bindAndClose(ObjectReader.java:2023)\r\n\tat com.fasterxml.jackson.databind.ObjectReader.readValue(ObjectReader.java:1528)\r\n\tat org.springframework.kafka.support.serializer.JsonDeserializer.deserialize(JsonDeserializer.java:534)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.parseRecord(Fetcher.java:1387)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.access$3400(Fetcher.java:133)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.fetchRecords(Fetcher.java:1618)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.access$1700(Fetcher.java:1454)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchRecords(Fetcher.java:687)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchedRecords(Fetcher.java:638)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.pollForFetches(KafkaConsumer.java:1272)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1233)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1206)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doPoll(KafkaMessageListenerContainer.java:1410)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1249)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1161)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:46:40.338Z","appMessage":"Consumer exception","class":"org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"ERROR","exception":"java.lang.IllegalStateException: This error handler cannot process 'SerializationException's directly; please consider configuring an 'ErrorHandlingDeserializer' in the value and/or key deserializer\r\n\tat org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:194)\r\n\tat org.springframework.kafka.listener.SeekToCurrentErrorHandler.handle(SeekToCurrentErrorHandler.java:112)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.handleConsumerException(KafkaMessageListenerContainer.java:1599)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1210)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Error deserializing key/value for partition customer-topic-2-0 at offset 0. If needed, please seek past the record to continue consumption.\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Can't deserialize data [[104, 105, 32, 116, 104, 101, 114, 101]] from topic [customer-topic-2]\r\nCaused by: com.fasterxml.jackson.core.JsonParseException: Unrecognized token 'hi': was expecting (JSON String, Number, Array, Object or token 'null', 'true' or 'false')\n at [Source: (byte[])\"hi there\"; line: 1, column: 4]\r\n\tat com.fasterxml.jackson.core.JsonParser._constructError(JsonParser.java:2337)\r\n\tat com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(ParserMinimalBase.java:720)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportInvalidToken(UTF8StreamJsonParser.java:3593)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleUnexpectedValue(UTF8StreamJsonParser.java:2688)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._nextTokenNotInObject(UTF8StreamJsonParser.java:870)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextToken(UTF8StreamJsonParser.java:762)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._initForReading(ObjectReader.java:355)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._bindAndClose(ObjectReader.java:2023)\r\n\tat com.fasterxml.jackson.databind.ObjectReader.readValue(ObjectReader.java:1528)\r\n\tat org.springframework.kafka.support.serializer.JsonDeserializer.deserialize(JsonDeserializer.java:534)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.parseRecord(Fetcher.java:1387)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.access$3400(Fetcher.java:133)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.fetchRecords(Fetcher.java:1618)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.access$1700(Fetcher.java:1454)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchRecords(Fetcher.java:687)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchedRecords(Fetcher.java:638)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.pollForFetches(KafkaConsumer.java:1272)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1233)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1206)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doPoll(KafkaMessageListenerContainer.java:1410)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1249)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1161)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:46:40.343Z","appMessage":"Consumer exception","class":"org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"ERROR","exception":"java.lang.IllegalStateException: This error handler cannot process 'SerializationException's directly; please consider configuring an 'ErrorHandlingDeserializer' in the value and/or key deserializer\r\n\tat org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:194)\r\n\tat org.springframework.kafka.listener.SeekToCurrentErrorHandler.handle(SeekToCurrentErrorHandler.java:112)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.handleConsumerException(KafkaMessageListenerContainer.java:1599)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1210)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Error deserializing key/value for partition customer-topic-2-0 at offset 0. If needed, please seek past the record to continue consumption.\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Can't deserialize data [[104, 105, 32, 116, 104, 101, 114, 101]] from topic [customer-topic-2]\r\nCaused by: com.fasterxml.jackson.core.JsonParseException: Unrecognized token 'hi': was expecting (JSON String, Number, Array, Object or token 'null', 'true' or 'false')\n at [Source: (byte[])\"hi there\"; line: 1, column: 4]\r\n\tat com.fasterxml.jackson.core.JsonParser._constructError(JsonParser.java:2337)\r\n\tat com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(ParserMinimalBase.java:720)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportInvalidToken(UTF8StreamJsonParser.java:3593)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleUnexpectedValue(UTF8StreamJsonParser.java:2688)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._nextTokenNotInObject(UTF8StreamJsonParser.java:870)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextToken(UTF8StreamJsonParser.java:762)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._initForReading(ObjectReader.java:355)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._bindAndClose(ObjectReader.java:2023)\r\n\tat com.fasterxml.jackson.databind.ObjectReader.readValue(ObjectReader.java:1528)\r\n\tat org.springframework.kafka.support.serializer.JsonDeserializer.deserialize(JsonDeserializer.java:534)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.parseRecord(Fetcher.java:1387)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.access$3400(Fetcher.java:133)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.fetchRecords(Fetcher.java:1618)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.access$1700(Fetcher.java:1454)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchRecords(Fetcher.java:687)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchedRecords(Fetcher.java:638)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.pollForFetches(KafkaConsumer.java:1272)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1233)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1206)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doPoll(KafkaMessageListenerContainer.java:1410)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1249)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1161)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:46:40.347Z","appMessage":"Consumer exception","class":"org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"ERROR","exception":"java.lang.IllegalStateException: This error handler cannot process 'SerializationException's directly; please consider configuring an 'ErrorHandlingDeserializer' in the value and/or key deserializer\r\n\tat org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:194)\r\n\tat org.springframework.kafka.listener.SeekToCurrentErrorHandler.handle(SeekToCurrentErrorHandler.java:112)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.handleConsumerException(KafkaMessageListenerContainer.java:1599)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1210)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Error deserializing key/value for partition customer-topic-2-0 at offset 0. If needed, please seek past the record to continue consumption.\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Can't deserialize data [[104, 105, 32, 116, 104, 101, 114, 101]] from topic [customer-topic-2]\r\nCaused by: com.fasterxml.jackson.core.JsonParseException: Unrecognized token 'hi': was expecting (JSON String, Number, Array, Object or token 'null', 'true' or 'false')\n at [Source: (byte[])\"hi there\"; line: 1, column: 4]\r\n\tat com.fasterxml.jackson.core.JsonParser._constructError(JsonParser.java:2337)\r\n\tat com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(ParserMinimalBase.java:720)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportInvalidToken(UTF8StreamJsonParser.java:3593)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleUnexpectedValue(UTF8StreamJsonParser.java:2688)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._nextTokenNotInObject(UTF8StreamJsonParser.java:870)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextToken(UTF8StreamJsonParser.java:762)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._initForReading(ObjectReader.java:355)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._bindAndClose(ObjectReader.java:2023)\r\n\tat com.fasterxml.jackson.databind.ObjectReader.readValue(ObjectReader.java:1528)\r\n\tat org.springframework.kafka.support.serializer.JsonDeserializer.deserialize(JsonDeserializer.java:534)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.parseRecord(Fetcher.java:1387)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.access$3400(Fetcher.java:133)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.fetchRecords(Fetcher.java:1618)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.access$1700(Fetcher.java:1454)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchRecords(Fetcher.java:687)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchedRecords(Fetcher.java:638)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.pollForFetches(KafkaConsumer.java:1272)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1233)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1206)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doPoll(KafkaMessageListenerContainer.java:1410)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1249)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1161)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:46:40.352Z","appMessage":"Consumer exception","class":"org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"ERROR","exception":"java.lang.IllegalStateException: This error handler cannot process 'SerializationException's directly; please consider configuring an 'ErrorHandlingDeserializer' in the value and/or key deserializer\r\n\tat org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:194)\r\n\tat org.springframework.kafka.listener.SeekToCurrentErrorHandler.handle(SeekToCurrentErrorHandler.java:112)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.handleConsumerException(KafkaMessageListenerContainer.java:1599)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1210)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Error deserializing key/value for partition customer-topic-2-0 at offset 0. If needed, please seek past the record to continue consumption.\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Can't deserialize data [[104, 105, 32, 116, 104, 101, 114, 101]] from topic [customer-topic-2]\r\nCaused by: com.fasterxml.jackson.core.JsonParseException: Unrecognized token 'hi': was expecting (JSON String, Number, Array, Object or token 'null', 'true' or 'false')\n at [Source: (byte[])\"hi there\"; line: 1, column: 4]\r\n\tat com.fasterxml.jackson.core.JsonParser._constructError(JsonParser.java:2337)\r\n\tat com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(ParserMinimalBase.java:720)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportInvalidToken(UTF8StreamJsonParser.java:3593)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleUnexpectedValue(UTF8StreamJsonParser.java:2688)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._nextTokenNotInObject(UTF8StreamJsonParser.java:870)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextToken(UTF8StreamJsonParser.java:762)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._initForReading(ObjectReader.java:355)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._bindAndClose(ObjectReader.java:2023)\r\n\tat com.fasterxml.jackson.databind.ObjectReader.readValue(ObjectReader.java:1528)\r\n\tat org.springframework.kafka.support.serializer.JsonDeserializer.deserialize(JsonDeserializer.java:534)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.parseRecord(Fetcher.java:1387)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.access$3400(Fetcher.java:133)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.fetchRecords(Fetcher.java:1618)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.access$1700(Fetcher.java:1454)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchRecords(Fetcher.java:687)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchedRecords(Fetcher.java:638)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.pollForFetches(KafkaConsumer.java:1272)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1233)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1206)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doPoll(KafkaMessageListenerContainer.java:1410)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1249)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1161)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:46:40.356Z","appMessage":"Consumer exception","class":"org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"ERROR","exception":"java.lang.IllegalStateException: This error handler cannot process 'SerializationException's directly; please consider configuring an 'ErrorHandlingDeserializer' in the value and/or key deserializer\r\n\tat org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:194)\r\n\tat org.springframework.kafka.listener.SeekToCurrentErrorHandler.handle(SeekToCurrentErrorHandler.java:112)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.handleConsumerException(KafkaMessageListenerContainer.java:1599)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1210)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Error deserializing key/value for partition customer-topic-2-0 at offset 0. If needed, please seek past the record to continue consumption.\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Can't deserialize data [[104, 105, 32, 116, 104, 101, 114, 101]] from topic [customer-topic-2]\r\nCaused by: com.fasterxml.jackson.core.JsonParseException: Unrecognized token 'hi': was expecting (JSON String, Number, Array, Object or token 'null', 'true' or 'false')\n at [Source: (byte[])\"hi there\"; line: 1, column: 4]\r\n\tat com.fasterxml.jackson.core.JsonParser._constructError(JsonParser.java:2337)\r\n\tat com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(ParserMinimalBase.java:720)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportInvalidToken(UTF8StreamJsonParser.java:3593)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleUnexpectedValue(UTF8StreamJsonParser.java:2688)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._nextTokenNotInObject(UTF8StreamJsonParser.java:870)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextToken(UTF8StreamJsonParser.java:762)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._initForReading(ObjectReader.java:355)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._bindAndClose(ObjectReader.java:2023)\r\n\tat com.fasterxml.jackson.databind.ObjectReader.readValue(ObjectReader.java:1528)\r\n\tat org.springframework.kafka.support.serializer.JsonDeserializer.deserialize(JsonDeserializer.java:534)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.parseRecord(Fetcher.java:1387)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.access$3400(Fetcher.java:133)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.fetchRecords(Fetcher.java:1618)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.access$1700(Fetcher.java:1454)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchRecords(Fetcher.java:687)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchedRecords(Fetcher.java:638)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.pollForFetches(KafkaConsumer.java:1272)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1233)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1206)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doPoll(KafkaMessageListenerContainer.java:1410)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1249)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1161)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:46:40.360Z","appMessage":"Consumer exception","class":"org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"ERROR","exception":"java.lang.IllegalStateException: This error handler cannot process 'SerializationException's directly; please consider configuring an 'ErrorHandlingDeserializer' in the value and/or key deserializer\r\n\tat org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:194)\r\n\tat org.springframework.kafka.listener.SeekToCurrentErrorHandler.handle(SeekToCurrentErrorHandler.java:112)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.handleConsumerException(KafkaMessageListenerContainer.java:1599)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1210)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Error deserializing key/value for partition customer-topic-2-0 at offset 0. If needed, please seek past the record to continue consumption.\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Can't deserialize data [[104, 105, 32, 116, 104, 101, 114, 101]] from topic [customer-topic-2]\r\nCaused by: com.fasterxml.jackson.core.JsonParseException: Unrecognized token 'hi': was expecting (JSON String, Number, Array, Object or token 'null', 'true' or 'false')\n at [Source: (byte[])\"hi there\"; line: 1, column: 4]\r\n\tat com.fasterxml.jackson.core.JsonParser._constructError(JsonParser.java:2337)\r\n\tat com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(ParserMinimalBase.java:720)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportInvalidToken(UTF8StreamJsonParser.java:3593)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleUnexpectedValue(UTF8StreamJsonParser.java:2688)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._nextTokenNotInObject(UTF8StreamJsonParser.java:870)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextToken(UTF8StreamJsonParser.java:762)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._initForReading(ObjectReader.java:355)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._bindAndClose(ObjectReader.java:2023)\r\n\tat com.fasterxml.jackson.databind.ObjectReader.readValue(ObjectReader.java:1528)\r\n\tat org.springframework.kafka.support.serializer.JsonDeserializer.deserialize(JsonDeserializer.java:534)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.parseRecord(Fetcher.java:1387)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.access$3400(Fetcher.java:133)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.fetchRecords(Fetcher.java:1618)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.access$1700(Fetcher.java:1454)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchRecords(Fetcher.java:687)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchedRecords(Fetcher.java:638)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.pollForFetches(KafkaConsumer.java:1272)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1233)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1206)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doPoll(KafkaMessageListenerContainer.java:1410)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1249)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1161)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:46:40.365Z","appMessage":"Consumer exception","class":"org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"ERROR","exception":"java.lang.IllegalStateException: This error handler cannot process 'SerializationException's directly; please consider configuring an 'ErrorHandlingDeserializer' in the value and/or key deserializer\r\n\tat org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:194)\r\n\tat org.springframework.kafka.listener.SeekToCurrentErrorHandler.handle(SeekToCurrentErrorHandler.java:112)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.handleConsumerException(KafkaMessageListenerContainer.java:1599)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1210)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Error deserializing key/value for partition customer-topic-2-0 at offset 0. If needed, please seek past the record to continue consumption.\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Can't deserialize data [[104, 105, 32, 116, 104, 101, 114, 101]] from topic [customer-topic-2]\r\nCaused by: com.fasterxml.jackson.core.JsonParseException: Unrecognized token 'hi': was expecting (JSON String, Number, Array, Object or token 'null', 'true' or 'false')\n at [Source: (byte[])\"hi there\"; line: 1, column: 4]\r\n\tat com.fasterxml.jackson.core.JsonParser._constructError(JsonParser.java:2337)\r\n\tat com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(ParserMinimalBase.java:720)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportInvalidToken(UTF8StreamJsonParser.java:3593)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleUnexpectedValue(UTF8StreamJsonParser.java:2688)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._nextTokenNotInObject(UTF8StreamJsonParser.java:870)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextToken(UTF8StreamJsonParser.java:762)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._initForReading(ObjectReader.java:355)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._bindAndClose(ObjectReader.java:2023)\r\n\tat com.fasterxml.jackson.databind.ObjectReader.readValue(ObjectReader.java:1528)\r\n\tat org.springframework.kafka.support.serializer.JsonDeserializer.deserialize(JsonDeserializer.java:534)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.parseRecord(Fetcher.java:1387)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.access$3400(Fetcher.java:133)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.fetchRecords(Fetcher.java:1618)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.access$1700(Fetcher.java:1454)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchRecords(Fetcher.java:687)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchedRecords(Fetcher.java:638)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.pollForFetches(KafkaConsumer.java:1272)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1233)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1206)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doPoll(KafkaMessageListenerContainer.java:1410)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1249)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1161)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:46:40.369Z","appMessage":"Consumer exception","class":"org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"ERROR","exception":"java.lang.IllegalStateException: This error handler cannot process 'SerializationException's directly; please consider configuring an 'ErrorHandlingDeserializer' in the value and/or key deserializer\r\n\tat org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:194)\r\n\tat org.springframework.kafka.listener.SeekToCurrentErrorHandler.handle(SeekToCurrentErrorHandler.java:112)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.handleConsumerException(KafkaMessageListenerContainer.java:1599)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1210)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Error deserializing key/value for partition customer-topic-2-0 at offset 0. If needed, please seek past the record to continue consumption.\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Can't deserialize data [[104, 105, 32, 116, 104, 101, 114, 101]] from topic [customer-topic-2]\r\nCaused by: com.fasterxml.jackson.core.JsonParseException: Unrecognized token 'hi': was expecting (JSON String, Number, Array, Object or token 'null', 'true' or 'false')\n at [Source: (byte[])\"hi there\"; line: 1, column: 4]\r\n\tat com.fasterxml.jackson.core.JsonParser._constructError(JsonParser.java:2337)\r\n\tat com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(ParserMinimalBase.java:720)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportInvalidToken(UTF8StreamJsonParser.java:3593)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleUnexpectedValue(UTF8StreamJsonParser.java:2688)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._nextTokenNotInObject(UTF8StreamJsonParser.java:870)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextToken(UTF8StreamJsonParser.java:762)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._initForReading(ObjectReader.java:355)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._bindAndClose(ObjectReader.java:2023)\r\n\tat com.fasterxml.jackson.databind.ObjectReader.readValue(ObjectReader.java:1528)\r\n\tat org.springframework.kafka.support.serializer.JsonDeserializer.deserialize(JsonDeserializer.java:534)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.parseRecord(Fetcher.java:1387)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.access$3400(Fetcher.java:133)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.fetchRecords(Fetcher.java:1618)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.access$1700(Fetcher.java:1454)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchRecords(Fetcher.java:687)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchedRecords(Fetcher.java:638)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.pollForFetches(KafkaConsumer.java:1272)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1233)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1206)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doPoll(KafkaMessageListenerContainer.java:1410)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1249)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1161)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:46:40.373Z","appMessage":"Consumer exception","class":"org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"ERROR","exception":"java.lang.IllegalStateException: This error handler cannot process 'SerializationException's directly; please consider configuring an 'ErrorHandlingDeserializer' in the value and/or key deserializer\r\n\tat org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:194)\r\n\tat org.springframework.kafka.listener.SeekToCurrentErrorHandler.handle(SeekToCurrentErrorHandler.java:112)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.handleConsumerException(KafkaMessageListenerContainer.java:1599)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1210)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Error deserializing key/value for partition customer-topic-2-0 at offset 0. If needed, please seek past the record to continue consumption.\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Can't deserialize data [[104, 105, 32, 116, 104, 101, 114, 101]] from topic [customer-topic-2]\r\nCaused by: com.fasterxml.jackson.core.JsonParseException: Unrecognized token 'hi': was expecting (JSON String, Number, Array, Object or token 'null', 'true' or 'false')\n at [Source: (byte[])\"hi there\"; line: 1, column: 4]\r\n\tat com.fasterxml.jackson.core.JsonParser._constructError(JsonParser.java:2337)\r\n\tat com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(ParserMinimalBase.java:720)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportInvalidToken(UTF8StreamJsonParser.java:3593)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleUnexpectedValue(UTF8StreamJsonParser.java:2688)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._nextTokenNotInObject(UTF8StreamJsonParser.java:870)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextToken(UTF8StreamJsonParser.java:762)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._initForReading(ObjectReader.java:355)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._bindAndClose(ObjectReader.java:2023)\r\n\tat com.fasterxml.jackson.databind.ObjectReader.readValue(ObjectReader.java:1528)\r\n\tat org.springframework.kafka.support.serializer.JsonDeserializer.deserialize(JsonDeserializer.java:534)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.parseRecord(Fetcher.java:1387)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.access$3400(Fetcher.java:133)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.fetchRecords(Fetcher.java:1618)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.access$1700(Fetcher.java:1454)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchRecords(Fetcher.java:687)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchedRecords(Fetcher.java:638)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.pollForFetches(KafkaConsumer.java:1272)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1233)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1206)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doPoll(KafkaMessageListenerContainer.java:1410)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1249)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1161)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:46:40.378Z","appMessage":"Consumer exception","class":"org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"ERROR","exception":"java.lang.IllegalStateException: This error handler cannot process 'SerializationException's directly; please consider configuring an 'ErrorHandlingDeserializer' in the value and/or key deserializer\r\n\tat org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:194)\r\n\tat org.springframework.kafka.listener.SeekToCurrentErrorHandler.handle(SeekToCurrentErrorHandler.java:112)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.handleConsumerException(KafkaMessageListenerContainer.java:1599)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1210)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Error deserializing key/value for partition customer-topic-2-0 at offset 0. If needed, please seek past the record to continue consumption.\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Can't deserialize data [[104, 105, 32, 116, 104, 101, 114, 101]] from topic [customer-topic-2]\r\nCaused by: com.fasterxml.jackson.core.JsonParseException: Unrecognized token 'hi': was expecting (JSON String, Number, Array, Object or token 'null', 'true' or 'false')\n at [Source: (byte[])\"hi there\"; line: 1, column: 4]\r\n\tat com.fasterxml.jackson.core.JsonParser._constructError(JsonParser.java:2337)\r\n\tat com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(ParserMinimalBase.java:720)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportInvalidToken(UTF8StreamJsonParser.java:3593)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleUnexpectedValue(UTF8StreamJsonParser.java:2688)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._nextTokenNotInObject(UTF8StreamJsonParser.java:870)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextToken(UTF8StreamJsonParser.java:762)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._initForReading(ObjectReader.java:355)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._bindAndClose(ObjectReader.java:2023)\r\n\tat com.fasterxml.jackson.databind.ObjectReader.readValue(ObjectReader.java:1528)\r\n\tat org.springframework.kafka.support.serializer.JsonDeserializer.deserialize(JsonDeserializer.java:534)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.parseRecord(Fetcher.java:1387)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.access$3400(Fetcher.java:133)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.fetchRecords(Fetcher.java:1618)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.access$1700(Fetcher.java:1454)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchRecords(Fetcher.java:687)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchedRecords(Fetcher.java:638)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.pollForFetches(KafkaConsumer.java:1272)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1233)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1206)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doPoll(KafkaMessageListenerContainer.java:1410)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1249)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1161)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:46:40.382Z","appMessage":"Consumer exception","class":"org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"ERROR","exception":"java.lang.IllegalStateException: This error handler cannot process 'SerializationException's directly; please consider configuring an 'ErrorHandlingDeserializer' in the value and/or key deserializer\r\n\tat org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:194)\r\n\tat org.springframework.kafka.listener.SeekToCurrentErrorHandler.handle(SeekToCurrentErrorHandler.java:112)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.handleConsumerException(KafkaMessageListenerContainer.java:1599)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1210)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Error deserializing key/value for partition customer-topic-2-0 at offset 0. If needed, please seek past the record to continue consumption.\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Can't deserialize data [[104, 105, 32, 116, 104, 101, 114, 101]] from topic [customer-topic-2]\r\nCaused by: com.fasterxml.jackson.core.JsonParseException: Unrecognized token 'hi': was expecting (JSON String, Number, Array, Object or token 'null', 'true' or 'false')\n at [Source: (byte[])\"hi there\"; line: 1, column: 4]\r\n\tat com.fasterxml.jackson.core.JsonParser._constructError(JsonParser.java:2337)\r\n\tat com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(ParserMinimalBase.java:720)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportInvalidToken(UTF8StreamJsonParser.java:3593)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleUnexpectedValue(UTF8StreamJsonParser.java:2688)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._nextTokenNotInObject(UTF8StreamJsonParser.java:870)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextToken(UTF8StreamJsonParser.java:762)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._initForReading(ObjectReader.java:355)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._bindAndClose(ObjectReader.java:2023)\r\n\tat com.fasterxml.jackson.databind.ObjectReader.readValue(ObjectReader.java:1528)\r\n\tat org.springframework.kafka.support.serializer.JsonDeserializer.deserialize(JsonDeserializer.java:534)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.parseRecord(Fetcher.java:1387)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.access$3400(Fetcher.java:133)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.fetchRecords(Fetcher.java:1618)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.access$1700(Fetcher.java:1454)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchRecords(Fetcher.java:687)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchedRecords(Fetcher.java:638)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.pollForFetches(KafkaConsumer.java:1272)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1233)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1206)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doPoll(KafkaMessageListenerContainer.java:1410)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1249)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1161)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:46:40.386Z","appMessage":"Consumer exception","class":"org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"ERROR","exception":"java.lang.IllegalStateException: This error handler cannot process 'SerializationException's directly; please consider configuring an 'ErrorHandlingDeserializer' in the value and/or key deserializer\r\n\tat org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:194)\r\n\tat org.springframework.kafka.listener.SeekToCurrentErrorHandler.handle(SeekToCurrentErrorHandler.java:112)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.handleConsumerException(KafkaMessageListenerContainer.java:1599)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1210)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Error deserializing key/value for partition customer-topic-2-0 at offset 0. If needed, please seek past the record to continue consumption.\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Can't deserialize data [[104, 105, 32, 116, 104, 101, 114, 101]] from topic [customer-topic-2]\r\nCaused by: com.fasterxml.jackson.core.JsonParseException: Unrecognized token 'hi': was expecting (JSON String, Number, Array, Object or token 'null', 'true' or 'false')\n at [Source: (byte[])\"hi there\"; line: 1, column: 4]\r\n\tat com.fasterxml.jackson.core.JsonParser._constructError(JsonParser.java:2337)\r\n\tat com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(ParserMinimalBase.java:720)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportInvalidToken(UTF8StreamJsonParser.java:3593)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleUnexpectedValue(UTF8StreamJsonParser.java:2688)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._nextTokenNotInObject(UTF8StreamJsonParser.java:870)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextToken(UTF8StreamJsonParser.java:762)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._initForReading(ObjectReader.java:355)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._bindAndClose(ObjectReader.java:2023)\r\n\tat com.fasterxml.jackson.databind.ObjectReader.readValue(ObjectReader.java:1528)\r\n\tat org.springframework.kafka.support.serializer.JsonDeserializer.deserialize(JsonDeserializer.java:534)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.parseRecord(Fetcher.java:1387)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.access$3400(Fetcher.java:133)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.fetchRecords(Fetcher.java:1618)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.access$1700(Fetcher.java:1454)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchRecords(Fetcher.java:687)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchedRecords(Fetcher.java:638)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.pollForFetches(KafkaConsumer.java:1272)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1233)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1206)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doPoll(KafkaMessageListenerContainer.java:1410)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1249)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1161)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:46:40.391Z","appMessage":"Consumer exception","class":"org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"ERROR","exception":"java.lang.IllegalStateException: This error handler cannot process 'SerializationException's directly; please consider configuring an 'ErrorHandlingDeserializer' in the value and/or key deserializer\r\n\tat org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:194)\r\n\tat org.springframework.kafka.listener.SeekToCurrentErrorHandler.handle(SeekToCurrentErrorHandler.java:112)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.handleConsumerException(KafkaMessageListenerContainer.java:1599)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1210)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Error deserializing key/value for partition customer-topic-2-0 at offset 0. If needed, please seek past the record to continue consumption.\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Can't deserialize data [[104, 105, 32, 116, 104, 101, 114, 101]] from topic [customer-topic-2]\r\nCaused by: com.fasterxml.jackson.core.JsonParseException: Unrecognized token 'hi': was expecting (JSON String, Number, Array, Object or token 'null', 'true' or 'false')\n at [Source: (byte[])\"hi there\"; line: 1, column: 4]\r\n\tat com.fasterxml.jackson.core.JsonParser._constructError(JsonParser.java:2337)\r\n\tat com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(ParserMinimalBase.java:720)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportInvalidToken(UTF8StreamJsonParser.java:3593)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleUnexpectedValue(UTF8StreamJsonParser.java:2688)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._nextTokenNotInObject(UTF8StreamJsonParser.java:870)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextToken(UTF8StreamJsonParser.java:762)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._initForReading(ObjectReader.java:355)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._bindAndClose(ObjectReader.java:2023)\r\n\tat com.fasterxml.jackson.databind.ObjectReader.readValue(ObjectReader.java:1528)\r\n\tat org.springframework.kafka.support.serializer.JsonDeserializer.deserialize(JsonDeserializer.java:534)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.parseRecord(Fetcher.java:1387)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.access$3400(Fetcher.java:133)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.fetchRecords(Fetcher.java:1618)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.access$1700(Fetcher.java:1454)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchRecords(Fetcher.java:687)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchedRecords(Fetcher.java:638)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.pollForFetches(KafkaConsumer.java:1272)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1233)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1206)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doPoll(KafkaMessageListenerContainer.java:1410)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1249)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1161)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:46:40.395Z","appMessage":"Consumer exception","class":"org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"ERROR","exception":"java.lang.IllegalStateException: This error handler cannot process 'SerializationException's directly; please consider configuring an 'ErrorHandlingDeserializer' in the value and/or key deserializer\r\n\tat org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:194)\r\n\tat org.springframework.kafka.listener.SeekToCurrentErrorHandler.handle(SeekToCurrentErrorHandler.java:112)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.handleConsumerException(KafkaMessageListenerContainer.java:1599)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1210)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Error deserializing key/value for partition customer-topic-2-0 at offset 0. If needed, please seek past the record to continue consumption.\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Can't deserialize data [[104, 105, 32, 116, 104, 101, 114, 101]] from topic [customer-topic-2]\r\nCaused by: com.fasterxml.jackson.core.JsonParseException: Unrecognized token 'hi': was expecting (JSON String, Number, Array, Object or token 'null', 'true' or 'false')\n at [Source: (byte[])\"hi there\"; line: 1, column: 4]\r\n\tat com.fasterxml.jackson.core.JsonParser._constructError(JsonParser.java:2337)\r\n\tat com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(ParserMinimalBase.java:720)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportInvalidToken(UTF8StreamJsonParser.java:3593)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleUnexpectedValue(UTF8StreamJsonParser.java:2688)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._nextTokenNotInObject(UTF8StreamJsonParser.java:870)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextToken(UTF8StreamJsonParser.java:762)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._initForReading(ObjectReader.java:355)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._bindAndClose(ObjectReader.java:2023)\r\n\tat com.fasterxml.jackson.databind.ObjectReader.readValue(ObjectReader.java:1528)\r\n\tat org.springframework.kafka.support.serializer.JsonDeserializer.deserialize(JsonDeserializer.java:534)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.parseRecord(Fetcher.java:1387)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.access$3400(Fetcher.java:133)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.fetchRecords(Fetcher.java:1618)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.access$1700(Fetcher.java:1454)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchRecords(Fetcher.java:687)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchedRecords(Fetcher.java:638)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.pollForFetches(KafkaConsumer.java:1272)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1233)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1206)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doPoll(KafkaMessageListenerContainer.java:1410)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1249)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1161)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:46:40.400Z","appMessage":"Consumer exception","class":"org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"ERROR","exception":"java.lang.IllegalStateException: This error handler cannot process 'SerializationException's directly; please consider configuring an 'ErrorHandlingDeserializer' in the value and/or key deserializer\r\n\tat org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:194)\r\n\tat org.springframework.kafka.listener.SeekToCurrentErrorHandler.handle(SeekToCurrentErrorHandler.java:112)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.handleConsumerException(KafkaMessageListenerContainer.java:1599)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1210)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Error deserializing key/value for partition customer-topic-2-0 at offset 0. If needed, please seek past the record to continue consumption.\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Can't deserialize data [[104, 105, 32, 116, 104, 101, 114, 101]] from topic [customer-topic-2]\r\nCaused by: com.fasterxml.jackson.core.JsonParseException: Unrecognized token 'hi': was expecting (JSON String, Number, Array, Object or token 'null', 'true' or 'false')\n at [Source: (byte[])\"hi there\"; line: 1, column: 4]\r\n\tat com.fasterxml.jackson.core.JsonParser._constructError(JsonParser.java:2337)\r\n\tat com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(ParserMinimalBase.java:720)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportInvalidToken(UTF8StreamJsonParser.java:3593)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleUnexpectedValue(UTF8StreamJsonParser.java:2688)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._nextTokenNotInObject(UTF8StreamJsonParser.java:870)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextToken(UTF8StreamJsonParser.java:762)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._initForReading(ObjectReader.java:355)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._bindAndClose(ObjectReader.java:2023)\r\n\tat com.fasterxml.jackson.databind.ObjectReader.readValue(ObjectReader.java:1528)\r\n\tat org.springframework.kafka.support.serializer.JsonDeserializer.deserialize(JsonDeserializer.java:534)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.parseRecord(Fetcher.java:1387)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.access$3400(Fetcher.java:133)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.fetchRecords(Fetcher.java:1618)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.access$1700(Fetcher.java:1454)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchRecords(Fetcher.java:687)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchedRecords(Fetcher.java:638)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.pollForFetches(KafkaConsumer.java:1272)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1233)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1206)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doPoll(KafkaMessageListenerContainer.java:1410)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1249)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1161)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:46:40.404Z","appMessage":"Consumer exception","class":"org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"ERROR","exception":"java.lang.IllegalStateException: This error handler cannot process 'SerializationException's directly; please consider configuring an 'ErrorHandlingDeserializer' in the value and/or key deserializer\r\n\tat org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:194)\r\n\tat org.springframework.kafka.listener.SeekToCurrentErrorHandler.handle(SeekToCurrentErrorHandler.java:112)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.handleConsumerException(KafkaMessageListenerContainer.java:1599)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1210)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Error deserializing key/value for partition customer-topic-2-0 at offset 0. If needed, please seek past the record to continue consumption.\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Can't deserialize data [[104, 105, 32, 116, 104, 101, 114, 101]] from topic [customer-topic-2]\r\nCaused by: com.fasterxml.jackson.core.JsonParseException: Unrecognized token 'hi': was expecting (JSON String, Number, Array, Object or token 'null', 'true' or 'false')\n at [Source: (byte[])\"hi there\"; line: 1, column: 4]\r\n\tat com.fasterxml.jackson.core.JsonParser._constructError(JsonParser.java:2337)\r\n\tat com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(ParserMinimalBase.java:720)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportInvalidToken(UTF8StreamJsonParser.java:3593)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleUnexpectedValue(UTF8StreamJsonParser.java:2688)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._nextTokenNotInObject(UTF8StreamJsonParser.java:870)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextToken(UTF8StreamJsonParser.java:762)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._initForReading(ObjectReader.java:355)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._bindAndClose(ObjectReader.java:2023)\r\n\tat com.fasterxml.jackson.databind.ObjectReader.readValue(ObjectReader.java:1528)\r\n\tat org.springframework.kafka.support.serializer.JsonDeserializer.deserialize(JsonDeserializer.java:534)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.parseRecord(Fetcher.java:1387)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.access$3400(Fetcher.java:133)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.fetchRecords(Fetcher.java:1618)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.access$1700(Fetcher.java:1454)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchRecords(Fetcher.java:687)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchedRecords(Fetcher.java:638)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.pollForFetches(KafkaConsumer.java:1272)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1233)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1206)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doPoll(KafkaMessageListenerContainer.java:1410)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1249)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1161)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:46:40.409Z","appMessage":"Consumer exception","class":"org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"ERROR","exception":"java.lang.IllegalStateException: This error handler cannot process 'SerializationException's directly; please consider configuring an 'ErrorHandlingDeserializer' in the value and/or key deserializer\r\n\tat org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:194)\r\n\tat org.springframework.kafka.listener.SeekToCurrentErrorHandler.handle(SeekToCurrentErrorHandler.java:112)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.handleConsumerException(KafkaMessageListenerContainer.java:1599)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1210)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Error deserializing key/value for partition customer-topic-2-0 at offset 0. If needed, please seek past the record to continue consumption.\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Can't deserialize data [[104, 105, 32, 116, 104, 101, 114, 101]] from topic [customer-topic-2]\r\nCaused by: com.fasterxml.jackson.core.JsonParseException: Unrecognized token 'hi': was expecting (JSON String, Number, Array, Object or token 'null', 'true' or 'false')\n at [Source: (byte[])\"hi there\"; line: 1, column: 4]\r\n\tat com.fasterxml.jackson.core.JsonParser._constructError(JsonParser.java:2337)\r\n\tat com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(ParserMinimalBase.java:720)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportInvalidToken(UTF8StreamJsonParser.java:3593)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleUnexpectedValue(UTF8StreamJsonParser.java:2688)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._nextTokenNotInObject(UTF8StreamJsonParser.java:870)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextToken(UTF8StreamJsonParser.java:762)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._initForReading(ObjectReader.java:355)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._bindAndClose(ObjectReader.java:2023)\r\n\tat com.fasterxml.jackson.databind.ObjectReader.readValue(ObjectReader.java:1528)\r\n\tat org.springframework.kafka.support.serializer.JsonDeserializer.deserialize(JsonDeserializer.java:534)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.parseRecord(Fetcher.java:1387)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.access$3400(Fetcher.java:133)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.fetchRecords(Fetcher.java:1618)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.access$1700(Fetcher.java:1454)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchRecords(Fetcher.java:687)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchedRecords(Fetcher.java:638)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.pollForFetches(KafkaConsumer.java:1272)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1233)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1206)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doPoll(KafkaMessageListenerContainer.java:1410)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1249)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1161)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:46:40.413Z","appMessage":"Consumer exception","class":"org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"ERROR","exception":"java.lang.IllegalStateException: This error handler cannot process 'SerializationException's directly; please consider configuring an 'ErrorHandlingDeserializer' in the value and/or key deserializer\r\n\tat org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:194)\r\n\tat org.springframework.kafka.listener.SeekToCurrentErrorHandler.handle(SeekToCurrentErrorHandler.java:112)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.handleConsumerException(KafkaMessageListenerContainer.java:1599)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1210)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Error deserializing key/value for partition customer-topic-2-0 at offset 0. If needed, please seek past the record to continue consumption.\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Can't deserialize data [[104, 105, 32, 116, 104, 101, 114, 101]] from topic [customer-topic-2]\r\nCaused by: com.fasterxml.jackson.core.JsonParseException: Unrecognized token 'hi': was expecting (JSON String, Number, Array, Object or token 'null', 'true' or 'false')\n at [Source: (byte[])\"hi there\"; line: 1, column: 4]\r\n\tat com.fasterxml.jackson.core.JsonParser._constructError(JsonParser.java:2337)\r\n\tat com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(ParserMinimalBase.java:720)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportInvalidToken(UTF8StreamJsonParser.java:3593)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleUnexpectedValue(UTF8StreamJsonParser.java:2688)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._nextTokenNotInObject(UTF8StreamJsonParser.java:870)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextToken(UTF8StreamJsonParser.java:762)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._initForReading(ObjectReader.java:355)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._bindAndClose(ObjectReader.java:2023)\r\n\tat com.fasterxml.jackson.databind.ObjectReader.readValue(ObjectReader.java:1528)\r\n\tat org.springframework.kafka.support.serializer.JsonDeserializer.deserialize(JsonDeserializer.java:534)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.parseRecord(Fetcher.java:1387)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.access$3400(Fetcher.java:133)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.fetchRecords(Fetcher.java:1618)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.access$1700(Fetcher.java:1454)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchRecords(Fetcher.java:687)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchedRecords(Fetcher.java:638)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.pollForFetches(KafkaConsumer.java:1272)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1233)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1206)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doPoll(KafkaMessageListenerContainer.java:1410)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1249)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1161)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:46:40.418Z","appMessage":"Consumer exception","class":"org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"ERROR","exception":"java.lang.IllegalStateException: This error handler cannot process 'SerializationException's directly; please consider configuring an 'ErrorHandlingDeserializer' in the value and/or key deserializer\r\n\tat org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:194)\r\n\tat org.springframework.kafka.listener.SeekToCurrentErrorHandler.handle(SeekToCurrentErrorHandler.java:112)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.handleConsumerException(KafkaMessageListenerContainer.java:1599)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1210)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Error deserializing key/value for partition customer-topic-2-0 at offset 0. If needed, please seek past the record to continue consumption.\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Can't deserialize data [[104, 105, 32, 116, 104, 101, 114, 101]] from topic [customer-topic-2]\r\nCaused by: com.fasterxml.jackson.core.JsonParseException: Unrecognized token 'hi': was expecting (JSON String, Number, Array, Object or token 'null', 'true' or 'false')\n at [Source: (byte[])\"hi there\"; line: 1, column: 4]\r\n\tat com.fasterxml.jackson.core.JsonParser._constructError(JsonParser.java:2337)\r\n\tat com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(ParserMinimalBase.java:720)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportInvalidToken(UTF8StreamJsonParser.java:3593)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleUnexpectedValue(UTF8StreamJsonParser.java:2688)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._nextTokenNotInObject(UTF8StreamJsonParser.java:870)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextToken(UTF8StreamJsonParser.java:762)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._initForReading(ObjectReader.java:355)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._bindAndClose(ObjectReader.java:2023)\r\n\tat com.fasterxml.jackson.databind.ObjectReader.readValue(ObjectReader.java:1528)\r\n\tat org.springframework.kafka.support.serializer.JsonDeserializer.deserialize(JsonDeserializer.java:534)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.parseRecord(Fetcher.java:1387)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.access$3400(Fetcher.java:133)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.fetchRecords(Fetcher.java:1618)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.access$1700(Fetcher.java:1454)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchRecords(Fetcher.java:687)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchedRecords(Fetcher.java:638)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.pollForFetches(KafkaConsumer.java:1272)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1233)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1206)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doPoll(KafkaMessageListenerContainer.java:1410)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1249)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1161)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:46:40.422Z","appMessage":"Consumer exception","class":"org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"ERROR","exception":"java.lang.IllegalStateException: This error handler cannot process 'SerializationException's directly; please consider configuring an 'ErrorHandlingDeserializer' in the value and/or key deserializer\r\n\tat org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:194)\r\n\tat org.springframework.kafka.listener.SeekToCurrentErrorHandler.handle(SeekToCurrentErrorHandler.java:112)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.handleConsumerException(KafkaMessageListenerContainer.java:1599)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1210)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Error deserializing key/value for partition customer-topic-2-0 at offset 0. If needed, please seek past the record to continue consumption.\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Can't deserialize data [[104, 105, 32, 116, 104, 101, 114, 101]] from topic [customer-topic-2]\r\nCaused by: com.fasterxml.jackson.core.JsonParseException: Unrecognized token 'hi': was expecting (JSON String, Number, Array, Object or token 'null', 'true' or 'false')\n at [Source: (byte[])\"hi there\"; line: 1, column: 4]\r\n\tat com.fasterxml.jackson.core.JsonParser._constructError(JsonParser.java:2337)\r\n\tat com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(ParserMinimalBase.java:720)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportInvalidToken(UTF8StreamJsonParser.java:3593)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleUnexpectedValue(UTF8StreamJsonParser.java:2688)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._nextTokenNotInObject(UTF8StreamJsonParser.java:870)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextToken(UTF8StreamJsonParser.java:762)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._initForReading(ObjectReader.java:355)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._bindAndClose(ObjectReader.java:2023)\r\n\tat com.fasterxml.jackson.databind.ObjectReader.readValue(ObjectReader.java:1528)\r\n\tat org.springframework.kafka.support.serializer.JsonDeserializer.deserialize(JsonDeserializer.java:534)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.parseRecord(Fetcher.java:1387)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.access$3400(Fetcher.java:133)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.fetchRecords(Fetcher.java:1618)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.access$1700(Fetcher.java:1454)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchRecords(Fetcher.java:687)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchedRecords(Fetcher.java:638)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.pollForFetches(KafkaConsumer.java:1272)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1233)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1206)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doPoll(KafkaMessageListenerContainer.java:1410)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1249)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1161)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:46:40.427Z","appMessage":"Consumer exception","class":"org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"ERROR","exception":"java.lang.IllegalStateException: This error handler cannot process 'SerializationException's directly; please consider configuring an 'ErrorHandlingDeserializer' in the value and/or key deserializer\r\n\tat org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:194)\r\n\tat org.springframework.kafka.listener.SeekToCurrentErrorHandler.handle(SeekToCurrentErrorHandler.java:112)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.handleConsumerException(KafkaMessageListenerContainer.java:1599)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1210)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Error deserializing key/value for partition customer-topic-2-0 at offset 0. If needed, please seek past the record to continue consumption.\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Can't deserialize data [[104, 105, 32, 116, 104, 101, 114, 101]] from topic [customer-topic-2]\r\nCaused by: com.fasterxml.jackson.core.JsonParseException: Unrecognized token 'hi': was expecting (JSON String, Number, Array, Object or token 'null', 'true' or 'false')\n at [Source: (byte[])\"hi there\"; line: 1, column: 4]\r\n\tat com.fasterxml.jackson.core.JsonParser._constructError(JsonParser.java:2337)\r\n\tat com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(ParserMinimalBase.java:720)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportInvalidToken(UTF8StreamJsonParser.java:3593)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleUnexpectedValue(UTF8StreamJsonParser.java:2688)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._nextTokenNotInObject(UTF8StreamJsonParser.java:870)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextToken(UTF8StreamJsonParser.java:762)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._initForReading(ObjectReader.java:355)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._bindAndClose(ObjectReader.java:2023)\r\n\tat com.fasterxml.jackson.databind.ObjectReader.readValue(ObjectReader.java:1528)\r\n\tat org.springframework.kafka.support.serializer.JsonDeserializer.deserialize(JsonDeserializer.java:534)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.parseRecord(Fetcher.java:1387)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.access$3400(Fetcher.java:133)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.fetchRecords(Fetcher.java:1618)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.access$1700(Fetcher.java:1454)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchRecords(Fetcher.java:687)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchedRecords(Fetcher.java:638)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.pollForFetches(KafkaConsumer.java:1272)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1233)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1206)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doPoll(KafkaMessageListenerContainer.java:1410)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1249)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1161)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:46:40.431Z","appMessage":"Consumer exception","class":"org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"ERROR","exception":"java.lang.IllegalStateException: This error handler cannot process 'SerializationException's directly; please consider configuring an 'ErrorHandlingDeserializer' in the value and/or key deserializer\r\n\tat org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:194)\r\n\tat org.springframework.kafka.listener.SeekToCurrentErrorHandler.handle(SeekToCurrentErrorHandler.java:112)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.handleConsumerException(KafkaMessageListenerContainer.java:1599)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1210)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Error deserializing key/value for partition customer-topic-2-0 at offset 0. If needed, please seek past the record to continue consumption.\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Can't deserialize data [[104, 105, 32, 116, 104, 101, 114, 101]] from topic [customer-topic-2]\r\nCaused by: com.fasterxml.jackson.core.JsonParseException: Unrecognized token 'hi': was expecting (JSON String, Number, Array, Object or token 'null', 'true' or 'false')\n at [Source: (byte[])\"hi there\"; line: 1, column: 4]\r\n\tat com.fasterxml.jackson.core.JsonParser._constructError(JsonParser.java:2337)\r\n\tat com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(ParserMinimalBase.java:720)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportInvalidToken(UTF8StreamJsonParser.java:3593)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleUnexpectedValue(UTF8StreamJsonParser.java:2688)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._nextTokenNotInObject(UTF8StreamJsonParser.java:870)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextToken(UTF8StreamJsonParser.java:762)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._initForReading(ObjectReader.java:355)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._bindAndClose(ObjectReader.java:2023)\r\n\tat com.fasterxml.jackson.databind.ObjectReader.readValue(ObjectReader.java:1528)\r\n\tat org.springframework.kafka.support.serializer.JsonDeserializer.deserialize(JsonDeserializer.java:534)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.parseRecord(Fetcher.java:1387)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.access$3400(Fetcher.java:133)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.fetchRecords(Fetcher.java:1618)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.access$1700(Fetcher.java:1454)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchRecords(Fetcher.java:687)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchedRecords(Fetcher.java:638)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.pollForFetches(KafkaConsumer.java:1272)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1233)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1206)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doPoll(KafkaMessageListenerContainer.java:1410)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1249)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1161)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:46:40.435Z","appMessage":"Consumer exception","class":"org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"ERROR","exception":"java.lang.IllegalStateException: This error handler cannot process 'SerializationException's directly; please consider configuring an 'ErrorHandlingDeserializer' in the value and/or key deserializer\r\n\tat org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:194)\r\n\tat org.springframework.kafka.listener.SeekToCurrentErrorHandler.handle(SeekToCurrentErrorHandler.java:112)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.handleConsumerException(KafkaMessageListenerContainer.java:1599)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1210)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Error deserializing key/value for partition customer-topic-2-0 at offset 0. If needed, please seek past the record to continue consumption.\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Can't deserialize data [[104, 105, 32, 116, 104, 101, 114, 101]] from topic [customer-topic-2]\r\nCaused by: com.fasterxml.jackson.core.JsonParseException: Unrecognized token 'hi': was expecting (JSON String, Number, Array, Object or token 'null', 'true' or 'false')\n at [Source: (byte[])\"hi there\"; line: 1, column: 4]\r\n\tat com.fasterxml.jackson.core.JsonParser._constructError(JsonParser.java:2337)\r\n\tat com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(ParserMinimalBase.java:720)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportInvalidToken(UTF8StreamJsonParser.java:3593)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleUnexpectedValue(UTF8StreamJsonParser.java:2688)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._nextTokenNotInObject(UTF8StreamJsonParser.java:870)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextToken(UTF8StreamJsonParser.java:762)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._initForReading(ObjectReader.java:355)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._bindAndClose(ObjectReader.java:2023)\r\n\tat com.fasterxml.jackson.databind.ObjectReader.readValue(ObjectReader.java:1528)\r\n\tat org.springframework.kafka.support.serializer.JsonDeserializer.deserialize(JsonDeserializer.java:534)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.parseRecord(Fetcher.java:1387)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.access$3400(Fetcher.java:133)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.fetchRecords(Fetcher.java:1618)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.access$1700(Fetcher.java:1454)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchRecords(Fetcher.java:687)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchedRecords(Fetcher.java:638)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.pollForFetches(KafkaConsumer.java:1272)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1233)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1206)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doPoll(KafkaMessageListenerContainer.java:1410)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1249)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1161)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:46:40.440Z","appMessage":"Consumer exception","class":"org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"ERROR","exception":"java.lang.IllegalStateException: This error handler cannot process 'SerializationException's directly; please consider configuring an 'ErrorHandlingDeserializer' in the value and/or key deserializer\r\n\tat org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:194)\r\n\tat org.springframework.kafka.listener.SeekToCurrentErrorHandler.handle(SeekToCurrentErrorHandler.java:112)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.handleConsumerException(KafkaMessageListenerContainer.java:1599)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1210)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Error deserializing key/value for partition customer-topic-2-0 at offset 0. If needed, please seek past the record to continue consumption.\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Can't deserialize data [[104, 105, 32, 116, 104, 101, 114, 101]] from topic [customer-topic-2]\r\nCaused by: com.fasterxml.jackson.core.JsonParseException: Unrecognized token 'hi': was expecting (JSON String, Number, Array, Object or token 'null', 'true' or 'false')\n at [Source: (byte[])\"hi there\"; line: 1, column: 4]\r\n\tat com.fasterxml.jackson.core.JsonParser._constructError(JsonParser.java:2337)\r\n\tat com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(ParserMinimalBase.java:720)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportInvalidToken(UTF8StreamJsonParser.java:3593)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleUnexpectedValue(UTF8StreamJsonParser.java:2688)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._nextTokenNotInObject(UTF8StreamJsonParser.java:870)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextToken(UTF8StreamJsonParser.java:762)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._initForReading(ObjectReader.java:355)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._bindAndClose(ObjectReader.java:2023)\r\n\tat com.fasterxml.jackson.databind.ObjectReader.readValue(ObjectReader.java:1528)\r\n\tat org.springframework.kafka.support.serializer.JsonDeserializer.deserialize(JsonDeserializer.java:534)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.parseRecord(Fetcher.java:1387)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.access$3400(Fetcher.java:133)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.fetchRecords(Fetcher.java:1618)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.access$1700(Fetcher.java:1454)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchRecords(Fetcher.java:687)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchedRecords(Fetcher.java:638)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.pollForFetches(KafkaConsumer.java:1272)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1233)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1206)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doPoll(KafkaMessageListenerContainer.java:1410)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1249)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1161)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:46:40.445Z","appMessage":"Consumer exception","class":"org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"ERROR","exception":"java.lang.IllegalStateException: This error handler cannot process 'SerializationException's directly; please consider configuring an 'ErrorHandlingDeserializer' in the value and/or key deserializer\r\n\tat org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:194)\r\n\tat org.springframework.kafka.listener.SeekToCurrentErrorHandler.handle(SeekToCurrentErrorHandler.java:112)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.handleConsumerException(KafkaMessageListenerContainer.java:1599)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1210)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Error deserializing key/value for partition customer-topic-2-0 at offset 0. If needed, please seek past the record to continue consumption.\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Can't deserialize data [[104, 105, 32, 116, 104, 101, 114, 101]] from topic [customer-topic-2]\r\nCaused by: com.fasterxml.jackson.core.JsonParseException: Unrecognized token 'hi': was expecting (JSON String, Number, Array, Object or token 'null', 'true' or 'false')\n at [Source: (byte[])\"hi there\"; line: 1, column: 4]\r\n\tat com.fasterxml.jackson.core.JsonParser._constructError(JsonParser.java:2337)\r\n\tat com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(ParserMinimalBase.java:720)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportInvalidToken(UTF8StreamJsonParser.java:3593)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleUnexpectedValue(UTF8StreamJsonParser.java:2688)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._nextTokenNotInObject(UTF8StreamJsonParser.java:870)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextToken(UTF8StreamJsonParser.java:762)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._initForReading(ObjectReader.java:355)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._bindAndClose(ObjectReader.java:2023)\r\n\tat com.fasterxml.jackson.databind.ObjectReader.readValue(ObjectReader.java:1528)\r\n\tat org.springframework.kafka.support.serializer.JsonDeserializer.deserialize(JsonDeserializer.java:534)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.parseRecord(Fetcher.java:1387)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.access$3400(Fetcher.java:133)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.fetchRecords(Fetcher.java:1618)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.access$1700(Fetcher.java:1454)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchRecords(Fetcher.java:687)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchedRecords(Fetcher.java:638)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.pollForFetches(KafkaConsumer.java:1272)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1233)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1206)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doPoll(KafkaMessageListenerContainer.java:1410)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1249)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1161)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:46:40.449Z","appMessage":"Consumer exception","class":"org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"ERROR","exception":"java.lang.IllegalStateException: This error handler cannot process 'SerializationException's directly; please consider configuring an 'ErrorHandlingDeserializer' in the value and/or key deserializer\r\n\tat org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:194)\r\n\tat org.springframework.kafka.listener.SeekToCurrentErrorHandler.handle(SeekToCurrentErrorHandler.java:112)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.handleConsumerException(KafkaMessageListenerContainer.java:1599)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1210)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Error deserializing key/value for partition customer-topic-2-0 at offset 0. If needed, please seek past the record to continue consumption.\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Can't deserialize data [[104, 105, 32, 116, 104, 101, 114, 101]] from topic [customer-topic-2]\r\nCaused by: com.fasterxml.jackson.core.JsonParseException: Unrecognized token 'hi': was expecting (JSON String, Number, Array, Object or token 'null', 'true' or 'false')\n at [Source: (byte[])\"hi there\"; line: 1, column: 4]\r\n\tat com.fasterxml.jackson.core.JsonParser._constructError(JsonParser.java:2337)\r\n\tat com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(ParserMinimalBase.java:720)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportInvalidToken(UTF8StreamJsonParser.java:3593)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleUnexpectedValue(UTF8StreamJsonParser.java:2688)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._nextTokenNotInObject(UTF8StreamJsonParser.java:870)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextToken(UTF8StreamJsonParser.java:762)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._initForReading(ObjectReader.java:355)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._bindAndClose(ObjectReader.java:2023)\r\n\tat com.fasterxml.jackson.databind.ObjectReader.readValue(ObjectReader.java:1528)\r\n\tat org.springframework.kafka.support.serializer.JsonDeserializer.deserialize(JsonDeserializer.java:534)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.parseRecord(Fetcher.java:1387)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.access$3400(Fetcher.java:133)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.fetchRecords(Fetcher.java:1618)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.access$1700(Fetcher.java:1454)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchRecords(Fetcher.java:687)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchedRecords(Fetcher.java:638)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.pollForFetches(KafkaConsumer.java:1272)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1233)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1206)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doPoll(KafkaMessageListenerContainer.java:1410)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1249)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1161)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:46:40.454Z","appMessage":"Consumer exception","class":"org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"ERROR","exception":"java.lang.IllegalStateException: This error handler cannot process 'SerializationException's directly; please consider configuring an 'ErrorHandlingDeserializer' in the value and/or key deserializer\r\n\tat org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:194)\r\n\tat org.springframework.kafka.listener.SeekToCurrentErrorHandler.handle(SeekToCurrentErrorHandler.java:112)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.handleConsumerException(KafkaMessageListenerContainer.java:1599)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1210)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Error deserializing key/value for partition customer-topic-2-0 at offset 0. If needed, please seek past the record to continue consumption.\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Can't deserialize data [[104, 105, 32, 116, 104, 101, 114, 101]] from topic [customer-topic-2]\r\nCaused by: com.fasterxml.jackson.core.JsonParseException: Unrecognized token 'hi': was expecting (JSON String, Number, Array, Object or token 'null', 'true' or 'false')\n at [Source: (byte[])\"hi there\"; line: 1, column: 4]\r\n\tat com.fasterxml.jackson.core.JsonParser._constructError(JsonParser.java:2337)\r\n\tat com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(ParserMinimalBase.java:720)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportInvalidToken(UTF8StreamJsonParser.java:3593)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleUnexpectedValue(UTF8StreamJsonParser.java:2688)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._nextTokenNotInObject(UTF8StreamJsonParser.java:870)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextToken(UTF8StreamJsonParser.java:762)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._initForReading(ObjectReader.java:355)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._bindAndClose(ObjectReader.java:2023)\r\n\tat com.fasterxml.jackson.databind.ObjectReader.readValue(ObjectReader.java:1528)\r\n\tat org.springframework.kafka.support.serializer.JsonDeserializer.deserialize(JsonDeserializer.java:534)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.parseRecord(Fetcher.java:1387)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.access$3400(Fetcher.java:133)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.fetchRecords(Fetcher.java:1618)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.access$1700(Fetcher.java:1454)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchRecords(Fetcher.java:687)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchedRecords(Fetcher.java:638)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.pollForFetches(KafkaConsumer.java:1272)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1233)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1206)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doPoll(KafkaMessageListenerContainer.java:1410)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1249)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1161)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:46:40.459Z","appMessage":"Consumer exception","class":"org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"ERROR","exception":"java.lang.IllegalStateException: This error handler cannot process 'SerializationException's directly; please consider configuring an 'ErrorHandlingDeserializer' in the value and/or key deserializer\r\n\tat org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:194)\r\n\tat org.springframework.kafka.listener.SeekToCurrentErrorHandler.handle(SeekToCurrentErrorHandler.java:112)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.handleConsumerException(KafkaMessageListenerContainer.java:1599)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1210)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Error deserializing key/value for partition customer-topic-2-0 at offset 0. If needed, please seek past the record to continue consumption.\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Can't deserialize data [[104, 105, 32, 116, 104, 101, 114, 101]] from topic [customer-topic-2]\r\nCaused by: com.fasterxml.jackson.core.JsonParseException: Unrecognized token 'hi': was expecting (JSON String, Number, Array, Object or token 'null', 'true' or 'false')\n at [Source: (byte[])\"hi there\"; line: 1, column: 4]\r\n\tat com.fasterxml.jackson.core.JsonParser._constructError(JsonParser.java:2337)\r\n\tat com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(ParserMinimalBase.java:720)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportInvalidToken(UTF8StreamJsonParser.java:3593)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleUnexpectedValue(UTF8StreamJsonParser.java:2688)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._nextTokenNotInObject(UTF8StreamJsonParser.java:870)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextToken(UTF8StreamJsonParser.java:762)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._initForReading(ObjectReader.java:355)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._bindAndClose(ObjectReader.java:2023)\r\n\tat com.fasterxml.jackson.databind.ObjectReader.readValue(ObjectReader.java:1528)\r\n\tat org.springframework.kafka.support.serializer.JsonDeserializer.deserialize(JsonDeserializer.java:534)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.parseRecord(Fetcher.java:1387)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.access$3400(Fetcher.java:133)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.fetchRecords(Fetcher.java:1618)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.access$1700(Fetcher.java:1454)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchRecords(Fetcher.java:687)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchedRecords(Fetcher.java:638)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.pollForFetches(KafkaConsumer.java:1272)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1233)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1206)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doPoll(KafkaMessageListenerContainer.java:1410)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1249)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1161)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:46:40.464Z","appMessage":"Consumer exception","class":"org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"ERROR","exception":"java.lang.IllegalStateException: This error handler cannot process 'SerializationException's directly; please consider configuring an 'ErrorHandlingDeserializer' in the value and/or key deserializer\r\n\tat org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:194)\r\n\tat org.springframework.kafka.listener.SeekToCurrentErrorHandler.handle(SeekToCurrentErrorHandler.java:112)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.handleConsumerException(KafkaMessageListenerContainer.java:1599)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1210)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Error deserializing key/value for partition customer-topic-2-0 at offset 0. If needed, please seek past the record to continue consumption.\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Can't deserialize data [[104, 105, 32, 116, 104, 101, 114, 101]] from topic [customer-topic-2]\r\nCaused by: com.fasterxml.jackson.core.JsonParseException: Unrecognized token 'hi': was expecting (JSON String, Number, Array, Object or token 'null', 'true' or 'false')\n at [Source: (byte[])\"hi there\"; line: 1, column: 4]\r\n\tat com.fasterxml.jackson.core.JsonParser._constructError(JsonParser.java:2337)\r\n\tat com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(ParserMinimalBase.java:720)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportInvalidToken(UTF8StreamJsonParser.java:3593)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleUnexpectedValue(UTF8StreamJsonParser.java:2688)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._nextTokenNotInObject(UTF8StreamJsonParser.java:870)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextToken(UTF8StreamJsonParser.java:762)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._initForReading(ObjectReader.java:355)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._bindAndClose(ObjectReader.java:2023)\r\n\tat com.fasterxml.jackson.databind.ObjectReader.readValue(ObjectReader.java:1528)\r\n\tat org.springframework.kafka.support.serializer.JsonDeserializer.deserialize(JsonDeserializer.java:534)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.parseRecord(Fetcher.java:1387)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.access$3400(Fetcher.java:133)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.fetchRecords(Fetcher.java:1618)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.access$1700(Fetcher.java:1454)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchRecords(Fetcher.java:687)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchedRecords(Fetcher.java:638)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.pollForFetches(KafkaConsumer.java:1272)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1233)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1206)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doPoll(KafkaMessageListenerContainer.java:1410)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1249)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1161)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:46:40.468Z","appMessage":"Consumer exception","class":"org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"ERROR","exception":"java.lang.IllegalStateException: This error handler cannot process 'SerializationException's directly; please consider configuring an 'ErrorHandlingDeserializer' in the value and/or key deserializer\r\n\tat org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:194)\r\n\tat org.springframework.kafka.listener.SeekToCurrentErrorHandler.handle(SeekToCurrentErrorHandler.java:112)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.handleConsumerException(KafkaMessageListenerContainer.java:1599)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1210)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Error deserializing key/value for partition customer-topic-2-0 at offset 0. If needed, please seek past the record to continue consumption.\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Can't deserialize data [[104, 105, 32, 116, 104, 101, 114, 101]] from topic [customer-topic-2]\r\nCaused by: com.fasterxml.jackson.core.JsonParseException: Unrecognized token 'hi': was expecting (JSON String, Number, Array, Object or token 'null', 'true' or 'false')\n at [Source: (byte[])\"hi there\"; line: 1, column: 4]\r\n\tat com.fasterxml.jackson.core.JsonParser._constructError(JsonParser.java:2337)\r\n\tat com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(ParserMinimalBase.java:720)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportInvalidToken(UTF8StreamJsonParser.java:3593)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleUnexpectedValue(UTF8StreamJsonParser.java:2688)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._nextTokenNotInObject(UTF8StreamJsonParser.java:870)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextToken(UTF8StreamJsonParser.java:762)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._initForReading(ObjectReader.java:355)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._bindAndClose(ObjectReader.java:2023)\r\n\tat com.fasterxml.jackson.databind.ObjectReader.readValue(ObjectReader.java:1528)\r\n\tat org.springframework.kafka.support.serializer.JsonDeserializer.deserialize(JsonDeserializer.java:534)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.parseRecord(Fetcher.java:1387)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.access$3400(Fetcher.java:133)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.fetchRecords(Fetcher.java:1618)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.access$1700(Fetcher.java:1454)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchRecords(Fetcher.java:687)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchedRecords(Fetcher.java:638)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.pollForFetches(KafkaConsumer.java:1272)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1233)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1206)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doPoll(KafkaMessageListenerContainer.java:1410)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1249)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1161)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:46:40.473Z","appMessage":"Consumer exception","class":"org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"ERROR","exception":"java.lang.IllegalStateException: This error handler cannot process 'SerializationException's directly; please consider configuring an 'ErrorHandlingDeserializer' in the value and/or key deserializer\r\n\tat org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:194)\r\n\tat org.springframework.kafka.listener.SeekToCurrentErrorHandler.handle(SeekToCurrentErrorHandler.java:112)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.handleConsumerException(KafkaMessageListenerContainer.java:1599)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1210)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Error deserializing key/value for partition customer-topic-2-0 at offset 0. If needed, please seek past the record to continue consumption.\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Can't deserialize data [[104, 105, 32, 116, 104, 101, 114, 101]] from topic [customer-topic-2]\r\nCaused by: com.fasterxml.jackson.core.JsonParseException: Unrecognized token 'hi': was expecting (JSON String, Number, Array, Object or token 'null', 'true' or 'false')\n at [Source: (byte[])\"hi there\"; line: 1, column: 4]\r\n\tat com.fasterxml.jackson.core.JsonParser._constructError(JsonParser.java:2337)\r\n\tat com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(ParserMinimalBase.java:720)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportInvalidToken(UTF8StreamJsonParser.java:3593)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleUnexpectedValue(UTF8StreamJsonParser.java:2688)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._nextTokenNotInObject(UTF8StreamJsonParser.java:870)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextToken(UTF8StreamJsonParser.java:762)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._initForReading(ObjectReader.java:355)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._bindAndClose(ObjectReader.java:2023)\r\n\tat com.fasterxml.jackson.databind.ObjectReader.readValue(ObjectReader.java:1528)\r\n\tat org.springframework.kafka.support.serializer.JsonDeserializer.deserialize(JsonDeserializer.java:534)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.parseRecord(Fetcher.java:1387)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.access$3400(Fetcher.java:133)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.fetchRecords(Fetcher.java:1618)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.access$1700(Fetcher.java:1454)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchRecords(Fetcher.java:687)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchedRecords(Fetcher.java:638)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.pollForFetches(KafkaConsumer.java:1272)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1233)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1206)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doPoll(KafkaMessageListenerContainer.java:1410)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1249)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1161)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:46:40.478Z","appMessage":"Consumer exception","class":"org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"ERROR","exception":"java.lang.IllegalStateException: This error handler cannot process 'SerializationException's directly; please consider configuring an 'ErrorHandlingDeserializer' in the value and/or key deserializer\r\n\tat org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:194)\r\n\tat org.springframework.kafka.listener.SeekToCurrentErrorHandler.handle(SeekToCurrentErrorHandler.java:112)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.handleConsumerException(KafkaMessageListenerContainer.java:1599)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1210)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Error deserializing key/value for partition customer-topic-2-0 at offset 0. If needed, please seek past the record to continue consumption.\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Can't deserialize data [[104, 105, 32, 116, 104, 101, 114, 101]] from topic [customer-topic-2]\r\nCaused by: com.fasterxml.jackson.core.JsonParseException: Unrecognized token 'hi': was expecting (JSON String, Number, Array, Object or token 'null', 'true' or 'false')\n at [Source: (byte[])\"hi there\"; line: 1, column: 4]\r\n\tat com.fasterxml.jackson.core.JsonParser._constructError(JsonParser.java:2337)\r\n\tat com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(ParserMinimalBase.java:720)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportInvalidToken(UTF8StreamJsonParser.java:3593)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleUnexpectedValue(UTF8StreamJsonParser.java:2688)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._nextTokenNotInObject(UTF8StreamJsonParser.java:870)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextToken(UTF8StreamJsonParser.java:762)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._initForReading(ObjectReader.java:355)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._bindAndClose(ObjectReader.java:2023)\r\n\tat com.fasterxml.jackson.databind.ObjectReader.readValue(ObjectReader.java:1528)\r\n\tat org.springframework.kafka.support.serializer.JsonDeserializer.deserialize(JsonDeserializer.java:534)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.parseRecord(Fetcher.java:1387)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.access$3400(Fetcher.java:133)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.fetchRecords(Fetcher.java:1618)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.access$1700(Fetcher.java:1454)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchRecords(Fetcher.java:687)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchedRecords(Fetcher.java:638)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.pollForFetches(KafkaConsumer.java:1272)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1233)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1206)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doPoll(KafkaMessageListenerContainer.java:1410)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1249)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1161)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:46:40.482Z","appMessage":"Consumer exception","class":"org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"ERROR","exception":"java.lang.IllegalStateException: This error handler cannot process 'SerializationException's directly; please consider configuring an 'ErrorHandlingDeserializer' in the value and/or key deserializer\r\n\tat org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:194)\r\n\tat org.springframework.kafka.listener.SeekToCurrentErrorHandler.handle(SeekToCurrentErrorHandler.java:112)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.handleConsumerException(KafkaMessageListenerContainer.java:1599)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1210)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Error deserializing key/value for partition customer-topic-2-0 at offset 0. If needed, please seek past the record to continue consumption.\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Can't deserialize data [[104, 105, 32, 116, 104, 101, 114, 101]] from topic [customer-topic-2]\r\nCaused by: com.fasterxml.jackson.core.JsonParseException: Unrecognized token 'hi': was expecting (JSON String, Number, Array, Object or token 'null', 'true' or 'false')\n at [Source: (byte[])\"hi there\"; line: 1, column: 4]\r\n\tat com.fasterxml.jackson.core.JsonParser._constructError(JsonParser.java:2337)\r\n\tat com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(ParserMinimalBase.java:720)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportInvalidToken(UTF8StreamJsonParser.java:3593)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleUnexpectedValue(UTF8StreamJsonParser.java:2688)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._nextTokenNotInObject(UTF8StreamJsonParser.java:870)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextToken(UTF8StreamJsonParser.java:762)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._initForReading(ObjectReader.java:355)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._bindAndClose(ObjectReader.java:2023)\r\n\tat com.fasterxml.jackson.databind.ObjectReader.readValue(ObjectReader.java:1528)\r\n\tat org.springframework.kafka.support.serializer.JsonDeserializer.deserialize(JsonDeserializer.java:534)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.parseRecord(Fetcher.java:1387)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.access$3400(Fetcher.java:133)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.fetchRecords(Fetcher.java:1618)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.access$1700(Fetcher.java:1454)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchRecords(Fetcher.java:687)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchedRecords(Fetcher.java:638)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.pollForFetches(KafkaConsumer.java:1272)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1233)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1206)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doPoll(KafkaMessageListenerContainer.java:1410)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1249)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1161)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:46:40.487Z","appMessage":"Consumer exception","class":"org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"ERROR","exception":"java.lang.IllegalStateException: This error handler cannot process 'SerializationException's directly; please consider configuring an 'ErrorHandlingDeserializer' in the value and/or key deserializer\r\n\tat org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:194)\r\n\tat org.springframework.kafka.listener.SeekToCurrentErrorHandler.handle(SeekToCurrentErrorHandler.java:112)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.handleConsumerException(KafkaMessageListenerContainer.java:1599)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1210)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Error deserializing key/value for partition customer-topic-2-0 at offset 0. If needed, please seek past the record to continue consumption.\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Can't deserialize data [[104, 105, 32, 116, 104, 101, 114, 101]] from topic [customer-topic-2]\r\nCaused by: com.fasterxml.jackson.core.JsonParseException: Unrecognized token 'hi': was expecting (JSON String, Number, Array, Object or token 'null', 'true' or 'false')\n at [Source: (byte[])\"hi there\"; line: 1, column: 4]\r\n\tat com.fasterxml.jackson.core.JsonParser._constructError(JsonParser.java:2337)\r\n\tat com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(ParserMinimalBase.java:720)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportInvalidToken(UTF8StreamJsonParser.java:3593)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleUnexpectedValue(UTF8StreamJsonParser.java:2688)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._nextTokenNotInObject(UTF8StreamJsonParser.java:870)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextToken(UTF8StreamJsonParser.java:762)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._initForReading(ObjectReader.java:355)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._bindAndClose(ObjectReader.java:2023)\r\n\tat com.fasterxml.jackson.databind.ObjectReader.readValue(ObjectReader.java:1528)\r\n\tat org.springframework.kafka.support.serializer.JsonDeserializer.deserialize(JsonDeserializer.java:534)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.parseRecord(Fetcher.java:1387)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.access$3400(Fetcher.java:133)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.fetchRecords(Fetcher.java:1618)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.access$1700(Fetcher.java:1454)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchRecords(Fetcher.java:687)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchedRecords(Fetcher.java:638)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.pollForFetches(KafkaConsumer.java:1272)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1233)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1206)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doPoll(KafkaMessageListenerContainer.java:1410)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1249)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1161)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:46:40.491Z","appMessage":"Consumer exception","class":"org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"ERROR","exception":"java.lang.IllegalStateException: This error handler cannot process 'SerializationException's directly; please consider configuring an 'ErrorHandlingDeserializer' in the value and/or key deserializer\r\n\tat org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:194)\r\n\tat org.springframework.kafka.listener.SeekToCurrentErrorHandler.handle(SeekToCurrentErrorHandler.java:112)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.handleConsumerException(KafkaMessageListenerContainer.java:1599)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1210)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Error deserializing key/value for partition customer-topic-2-0 at offset 0. If needed, please seek past the record to continue consumption.\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Can't deserialize data [[104, 105, 32, 116, 104, 101, 114, 101]] from topic [customer-topic-2]\r\nCaused by: com.fasterxml.jackson.core.JsonParseException: Unrecognized token 'hi': was expecting (JSON String, Number, Array, Object or token 'null', 'true' or 'false')\n at [Source: (byte[])\"hi there\"; line: 1, column: 4]\r\n\tat com.fasterxml.jackson.core.JsonParser._constructError(JsonParser.java:2337)\r\n\tat com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(ParserMinimalBase.java:720)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportInvalidToken(UTF8StreamJsonParser.java:3593)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleUnexpectedValue(UTF8StreamJsonParser.java:2688)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._nextTokenNotInObject(UTF8StreamJsonParser.java:870)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextToken(UTF8StreamJsonParser.java:762)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._initForReading(ObjectReader.java:355)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._bindAndClose(ObjectReader.java:2023)\r\n\tat com.fasterxml.jackson.databind.ObjectReader.readValue(ObjectReader.java:1528)\r\n\tat org.springframework.kafka.support.serializer.JsonDeserializer.deserialize(JsonDeserializer.java:534)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.parseRecord(Fetcher.java:1387)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.access$3400(Fetcher.java:133)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.fetchRecords(Fetcher.java:1618)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.access$1700(Fetcher.java:1454)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchRecords(Fetcher.java:687)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchedRecords(Fetcher.java:638)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.pollForFetches(KafkaConsumer.java:1272)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1233)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1206)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doPoll(KafkaMessageListenerContainer.java:1410)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1249)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1161)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:46:40.496Z","appMessage":"Consumer exception","class":"org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"ERROR","exception":"java.lang.IllegalStateException: This error handler cannot process 'SerializationException's directly; please consider configuring an 'ErrorHandlingDeserializer' in the value and/or key deserializer\r\n\tat org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:194)\r\n\tat org.springframework.kafka.listener.SeekToCurrentErrorHandler.handle(SeekToCurrentErrorHandler.java:112)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.handleConsumerException(KafkaMessageListenerContainer.java:1599)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1210)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Error deserializing key/value for partition customer-topic-2-0 at offset 0. If needed, please seek past the record to continue consumption.\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Can't deserialize data [[104, 105, 32, 116, 104, 101, 114, 101]] from topic [customer-topic-2]\r\nCaused by: com.fasterxml.jackson.core.JsonParseException: Unrecognized token 'hi': was expecting (JSON String, Number, Array, Object or token 'null', 'true' or 'false')\n at [Source: (byte[])\"hi there\"; line: 1, column: 4]\r\n\tat com.fasterxml.jackson.core.JsonParser._constructError(JsonParser.java:2337)\r\n\tat com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(ParserMinimalBase.java:720)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportInvalidToken(UTF8StreamJsonParser.java:3593)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleUnexpectedValue(UTF8StreamJsonParser.java:2688)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._nextTokenNotInObject(UTF8StreamJsonParser.java:870)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextToken(UTF8StreamJsonParser.java:762)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._initForReading(ObjectReader.java:355)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._bindAndClose(ObjectReader.java:2023)\r\n\tat com.fasterxml.jackson.databind.ObjectReader.readValue(ObjectReader.java:1528)\r\n\tat org.springframework.kafka.support.serializer.JsonDeserializer.deserialize(JsonDeserializer.java:534)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.parseRecord(Fetcher.java:1387)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.access$3400(Fetcher.java:133)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.fetchRecords(Fetcher.java:1618)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.access$1700(Fetcher.java:1454)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchRecords(Fetcher.java:687)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchedRecords(Fetcher.java:638)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.pollForFetches(KafkaConsumer.java:1272)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1233)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1206)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doPoll(KafkaMessageListenerContainer.java:1410)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1249)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1161)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:46:40.500Z","appMessage":"Consumer exception","class":"org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"ERROR","exception":"java.lang.IllegalStateException: This error handler cannot process 'SerializationException's directly; please consider configuring an 'ErrorHandlingDeserializer' in the value and/or key deserializer\r\n\tat org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:194)\r\n\tat org.springframework.kafka.listener.SeekToCurrentErrorHandler.handle(SeekToCurrentErrorHandler.java:112)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.handleConsumerException(KafkaMessageListenerContainer.java:1599)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1210)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Error deserializing key/value for partition customer-topic-2-0 at offset 0. If needed, please seek past the record to continue consumption.\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Can't deserialize data [[104, 105, 32, 116, 104, 101, 114, 101]] from topic [customer-topic-2]\r\nCaused by: com.fasterxml.jackson.core.JsonParseException: Unrecognized token 'hi': was expecting (JSON String, Number, Array, Object or token 'null', 'true' or 'false')\n at [Source: (byte[])\"hi there\"; line: 1, column: 4]\r\n\tat com.fasterxml.jackson.core.JsonParser._constructError(JsonParser.java:2337)\r\n\tat com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(ParserMinimalBase.java:720)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportInvalidToken(UTF8StreamJsonParser.java:3593)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleUnexpectedValue(UTF8StreamJsonParser.java:2688)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._nextTokenNotInObject(UTF8StreamJsonParser.java:870)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextToken(UTF8StreamJsonParser.java:762)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._initForReading(ObjectReader.java:355)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._bindAndClose(ObjectReader.java:2023)\r\n\tat com.fasterxml.jackson.databind.ObjectReader.readValue(ObjectReader.java:1528)\r\n\tat org.springframework.kafka.support.serializer.JsonDeserializer.deserialize(JsonDeserializer.java:534)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.parseRecord(Fetcher.java:1387)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.access$3400(Fetcher.java:133)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.fetchRecords(Fetcher.java:1618)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.access$1700(Fetcher.java:1454)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchRecords(Fetcher.java:687)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchedRecords(Fetcher.java:638)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.pollForFetches(KafkaConsumer.java:1272)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1233)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1206)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doPoll(KafkaMessageListenerContainer.java:1410)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1249)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1161)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:46:40.504Z","appMessage":"Consumer exception","class":"org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"ERROR","exception":"java.lang.IllegalStateException: This error handler cannot process 'SerializationException's directly; please consider configuring an 'ErrorHandlingDeserializer' in the value and/or key deserializer\r\n\tat org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:194)\r\n\tat org.springframework.kafka.listener.SeekToCurrentErrorHandler.handle(SeekToCurrentErrorHandler.java:112)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.handleConsumerException(KafkaMessageListenerContainer.java:1599)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1210)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Error deserializing key/value for partition customer-topic-2-0 at offset 0. If needed, please seek past the record to continue consumption.\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Can't deserialize data [[104, 105, 32, 116, 104, 101, 114, 101]] from topic [customer-topic-2]\r\nCaused by: com.fasterxml.jackson.core.JsonParseException: Unrecognized token 'hi': was expecting (JSON String, Number, Array, Object or token 'null', 'true' or 'false')\n at [Source: (byte[])\"hi there\"; line: 1, column: 4]\r\n\tat com.fasterxml.jackson.core.JsonParser._constructError(JsonParser.java:2337)\r\n\tat com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(ParserMinimalBase.java:720)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportInvalidToken(UTF8StreamJsonParser.java:3593)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleUnexpectedValue(UTF8StreamJsonParser.java:2688)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._nextTokenNotInObject(UTF8StreamJsonParser.java:870)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextToken(UTF8StreamJsonParser.java:762)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._initForReading(ObjectReader.java:355)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._bindAndClose(ObjectReader.java:2023)\r\n\tat com.fasterxml.jackson.databind.ObjectReader.readValue(ObjectReader.java:1528)\r\n\tat org.springframework.kafka.support.serializer.JsonDeserializer.deserialize(JsonDeserializer.java:534)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.parseRecord(Fetcher.java:1387)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.access$3400(Fetcher.java:133)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.fetchRecords(Fetcher.java:1618)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.access$1700(Fetcher.java:1454)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchRecords(Fetcher.java:687)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchedRecords(Fetcher.java:638)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.pollForFetches(KafkaConsumer.java:1272)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1233)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1206)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doPoll(KafkaMessageListenerContainer.java:1410)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1249)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1161)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:46:40.509Z","appMessage":"Consumer exception","class":"org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"ERROR","exception":"java.lang.IllegalStateException: This error handler cannot process 'SerializationException's directly; please consider configuring an 'ErrorHandlingDeserializer' in the value and/or key deserializer\r\n\tat org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:194)\r\n\tat org.springframework.kafka.listener.SeekToCurrentErrorHandler.handle(SeekToCurrentErrorHandler.java:112)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.handleConsumerException(KafkaMessageListenerContainer.java:1599)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1210)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Error deserializing key/value for partition customer-topic-2-0 at offset 0. If needed, please seek past the record to continue consumption.\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Can't deserialize data [[104, 105, 32, 116, 104, 101, 114, 101]] from topic [customer-topic-2]\r\nCaused by: com.fasterxml.jackson.core.JsonParseException: Unrecognized token 'hi': was expecting (JSON String, Number, Array, Object or token 'null', 'true' or 'false')\n at [Source: (byte[])\"hi there\"; line: 1, column: 4]\r\n\tat com.fasterxml.jackson.core.JsonParser._constructError(JsonParser.java:2337)\r\n\tat com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(ParserMinimalBase.java:720)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportInvalidToken(UTF8StreamJsonParser.java:3593)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleUnexpectedValue(UTF8StreamJsonParser.java:2688)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._nextTokenNotInObject(UTF8StreamJsonParser.java:870)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextToken(UTF8StreamJsonParser.java:762)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._initForReading(ObjectReader.java:355)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._bindAndClose(ObjectReader.java:2023)\r\n\tat com.fasterxml.jackson.databind.ObjectReader.readValue(ObjectReader.java:1528)\r\n\tat org.springframework.kafka.support.serializer.JsonDeserializer.deserialize(JsonDeserializer.java:534)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.parseRecord(Fetcher.java:1387)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.access$3400(Fetcher.java:133)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.fetchRecords(Fetcher.java:1618)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.access$1700(Fetcher.java:1454)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchRecords(Fetcher.java:687)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchedRecords(Fetcher.java:638)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.pollForFetches(KafkaConsumer.java:1272)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1233)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1206)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doPoll(KafkaMessageListenerContainer.java:1410)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1249)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1161)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:46:40.513Z","appMessage":"Consumer exception","class":"org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"ERROR","exception":"java.lang.IllegalStateException: This error handler cannot process 'SerializationException's directly; please consider configuring an 'ErrorHandlingDeserializer' in the value and/or key deserializer\r\n\tat org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:194)\r\n\tat org.springframework.kafka.listener.SeekToCurrentErrorHandler.handle(SeekToCurrentErrorHandler.java:112)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.handleConsumerException(KafkaMessageListenerContainer.java:1599)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1210)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Error deserializing key/value for partition customer-topic-2-0 at offset 0. If needed, please seek past the record to continue consumption.\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Can't deserialize data [[104, 105, 32, 116, 104, 101, 114, 101]] from topic [customer-topic-2]\r\nCaused by: com.fasterxml.jackson.core.JsonParseException: Unrecognized token 'hi': was expecting (JSON String, Number, Array, Object or token 'null', 'true' or 'false')\n at [Source: (byte[])\"hi there\"; line: 1, column: 4]\r\n\tat com.fasterxml.jackson.core.JsonParser._constructError(JsonParser.java:2337)\r\n\tat com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(ParserMinimalBase.java:720)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportInvalidToken(UTF8StreamJsonParser.java:3593)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleUnexpectedValue(UTF8StreamJsonParser.java:2688)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._nextTokenNotInObject(UTF8StreamJsonParser.java:870)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextToken(UTF8StreamJsonParser.java:762)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._initForReading(ObjectReader.java:355)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._bindAndClose(ObjectReader.java:2023)\r\n\tat com.fasterxml.jackson.databind.ObjectReader.readValue(ObjectReader.java:1528)\r\n\tat org.springframework.kafka.support.serializer.JsonDeserializer.deserialize(JsonDeserializer.java:534)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.parseRecord(Fetcher.java:1387)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.access$3400(Fetcher.java:133)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.fetchRecords(Fetcher.java:1618)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.access$1700(Fetcher.java:1454)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchRecords(Fetcher.java:687)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchedRecords(Fetcher.java:638)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.pollForFetches(KafkaConsumer.java:1272)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1233)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1206)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doPoll(KafkaMessageListenerContainer.java:1410)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1249)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1161)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:46:40.518Z","appMessage":"Consumer exception","class":"org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"ERROR","exception":"java.lang.IllegalStateException: This error handler cannot process 'SerializationException's directly; please consider configuring an 'ErrorHandlingDeserializer' in the value and/or key deserializer\r\n\tat org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:194)\r\n\tat org.springframework.kafka.listener.SeekToCurrentErrorHandler.handle(SeekToCurrentErrorHandler.java:112)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.handleConsumerException(KafkaMessageListenerContainer.java:1599)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1210)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Error deserializing key/value for partition customer-topic-2-0 at offset 0. If needed, please seek past the record to continue consumption.\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Can't deserialize data [[104, 105, 32, 116, 104, 101, 114, 101]] from topic [customer-topic-2]\r\nCaused by: com.fasterxml.jackson.core.JsonParseException: Unrecognized token 'hi': was expecting (JSON String, Number, Array, Object or token 'null', 'true' or 'false')\n at [Source: (byte[])\"hi there\"; line: 1, column: 4]\r\n\tat com.fasterxml.jackson.core.JsonParser._constructError(JsonParser.java:2337)\r\n\tat com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(ParserMinimalBase.java:720)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportInvalidToken(UTF8StreamJsonParser.java:3593)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleUnexpectedValue(UTF8StreamJsonParser.java:2688)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._nextTokenNotInObject(UTF8StreamJsonParser.java:870)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextToken(UTF8StreamJsonParser.java:762)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._initForReading(ObjectReader.java:355)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._bindAndClose(ObjectReader.java:2023)\r\n\tat com.fasterxml.jackson.databind.ObjectReader.readValue(ObjectReader.java:1528)\r\n\tat org.springframework.kafka.support.serializer.JsonDeserializer.deserialize(JsonDeserializer.java:534)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.parseRecord(Fetcher.java:1387)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.access$3400(Fetcher.java:133)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.fetchRecords(Fetcher.java:1618)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.access$1700(Fetcher.java:1454)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchRecords(Fetcher.java:687)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchedRecords(Fetcher.java:638)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.pollForFetches(KafkaConsumer.java:1272)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1233)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1206)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doPoll(KafkaMessageListenerContainer.java:1410)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1249)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1161)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:46:40.522Z","appMessage":"Consumer exception","class":"org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"ERROR","exception":"java.lang.IllegalStateException: This error handler cannot process 'SerializationException's directly; please consider configuring an 'ErrorHandlingDeserializer' in the value and/or key deserializer\r\n\tat org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:194)\r\n\tat org.springframework.kafka.listener.SeekToCurrentErrorHandler.handle(SeekToCurrentErrorHandler.java:112)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.handleConsumerException(KafkaMessageListenerContainer.java:1599)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1210)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Error deserializing key/value for partition customer-topic-2-0 at offset 0. If needed, please seek past the record to continue consumption.\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Can't deserialize data [[104, 105, 32, 116, 104, 101, 114, 101]] from topic [customer-topic-2]\r\nCaused by: com.fasterxml.jackson.core.JsonParseException: Unrecognized token 'hi': was expecting (JSON String, Number, Array, Object or token 'null', 'true' or 'false')\n at [Source: (byte[])\"hi there\"; line: 1, column: 4]\r\n\tat com.fasterxml.jackson.core.JsonParser._constructError(JsonParser.java:2337)\r\n\tat com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(ParserMinimalBase.java:720)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportInvalidToken(UTF8StreamJsonParser.java:3593)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleUnexpectedValue(UTF8StreamJsonParser.java:2688)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._nextTokenNotInObject(UTF8StreamJsonParser.java:870)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextToken(UTF8StreamJsonParser.java:762)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._initForReading(ObjectReader.java:355)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._bindAndClose(ObjectReader.java:2023)\r\n\tat com.fasterxml.jackson.databind.ObjectReader.readValue(ObjectReader.java:1528)\r\n\tat org.springframework.kafka.support.serializer.JsonDeserializer.deserialize(JsonDeserializer.java:534)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.parseRecord(Fetcher.java:1387)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.access$3400(Fetcher.java:133)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.fetchRecords(Fetcher.java:1618)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.access$1700(Fetcher.java:1454)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchRecords(Fetcher.java:687)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchedRecords(Fetcher.java:638)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.pollForFetches(KafkaConsumer.java:1272)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1233)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1206)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doPoll(KafkaMessageListenerContainer.java:1410)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1249)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1161)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:46:40.526Z","appMessage":"Consumer exception","class":"org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"ERROR","exception":"java.lang.IllegalStateException: This error handler cannot process 'SerializationException's directly; please consider configuring an 'ErrorHandlingDeserializer' in the value and/or key deserializer\r\n\tat org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:194)\r\n\tat org.springframework.kafka.listener.SeekToCurrentErrorHandler.handle(SeekToCurrentErrorHandler.java:112)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.handleConsumerException(KafkaMessageListenerContainer.java:1599)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1210)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Error deserializing key/value for partition customer-topic-2-0 at offset 0. If needed, please seek past the record to continue consumption.\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Can't deserialize data [[104, 105, 32, 116, 104, 101, 114, 101]] from topic [customer-topic-2]\r\nCaused by: com.fasterxml.jackson.core.JsonParseException: Unrecognized token 'hi': was expecting (JSON String, Number, Array, Object or token 'null', 'true' or 'false')\n at [Source: (byte[])\"hi there\"; line: 1, column: 4]\r\n\tat com.fasterxml.jackson.core.JsonParser._constructError(JsonParser.java:2337)\r\n\tat com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(ParserMinimalBase.java:720)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportInvalidToken(UTF8StreamJsonParser.java:3593)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleUnexpectedValue(UTF8StreamJsonParser.java:2688)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._nextTokenNotInObject(UTF8StreamJsonParser.java:870)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextToken(UTF8StreamJsonParser.java:762)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._initForReading(ObjectReader.java:355)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._bindAndClose(ObjectReader.java:2023)\r\n\tat com.fasterxml.jackson.databind.ObjectReader.readValue(ObjectReader.java:1528)\r\n\tat org.springframework.kafka.support.serializer.JsonDeserializer.deserialize(JsonDeserializer.java:534)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.parseRecord(Fetcher.java:1387)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.access$3400(Fetcher.java:133)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.fetchRecords(Fetcher.java:1618)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.access$1700(Fetcher.java:1454)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchRecords(Fetcher.java:687)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchedRecords(Fetcher.java:638)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.pollForFetches(KafkaConsumer.java:1272)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1233)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1206)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doPoll(KafkaMessageListenerContainer.java:1410)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1249)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1161)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:46:40.531Z","appMessage":"Consumer exception","class":"org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"ERROR","exception":"java.lang.IllegalStateException: This error handler cannot process 'SerializationException's directly; please consider configuring an 'ErrorHandlingDeserializer' in the value and/or key deserializer\r\n\tat org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:194)\r\n\tat org.springframework.kafka.listener.SeekToCurrentErrorHandler.handle(SeekToCurrentErrorHandler.java:112)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.handleConsumerException(KafkaMessageListenerContainer.java:1599)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1210)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Error deserializing key/value for partition customer-topic-2-0 at offset 0. If needed, please seek past the record to continue consumption.\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Can't deserialize data [[104, 105, 32, 116, 104, 101, 114, 101]] from topic [customer-topic-2]\r\nCaused by: com.fasterxml.jackson.core.JsonParseException: Unrecognized token 'hi': was expecting (JSON String, Number, Array, Object or token 'null', 'true' or 'false')\n at [Source: (byte[])\"hi there\"; line: 1, column: 4]\r\n\tat com.fasterxml.jackson.core.JsonParser._constructError(JsonParser.java:2337)\r\n\tat com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(ParserMinimalBase.java:720)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportInvalidToken(UTF8StreamJsonParser.java:3593)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleUnexpectedValue(UTF8StreamJsonParser.java:2688)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._nextTokenNotInObject(UTF8StreamJsonParser.java:870)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextToken(UTF8StreamJsonParser.java:762)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._initForReading(ObjectReader.java:355)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._bindAndClose(ObjectReader.java:2023)\r\n\tat com.fasterxml.jackson.databind.ObjectReader.readValue(ObjectReader.java:1528)\r\n\tat org.springframework.kafka.support.serializer.JsonDeserializer.deserialize(JsonDeserializer.java:534)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.parseRecord(Fetcher.java:1387)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.access$3400(Fetcher.java:133)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.fetchRecords(Fetcher.java:1618)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.access$1700(Fetcher.java:1454)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchRecords(Fetcher.java:687)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchedRecords(Fetcher.java:638)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.pollForFetches(KafkaConsumer.java:1272)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1233)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1206)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doPoll(KafkaMessageListenerContainer.java:1410)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1249)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1161)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:46:40.535Z","appMessage":"Consumer exception","class":"org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"ERROR","exception":"java.lang.IllegalStateException: This error handler cannot process 'SerializationException's directly; please consider configuring an 'ErrorHandlingDeserializer' in the value and/or key deserializer\r\n\tat org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:194)\r\n\tat org.springframework.kafka.listener.SeekToCurrentErrorHandler.handle(SeekToCurrentErrorHandler.java:112)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.handleConsumerException(KafkaMessageListenerContainer.java:1599)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1210)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Error deserializing key/value for partition customer-topic-2-0 at offset 0. If needed, please seek past the record to continue consumption.\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Can't deserialize data [[104, 105, 32, 116, 104, 101, 114, 101]] from topic [customer-topic-2]\r\nCaused by: com.fasterxml.jackson.core.JsonParseException: Unrecognized token 'hi': was expecting (JSON String, Number, Array, Object or token 'null', 'true' or 'false')\n at [Source: (byte[])\"hi there\"; line: 1, column: 4]\r\n\tat com.fasterxml.jackson.core.JsonParser._constructError(JsonParser.java:2337)\r\n\tat com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(ParserMinimalBase.java:720)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportInvalidToken(UTF8StreamJsonParser.java:3593)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleUnexpectedValue(UTF8StreamJsonParser.java:2688)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._nextTokenNotInObject(UTF8StreamJsonParser.java:870)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextToken(UTF8StreamJsonParser.java:762)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._initForReading(ObjectReader.java:355)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._bindAndClose(ObjectReader.java:2023)\r\n\tat com.fasterxml.jackson.databind.ObjectReader.readValue(ObjectReader.java:1528)\r\n\tat org.springframework.kafka.support.serializer.JsonDeserializer.deserialize(JsonDeserializer.java:534)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.parseRecord(Fetcher.java:1387)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.access$3400(Fetcher.java:133)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.fetchRecords(Fetcher.java:1618)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.access$1700(Fetcher.java:1454)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchRecords(Fetcher.java:687)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchedRecords(Fetcher.java:638)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.pollForFetches(KafkaConsumer.java:1272)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1233)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1206)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doPoll(KafkaMessageListenerContainer.java:1410)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1249)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1161)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:46:40.539Z","appMessage":"Consumer exception","class":"org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"ERROR","exception":"java.lang.IllegalStateException: This error handler cannot process 'SerializationException's directly; please consider configuring an 'ErrorHandlingDeserializer' in the value and/or key deserializer\r\n\tat org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:194)\r\n\tat org.springframework.kafka.listener.SeekToCurrentErrorHandler.handle(SeekToCurrentErrorHandler.java:112)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.handleConsumerException(KafkaMessageListenerContainer.java:1599)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1210)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Error deserializing key/value for partition customer-topic-2-0 at offset 0. If needed, please seek past the record to continue consumption.\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Can't deserialize data [[104, 105, 32, 116, 104, 101, 114, 101]] from topic [customer-topic-2]\r\nCaused by: com.fasterxml.jackson.core.JsonParseException: Unrecognized token 'hi': was expecting (JSON String, Number, Array, Object or token 'null', 'true' or 'false')\n at [Source: (byte[])\"hi there\"; line: 1, column: 4]\r\n\tat com.fasterxml.jackson.core.JsonParser._constructError(JsonParser.java:2337)\r\n\tat com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(ParserMinimalBase.java:720)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportInvalidToken(UTF8StreamJsonParser.java:3593)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleUnexpectedValue(UTF8StreamJsonParser.java:2688)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._nextTokenNotInObject(UTF8StreamJsonParser.java:870)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextToken(UTF8StreamJsonParser.java:762)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._initForReading(ObjectReader.java:355)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._bindAndClose(ObjectReader.java:2023)\r\n\tat com.fasterxml.jackson.databind.ObjectReader.readValue(ObjectReader.java:1528)\r\n\tat org.springframework.kafka.support.serializer.JsonDeserializer.deserialize(JsonDeserializer.java:534)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.parseRecord(Fetcher.java:1387)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.access$3400(Fetcher.java:133)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.fetchRecords(Fetcher.java:1618)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.access$1700(Fetcher.java:1454)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchRecords(Fetcher.java:687)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchedRecords(Fetcher.java:638)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.pollForFetches(KafkaConsumer.java:1272)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1233)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1206)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doPoll(KafkaMessageListenerContainer.java:1410)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1249)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1161)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:46:40.544Z","appMessage":"Consumer exception","class":"org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"ERROR","exception":"java.lang.IllegalStateException: This error handler cannot process 'SerializationException's directly; please consider configuring an 'ErrorHandlingDeserializer' in the value and/or key deserializer\r\n\tat org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:194)\r\n\tat org.springframework.kafka.listener.SeekToCurrentErrorHandler.handle(SeekToCurrentErrorHandler.java:112)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.handleConsumerException(KafkaMessageListenerContainer.java:1599)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1210)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Error deserializing key/value for partition customer-topic-2-0 at offset 0. If needed, please seek past the record to continue consumption.\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Can't deserialize data [[104, 105, 32, 116, 104, 101, 114, 101]] from topic [customer-topic-2]\r\nCaused by: com.fasterxml.jackson.core.JsonParseException: Unrecognized token 'hi': was expecting (JSON String, Number, Array, Object or token 'null', 'true' or 'false')\n at [Source: (byte[])\"hi there\"; line: 1, column: 4]\r\n\tat com.fasterxml.jackson.core.JsonParser._constructError(JsonParser.java:2337)\r\n\tat com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(ParserMinimalBase.java:720)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportInvalidToken(UTF8StreamJsonParser.java:3593)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleUnexpectedValue(UTF8StreamJsonParser.java:2688)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._nextTokenNotInObject(UTF8StreamJsonParser.java:870)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextToken(UTF8StreamJsonParser.java:762)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._initForReading(ObjectReader.java:355)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._bindAndClose(ObjectReader.java:2023)\r\n\tat com.fasterxml.jackson.databind.ObjectReader.readValue(ObjectReader.java:1528)\r\n\tat org.springframework.kafka.support.serializer.JsonDeserializer.deserialize(JsonDeserializer.java:534)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.parseRecord(Fetcher.java:1387)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.access$3400(Fetcher.java:133)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.fetchRecords(Fetcher.java:1618)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.access$1700(Fetcher.java:1454)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchRecords(Fetcher.java:687)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchedRecords(Fetcher.java:638)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.pollForFetches(KafkaConsumer.java:1272)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1233)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1206)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doPoll(KafkaMessageListenerContainer.java:1410)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1249)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1161)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:46:40.548Z","appMessage":"Consumer exception","class":"org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"ERROR","exception":"java.lang.IllegalStateException: This error handler cannot process 'SerializationException's directly; please consider configuring an 'ErrorHandlingDeserializer' in the value and/or key deserializer\r\n\tat org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:194)\r\n\tat org.springframework.kafka.listener.SeekToCurrentErrorHandler.handle(SeekToCurrentErrorHandler.java:112)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.handleConsumerException(KafkaMessageListenerContainer.java:1599)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1210)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Error deserializing key/value for partition customer-topic-2-0 at offset 0. If needed, please seek past the record to continue consumption.\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Can't deserialize data [[104, 105, 32, 116, 104, 101, 114, 101]] from topic [customer-topic-2]\r\nCaused by: com.fasterxml.jackson.core.JsonParseException: Unrecognized token 'hi': was expecting (JSON String, Number, Array, Object or token 'null', 'true' or 'false')\n at [Source: (byte[])\"hi there\"; line: 1, column: 4]\r\n\tat com.fasterxml.jackson.core.JsonParser._constructError(JsonParser.java:2337)\r\n\tat com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(ParserMinimalBase.java:720)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportInvalidToken(UTF8StreamJsonParser.java:3593)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleUnexpectedValue(UTF8StreamJsonParser.java:2688)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._nextTokenNotInObject(UTF8StreamJsonParser.java:870)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextToken(UTF8StreamJsonParser.java:762)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._initForReading(ObjectReader.java:355)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._bindAndClose(ObjectReader.java:2023)\r\n\tat com.fasterxml.jackson.databind.ObjectReader.readValue(ObjectReader.java:1528)\r\n\tat org.springframework.kafka.support.serializer.JsonDeserializer.deserialize(JsonDeserializer.java:534)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.parseRecord(Fetcher.java:1387)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.access$3400(Fetcher.java:133)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.fetchRecords(Fetcher.java:1618)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.access$1700(Fetcher.java:1454)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchRecords(Fetcher.java:687)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchedRecords(Fetcher.java:638)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.pollForFetches(KafkaConsumer.java:1272)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1233)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1206)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doPoll(KafkaMessageListenerContainer.java:1410)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1249)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1161)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:46:40.552Z","appMessage":"Consumer exception","class":"org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"ERROR","exception":"java.lang.IllegalStateException: This error handler cannot process 'SerializationException's directly; please consider configuring an 'ErrorHandlingDeserializer' in the value and/or key deserializer\r\n\tat org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:194)\r\n\tat org.springframework.kafka.listener.SeekToCurrentErrorHandler.handle(SeekToCurrentErrorHandler.java:112)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.handleConsumerException(KafkaMessageListenerContainer.java:1599)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1210)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Error deserializing key/value for partition customer-topic-2-0 at offset 0. If needed, please seek past the record to continue consumption.\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Can't deserialize data [[104, 105, 32, 116, 104, 101, 114, 101]] from topic [customer-topic-2]\r\nCaused by: com.fasterxml.jackson.core.JsonParseException: Unrecognized token 'hi': was expecting (JSON String, Number, Array, Object or token 'null', 'true' or 'false')\n at [Source: (byte[])\"hi there\"; line: 1, column: 4]\r\n\tat com.fasterxml.jackson.core.JsonParser._constructError(JsonParser.java:2337)\r\n\tat com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(ParserMinimalBase.java:720)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportInvalidToken(UTF8StreamJsonParser.java:3593)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleUnexpectedValue(UTF8StreamJsonParser.java:2688)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._nextTokenNotInObject(UTF8StreamJsonParser.java:870)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextToken(UTF8StreamJsonParser.java:762)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._initForReading(ObjectReader.java:355)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._bindAndClose(ObjectReader.java:2023)\r\n\tat com.fasterxml.jackson.databind.ObjectReader.readValue(ObjectReader.java:1528)\r\n\tat org.springframework.kafka.support.serializer.JsonDeserializer.deserialize(JsonDeserializer.java:534)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.parseRecord(Fetcher.java:1387)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.access$3400(Fetcher.java:133)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.fetchRecords(Fetcher.java:1618)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.access$1700(Fetcher.java:1454)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchRecords(Fetcher.java:687)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchedRecords(Fetcher.java:638)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.pollForFetches(KafkaConsumer.java:1272)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1233)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1206)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doPoll(KafkaMessageListenerContainer.java:1410)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1249)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1161)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:46:40.556Z","appMessage":"Consumer exception","class":"org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"ERROR","exception":"java.lang.IllegalStateException: This error handler cannot process 'SerializationException's directly; please consider configuring an 'ErrorHandlingDeserializer' in the value and/or key deserializer\r\n\tat org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:194)\r\n\tat org.springframework.kafka.listener.SeekToCurrentErrorHandler.handle(SeekToCurrentErrorHandler.java:112)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.handleConsumerException(KafkaMessageListenerContainer.java:1599)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1210)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Error deserializing key/value for partition customer-topic-2-0 at offset 0. If needed, please seek past the record to continue consumption.\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Can't deserialize data [[104, 105, 32, 116, 104, 101, 114, 101]] from topic [customer-topic-2]\r\nCaused by: com.fasterxml.jackson.core.JsonParseException: Unrecognized token 'hi': was expecting (JSON String, Number, Array, Object or token 'null', 'true' or 'false')\n at [Source: (byte[])\"hi there\"; line: 1, column: 4]\r\n\tat com.fasterxml.jackson.core.JsonParser._constructError(JsonParser.java:2337)\r\n\tat com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(ParserMinimalBase.java:720)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportInvalidToken(UTF8StreamJsonParser.java:3593)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleUnexpectedValue(UTF8StreamJsonParser.java:2688)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._nextTokenNotInObject(UTF8StreamJsonParser.java:870)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextToken(UTF8StreamJsonParser.java:762)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._initForReading(ObjectReader.java:355)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._bindAndClose(ObjectReader.java:2023)\r\n\tat com.fasterxml.jackson.databind.ObjectReader.readValue(ObjectReader.java:1528)\r\n\tat org.springframework.kafka.support.serializer.JsonDeserializer.deserialize(JsonDeserializer.java:534)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.parseRecord(Fetcher.java:1387)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.access$3400(Fetcher.java:133)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.fetchRecords(Fetcher.java:1618)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.access$1700(Fetcher.java:1454)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchRecords(Fetcher.java:687)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchedRecords(Fetcher.java:638)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.pollForFetches(KafkaConsumer.java:1272)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1233)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1206)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doPoll(KafkaMessageListenerContainer.java:1410)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1249)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1161)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:46:40.561Z","appMessage":"Consumer exception","class":"org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"ERROR","exception":"java.lang.IllegalStateException: This error handler cannot process 'SerializationException's directly; please consider configuring an 'ErrorHandlingDeserializer' in the value and/or key deserializer\r\n\tat org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:194)\r\n\tat org.springframework.kafka.listener.SeekToCurrentErrorHandler.handle(SeekToCurrentErrorHandler.java:112)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.handleConsumerException(KafkaMessageListenerContainer.java:1599)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1210)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Error deserializing key/value for partition customer-topic-2-0 at offset 0. If needed, please seek past the record to continue consumption.\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Can't deserialize data [[104, 105, 32, 116, 104, 101, 114, 101]] from topic [customer-topic-2]\r\nCaused by: com.fasterxml.jackson.core.JsonParseException: Unrecognized token 'hi': was expecting (JSON String, Number, Array, Object or token 'null', 'true' or 'false')\n at [Source: (byte[])\"hi there\"; line: 1, column: 4]\r\n\tat com.fasterxml.jackson.core.JsonParser._constructError(JsonParser.java:2337)\r\n\tat com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(ParserMinimalBase.java:720)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportInvalidToken(UTF8StreamJsonParser.java:3593)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleUnexpectedValue(UTF8StreamJsonParser.java:2688)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._nextTokenNotInObject(UTF8StreamJsonParser.java:870)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextToken(UTF8StreamJsonParser.java:762)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._initForReading(ObjectReader.java:355)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._bindAndClose(ObjectReader.java:2023)\r\n\tat com.fasterxml.jackson.databind.ObjectReader.readValue(ObjectReader.java:1528)\r\n\tat org.springframework.kafka.support.serializer.JsonDeserializer.deserialize(JsonDeserializer.java:534)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.parseRecord(Fetcher.java:1387)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.access$3400(Fetcher.java:133)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.fetchRecords(Fetcher.java:1618)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.access$1700(Fetcher.java:1454)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchRecords(Fetcher.java:687)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchedRecords(Fetcher.java:638)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.pollForFetches(KafkaConsumer.java:1272)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1233)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1206)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doPoll(KafkaMessageListenerContainer.java:1410)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1249)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1161)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:46:40.565Z","appMessage":"Consumer exception","class":"org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"ERROR","exception":"java.lang.IllegalStateException: This error handler cannot process 'SerializationException's directly; please consider configuring an 'ErrorHandlingDeserializer' in the value and/or key deserializer\r\n\tat org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:194)\r\n\tat org.springframework.kafka.listener.SeekToCurrentErrorHandler.handle(SeekToCurrentErrorHandler.java:112)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.handleConsumerException(KafkaMessageListenerContainer.java:1599)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1210)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Error deserializing key/value for partition customer-topic-2-0 at offset 0. If needed, please seek past the record to continue consumption.\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Can't deserialize data [[104, 105, 32, 116, 104, 101, 114, 101]] from topic [customer-topic-2]\r\nCaused by: com.fasterxml.jackson.core.JsonParseException: Unrecognized token 'hi': was expecting (JSON String, Number, Array, Object or token 'null', 'true' or 'false')\n at [Source: (byte[])\"hi there\"; line: 1, column: 4]\r\n\tat com.fasterxml.jackson.core.JsonParser._constructError(JsonParser.java:2337)\r\n\tat com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(ParserMinimalBase.java:720)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportInvalidToken(UTF8StreamJsonParser.java:3593)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleUnexpectedValue(UTF8StreamJsonParser.java:2688)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._nextTokenNotInObject(UTF8StreamJsonParser.java:870)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextToken(UTF8StreamJsonParser.java:762)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._initForReading(ObjectReader.java:355)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._bindAndClose(ObjectReader.java:2023)\r\n\tat com.fasterxml.jackson.databind.ObjectReader.readValue(ObjectReader.java:1528)\r\n\tat org.springframework.kafka.support.serializer.JsonDeserializer.deserialize(JsonDeserializer.java:534)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.parseRecord(Fetcher.java:1387)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.access$3400(Fetcher.java:133)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.fetchRecords(Fetcher.java:1618)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.access$1700(Fetcher.java:1454)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchRecords(Fetcher.java:687)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchedRecords(Fetcher.java:638)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.pollForFetches(KafkaConsumer.java:1272)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1233)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1206)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doPoll(KafkaMessageListenerContainer.java:1410)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1249)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1161)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:46:40.571Z","appMessage":"Consumer exception","class":"org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"ERROR","exception":"java.lang.IllegalStateException: This error handler cannot process 'SerializationException's directly; please consider configuring an 'ErrorHandlingDeserializer' in the value and/or key deserializer\r\n\tat org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:194)\r\n\tat org.springframework.kafka.listener.SeekToCurrentErrorHandler.handle(SeekToCurrentErrorHandler.java:112)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.handleConsumerException(KafkaMessageListenerContainer.java:1599)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1210)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Error deserializing key/value for partition customer-topic-2-0 at offset 0. If needed, please seek past the record to continue consumption.\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Can't deserialize data [[104, 105, 32, 116, 104, 101, 114, 101]] from topic [customer-topic-2]\r\nCaused by: com.fasterxml.jackson.core.JsonParseException: Unrecognized token 'hi': was expecting (JSON String, Number, Array, Object or token 'null', 'true' or 'false')\n at [Source: (byte[])\"hi there\"; line: 1, column: 4]\r\n\tat com.fasterxml.jackson.core.JsonParser._constructError(JsonParser.java:2337)\r\n\tat com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(ParserMinimalBase.java:720)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportInvalidToken(UTF8StreamJsonParser.java:3593)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleUnexpectedValue(UTF8StreamJsonParser.java:2688)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._nextTokenNotInObject(UTF8StreamJsonParser.java:870)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextToken(UTF8StreamJsonParser.java:762)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._initForReading(ObjectReader.java:355)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._bindAndClose(ObjectReader.java:2023)\r\n\tat com.fasterxml.jackson.databind.ObjectReader.readValue(ObjectReader.java:1528)\r\n\tat org.springframework.kafka.support.serializer.JsonDeserializer.deserialize(JsonDeserializer.java:534)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.parseRecord(Fetcher.java:1387)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.access$3400(Fetcher.java:133)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.fetchRecords(Fetcher.java:1618)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.access$1700(Fetcher.java:1454)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchRecords(Fetcher.java:687)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchedRecords(Fetcher.java:638)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.pollForFetches(KafkaConsumer.java:1272)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1233)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1206)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doPoll(KafkaMessageListenerContainer.java:1410)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1249)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1161)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:46:40.576Z","appMessage":"Consumer exception","class":"org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"ERROR","exception":"java.lang.IllegalStateException: This error handler cannot process 'SerializationException's directly; please consider configuring an 'ErrorHandlingDeserializer' in the value and/or key deserializer\r\n\tat org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:194)\r\n\tat org.springframework.kafka.listener.SeekToCurrentErrorHandler.handle(SeekToCurrentErrorHandler.java:112)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.handleConsumerException(KafkaMessageListenerContainer.java:1599)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1210)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Error deserializing key/value for partition customer-topic-2-0 at offset 0. If needed, please seek past the record to continue consumption.\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Can't deserialize data [[104, 105, 32, 116, 104, 101, 114, 101]] from topic [customer-topic-2]\r\nCaused by: com.fasterxml.jackson.core.JsonParseException: Unrecognized token 'hi': was expecting (JSON String, Number, Array, Object or token 'null', 'true' or 'false')\n at [Source: (byte[])\"hi there\"; line: 1, column: 4]\r\n\tat com.fasterxml.jackson.core.JsonParser._constructError(JsonParser.java:2337)\r\n\tat com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(ParserMinimalBase.java:720)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportInvalidToken(UTF8StreamJsonParser.java:3593)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleUnexpectedValue(UTF8StreamJsonParser.java:2688)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._nextTokenNotInObject(UTF8StreamJsonParser.java:870)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextToken(UTF8StreamJsonParser.java:762)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._initForReading(ObjectReader.java:355)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._bindAndClose(ObjectReader.java:2023)\r\n\tat com.fasterxml.jackson.databind.ObjectReader.readValue(ObjectReader.java:1528)\r\n\tat org.springframework.kafka.support.serializer.JsonDeserializer.deserialize(JsonDeserializer.java:534)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.parseRecord(Fetcher.java:1387)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.access$3400(Fetcher.java:133)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.fetchRecords(Fetcher.java:1618)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.access$1700(Fetcher.java:1454)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchRecords(Fetcher.java:687)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchedRecords(Fetcher.java:638)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.pollForFetches(KafkaConsumer.java:1272)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1233)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1206)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doPoll(KafkaMessageListenerContainer.java:1410)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1249)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1161)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:46:40.581Z","appMessage":"Consumer exception","class":"org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"ERROR","exception":"java.lang.IllegalStateException: This error handler cannot process 'SerializationException's directly; please consider configuring an 'ErrorHandlingDeserializer' in the value and/or key deserializer\r\n\tat org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:194)\r\n\tat org.springframework.kafka.listener.SeekToCurrentErrorHandler.handle(SeekToCurrentErrorHandler.java:112)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.handleConsumerException(KafkaMessageListenerContainer.java:1599)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1210)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Error deserializing key/value for partition customer-topic-2-0 at offset 0. If needed, please seek past the record to continue consumption.\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Can't deserialize data [[104, 105, 32, 116, 104, 101, 114, 101]] from topic [customer-topic-2]\r\nCaused by: com.fasterxml.jackson.core.JsonParseException: Unrecognized token 'hi': was expecting (JSON String, Number, Array, Object or token 'null', 'true' or 'false')\n at [Source: (byte[])\"hi there\"; line: 1, column: 4]\r\n\tat com.fasterxml.jackson.core.JsonParser._constructError(JsonParser.java:2337)\r\n\tat com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(ParserMinimalBase.java:720)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportInvalidToken(UTF8StreamJsonParser.java:3593)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleUnexpectedValue(UTF8StreamJsonParser.java:2688)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._nextTokenNotInObject(UTF8StreamJsonParser.java:870)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextToken(UTF8StreamJsonParser.java:762)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._initForReading(ObjectReader.java:355)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._bindAndClose(ObjectReader.java:2023)\r\n\tat com.fasterxml.jackson.databind.ObjectReader.readValue(ObjectReader.java:1528)\r\n\tat org.springframework.kafka.support.serializer.JsonDeserializer.deserialize(JsonDeserializer.java:534)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.parseRecord(Fetcher.java:1387)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.access$3400(Fetcher.java:133)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.fetchRecords(Fetcher.java:1618)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.access$1700(Fetcher.java:1454)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchRecords(Fetcher.java:687)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchedRecords(Fetcher.java:638)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.pollForFetches(KafkaConsumer.java:1272)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1233)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1206)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doPoll(KafkaMessageListenerContainer.java:1410)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1249)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1161)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:46:40.585Z","appMessage":"Consumer exception","class":"org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"ERROR","exception":"java.lang.IllegalStateException: This error handler cannot process 'SerializationException's directly; please consider configuring an 'ErrorHandlingDeserializer' in the value and/or key deserializer\r\n\tat org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:194)\r\n\tat org.springframework.kafka.listener.SeekToCurrentErrorHandler.handle(SeekToCurrentErrorHandler.java:112)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.handleConsumerException(KafkaMessageListenerContainer.java:1599)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1210)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Error deserializing key/value for partition customer-topic-2-0 at offset 0. If needed, please seek past the record to continue consumption.\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Can't deserialize data [[104, 105, 32, 116, 104, 101, 114, 101]] from topic [customer-topic-2]\r\nCaused by: com.fasterxml.jackson.core.JsonParseException: Unrecognized token 'hi': was expecting (JSON String, Number, Array, Object or token 'null', 'true' or 'false')\n at [Source: (byte[])\"hi there\"; line: 1, column: 4]\r\n\tat com.fasterxml.jackson.core.JsonParser._constructError(JsonParser.java:2337)\r\n\tat com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(ParserMinimalBase.java:720)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportInvalidToken(UTF8StreamJsonParser.java:3593)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleUnexpectedValue(UTF8StreamJsonParser.java:2688)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._nextTokenNotInObject(UTF8StreamJsonParser.java:870)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextToken(UTF8StreamJsonParser.java:762)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._initForReading(ObjectReader.java:355)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._bindAndClose(ObjectReader.java:2023)\r\n\tat com.fasterxml.jackson.databind.ObjectReader.readValue(ObjectReader.java:1528)\r\n\tat org.springframework.kafka.support.serializer.JsonDeserializer.deserialize(JsonDeserializer.java:534)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.parseRecord(Fetcher.java:1387)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.access$3400(Fetcher.java:133)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.fetchRecords(Fetcher.java:1618)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.access$1700(Fetcher.java:1454)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchRecords(Fetcher.java:687)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchedRecords(Fetcher.java:638)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.pollForFetches(KafkaConsumer.java:1272)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1233)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1206)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doPoll(KafkaMessageListenerContainer.java:1410)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1249)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1161)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:46:40.590Z","appMessage":"Consumer exception","class":"org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"ERROR","exception":"java.lang.IllegalStateException: This error handler cannot process 'SerializationException's directly; please consider configuring an 'ErrorHandlingDeserializer' in the value and/or key deserializer\r\n\tat org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:194)\r\n\tat org.springframework.kafka.listener.SeekToCurrentErrorHandler.handle(SeekToCurrentErrorHandler.java:112)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.handleConsumerException(KafkaMessageListenerContainer.java:1599)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1210)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Error deserializing key/value for partition customer-topic-2-0 at offset 0. If needed, please seek past the record to continue consumption.\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Can't deserialize data [[104, 105, 32, 116, 104, 101, 114, 101]] from topic [customer-topic-2]\r\nCaused by: com.fasterxml.jackson.core.JsonParseException: Unrecognized token 'hi': was expecting (JSON String, Number, Array, Object or token 'null', 'true' or 'false')\n at [Source: (byte[])\"hi there\"; line: 1, column: 4]\r\n\tat com.fasterxml.jackson.core.JsonParser._constructError(JsonParser.java:2337)\r\n\tat com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(ParserMinimalBase.java:720)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportInvalidToken(UTF8StreamJsonParser.java:3593)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleUnexpectedValue(UTF8StreamJsonParser.java:2688)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._nextTokenNotInObject(UTF8StreamJsonParser.java:870)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextToken(UTF8StreamJsonParser.java:762)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._initForReading(ObjectReader.java:355)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._bindAndClose(ObjectReader.java:2023)\r\n\tat com.fasterxml.jackson.databind.ObjectReader.readValue(ObjectReader.java:1528)\r\n\tat org.springframework.kafka.support.serializer.JsonDeserializer.deserialize(JsonDeserializer.java:534)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.parseRecord(Fetcher.java:1387)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.access$3400(Fetcher.java:133)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.fetchRecords(Fetcher.java:1618)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.access$1700(Fetcher.java:1454)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchRecords(Fetcher.java:687)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchedRecords(Fetcher.java:638)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.pollForFetches(KafkaConsumer.java:1272)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1233)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1206)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doPoll(KafkaMessageListenerContainer.java:1410)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1249)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1161)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:46:40.594Z","appMessage":"Consumer exception","class":"org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"ERROR","exception":"java.lang.IllegalStateException: This error handler cannot process 'SerializationException's directly; please consider configuring an 'ErrorHandlingDeserializer' in the value and/or key deserializer\r\n\tat org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:194)\r\n\tat org.springframework.kafka.listener.SeekToCurrentErrorHandler.handle(SeekToCurrentErrorHandler.java:112)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.handleConsumerException(KafkaMessageListenerContainer.java:1599)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1210)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Error deserializing key/value for partition customer-topic-2-0 at offset 0. If needed, please seek past the record to continue consumption.\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Can't deserialize data [[104, 105, 32, 116, 104, 101, 114, 101]] from topic [customer-topic-2]\r\nCaused by: com.fasterxml.jackson.core.JsonParseException: Unrecognized token 'hi': was expecting (JSON String, Number, Array, Object or token 'null', 'true' or 'false')\n at [Source: (byte[])\"hi there\"; line: 1, column: 4]\r\n\tat com.fasterxml.jackson.core.JsonParser._constructError(JsonParser.java:2337)\r\n\tat com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(ParserMinimalBase.java:720)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportInvalidToken(UTF8StreamJsonParser.java:3593)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleUnexpectedValue(UTF8StreamJsonParser.java:2688)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._nextTokenNotInObject(UTF8StreamJsonParser.java:870)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextToken(UTF8StreamJsonParser.java:762)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._initForReading(ObjectReader.java:355)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._bindAndClose(ObjectReader.java:2023)\r\n\tat com.fasterxml.jackson.databind.ObjectReader.readValue(ObjectReader.java:1528)\r\n\tat org.springframework.kafka.support.serializer.JsonDeserializer.deserialize(JsonDeserializer.java:534)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.parseRecord(Fetcher.java:1387)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.access$3400(Fetcher.java:133)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.fetchRecords(Fetcher.java:1618)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.access$1700(Fetcher.java:1454)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchRecords(Fetcher.java:687)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchedRecords(Fetcher.java:638)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.pollForFetches(KafkaConsumer.java:1272)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1233)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1206)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doPoll(KafkaMessageListenerContainer.java:1410)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1249)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1161)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:46:40.599Z","appMessage":"Consumer exception","class":"org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"ERROR","exception":"java.lang.IllegalStateException: This error handler cannot process 'SerializationException's directly; please consider configuring an 'ErrorHandlingDeserializer' in the value and/or key deserializer\r\n\tat org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:194)\r\n\tat org.springframework.kafka.listener.SeekToCurrentErrorHandler.handle(SeekToCurrentErrorHandler.java:112)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.handleConsumerException(KafkaMessageListenerContainer.java:1599)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1210)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Error deserializing key/value for partition customer-topic-2-0 at offset 0. If needed, please seek past the record to continue consumption.\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Can't deserialize data [[104, 105, 32, 116, 104, 101, 114, 101]] from topic [customer-topic-2]\r\nCaused by: com.fasterxml.jackson.core.JsonParseException: Unrecognized token 'hi': was expecting (JSON String, Number, Array, Object or token 'null', 'true' or 'false')\n at [Source: (byte[])\"hi there\"; line: 1, column: 4]\r\n\tat com.fasterxml.jackson.core.JsonParser._constructError(JsonParser.java:2337)\r\n\tat com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(ParserMinimalBase.java:720)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportInvalidToken(UTF8StreamJsonParser.java:3593)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleUnexpectedValue(UTF8StreamJsonParser.java:2688)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._nextTokenNotInObject(UTF8StreamJsonParser.java:870)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextToken(UTF8StreamJsonParser.java:762)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._initForReading(ObjectReader.java:355)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._bindAndClose(ObjectReader.java:2023)\r\n\tat com.fasterxml.jackson.databind.ObjectReader.readValue(ObjectReader.java:1528)\r\n\tat org.springframework.kafka.support.serializer.JsonDeserializer.deserialize(JsonDeserializer.java:534)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.parseRecord(Fetcher.java:1387)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.access$3400(Fetcher.java:133)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.fetchRecords(Fetcher.java:1618)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.access$1700(Fetcher.java:1454)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchRecords(Fetcher.java:687)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchedRecords(Fetcher.java:638)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.pollForFetches(KafkaConsumer.java:1272)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1233)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1206)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doPoll(KafkaMessageListenerContainer.java:1410)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1249)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1161)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:46:40.603Z","appMessage":"Consumer exception","class":"org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"ERROR","exception":"java.lang.IllegalStateException: This error handler cannot process 'SerializationException's directly; please consider configuring an 'ErrorHandlingDeserializer' in the value and/or key deserializer\r\n\tat org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:194)\r\n\tat org.springframework.kafka.listener.SeekToCurrentErrorHandler.handle(SeekToCurrentErrorHandler.java:112)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.handleConsumerException(KafkaMessageListenerContainer.java:1599)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1210)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Error deserializing key/value for partition customer-topic-2-0 at offset 0. If needed, please seek past the record to continue consumption.\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Can't deserialize data [[104, 105, 32, 116, 104, 101, 114, 101]] from topic [customer-topic-2]\r\nCaused by: com.fasterxml.jackson.core.JsonParseException: Unrecognized token 'hi': was expecting (JSON String, Number, Array, Object or token 'null', 'true' or 'false')\n at [Source: (byte[])\"hi there\"; line: 1, column: 4]\r\n\tat com.fasterxml.jackson.core.JsonParser._constructError(JsonParser.java:2337)\r\n\tat com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(ParserMinimalBase.java:720)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportInvalidToken(UTF8StreamJsonParser.java:3593)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleUnexpectedValue(UTF8StreamJsonParser.java:2688)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._nextTokenNotInObject(UTF8StreamJsonParser.java:870)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextToken(UTF8StreamJsonParser.java:762)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._initForReading(ObjectReader.java:355)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._bindAndClose(ObjectReader.java:2023)\r\n\tat com.fasterxml.jackson.databind.ObjectReader.readValue(ObjectReader.java:1528)\r\n\tat org.springframework.kafka.support.serializer.JsonDeserializer.deserialize(JsonDeserializer.java:534)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.parseRecord(Fetcher.java:1387)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.access$3400(Fetcher.java:133)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.fetchRecords(Fetcher.java:1618)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.access$1700(Fetcher.java:1454)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchRecords(Fetcher.java:687)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchedRecords(Fetcher.java:638)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.pollForFetches(KafkaConsumer.java:1272)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1233)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1206)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doPoll(KafkaMessageListenerContainer.java:1410)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1249)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1161)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:46:40.608Z","appMessage":"Consumer exception","class":"org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"ERROR","exception":"java.lang.IllegalStateException: This error handler cannot process 'SerializationException's directly; please consider configuring an 'ErrorHandlingDeserializer' in the value and/or key deserializer\r\n\tat org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:194)\r\n\tat org.springframework.kafka.listener.SeekToCurrentErrorHandler.handle(SeekToCurrentErrorHandler.java:112)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.handleConsumerException(KafkaMessageListenerContainer.java:1599)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1210)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Error deserializing key/value for partition customer-topic-2-0 at offset 0. If needed, please seek past the record to continue consumption.\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Can't deserialize data [[104, 105, 32, 116, 104, 101, 114, 101]] from topic [customer-topic-2]\r\nCaused by: com.fasterxml.jackson.core.JsonParseException: Unrecognized token 'hi': was expecting (JSON String, Number, Array, Object or token 'null', 'true' or 'false')\n at [Source: (byte[])\"hi there\"; line: 1, column: 4]\r\n\tat com.fasterxml.jackson.core.JsonParser._constructError(JsonParser.java:2337)\r\n\tat com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(ParserMinimalBase.java:720)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportInvalidToken(UTF8StreamJsonParser.java:3593)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleUnexpectedValue(UTF8StreamJsonParser.java:2688)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._nextTokenNotInObject(UTF8StreamJsonParser.java:870)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextToken(UTF8StreamJsonParser.java:762)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._initForReading(ObjectReader.java:355)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._bindAndClose(ObjectReader.java:2023)\r\n\tat com.fasterxml.jackson.databind.ObjectReader.readValue(ObjectReader.java:1528)\r\n\tat org.springframework.kafka.support.serializer.JsonDeserializer.deserialize(JsonDeserializer.java:534)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.parseRecord(Fetcher.java:1387)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.access$3400(Fetcher.java:133)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.fetchRecords(Fetcher.java:1618)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.access$1700(Fetcher.java:1454)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchRecords(Fetcher.java:687)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchedRecords(Fetcher.java:638)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.pollForFetches(KafkaConsumer.java:1272)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1233)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1206)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doPoll(KafkaMessageListenerContainer.java:1410)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1249)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1161)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:46:40.612Z","appMessage":"Consumer exception","class":"org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"ERROR","exception":"java.lang.IllegalStateException: This error handler cannot process 'SerializationException's directly; please consider configuring an 'ErrorHandlingDeserializer' in the value and/or key deserializer\r\n\tat org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:194)\r\n\tat org.springframework.kafka.listener.SeekToCurrentErrorHandler.handle(SeekToCurrentErrorHandler.java:112)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.handleConsumerException(KafkaMessageListenerContainer.java:1599)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1210)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Error deserializing key/value for partition customer-topic-2-0 at offset 0. If needed, please seek past the record to continue consumption.\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Can't deserialize data [[104, 105, 32, 116, 104, 101, 114, 101]] from topic [customer-topic-2]\r\nCaused by: com.fasterxml.jackson.core.JsonParseException: Unrecognized token 'hi': was expecting (JSON String, Number, Array, Object or token 'null', 'true' or 'false')\n at [Source: (byte[])\"hi there\"; line: 1, column: 4]\r\n\tat com.fasterxml.jackson.core.JsonParser._constructError(JsonParser.java:2337)\r\n\tat com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(ParserMinimalBase.java:720)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportInvalidToken(UTF8StreamJsonParser.java:3593)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleUnexpectedValue(UTF8StreamJsonParser.java:2688)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._nextTokenNotInObject(UTF8StreamJsonParser.java:870)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextToken(UTF8StreamJsonParser.java:762)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._initForReading(ObjectReader.java:355)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._bindAndClose(ObjectReader.java:2023)\r\n\tat com.fasterxml.jackson.databind.ObjectReader.readValue(ObjectReader.java:1528)\r\n\tat org.springframework.kafka.support.serializer.JsonDeserializer.deserialize(JsonDeserializer.java:534)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.parseRecord(Fetcher.java:1387)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.access$3400(Fetcher.java:133)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.fetchRecords(Fetcher.java:1618)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.access$1700(Fetcher.java:1454)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchRecords(Fetcher.java:687)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchedRecords(Fetcher.java:638)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.pollForFetches(KafkaConsumer.java:1272)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1233)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1206)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doPoll(KafkaMessageListenerContainer.java:1410)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1249)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1161)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:46:40.616Z","appMessage":"Consumer exception","class":"org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"ERROR","exception":"java.lang.IllegalStateException: This error handler cannot process 'SerializationException's directly; please consider configuring an 'ErrorHandlingDeserializer' in the value and/or key deserializer\r\n\tat org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:194)\r\n\tat org.springframework.kafka.listener.SeekToCurrentErrorHandler.handle(SeekToCurrentErrorHandler.java:112)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.handleConsumerException(KafkaMessageListenerContainer.java:1599)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1210)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Error deserializing key/value for partition customer-topic-2-0 at offset 0. If needed, please seek past the record to continue consumption.\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Can't deserialize data [[104, 105, 32, 116, 104, 101, 114, 101]] from topic [customer-topic-2]\r\nCaused by: com.fasterxml.jackson.core.JsonParseException: Unrecognized token 'hi': was expecting (JSON String, Number, Array, Object or token 'null', 'true' or 'false')\n at [Source: (byte[])\"hi there\"; line: 1, column: 4]\r\n\tat com.fasterxml.jackson.core.JsonParser._constructError(JsonParser.java:2337)\r\n\tat com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(ParserMinimalBase.java:720)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportInvalidToken(UTF8StreamJsonParser.java:3593)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleUnexpectedValue(UTF8StreamJsonParser.java:2688)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._nextTokenNotInObject(UTF8StreamJsonParser.java:870)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextToken(UTF8StreamJsonParser.java:762)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._initForReading(ObjectReader.java:355)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._bindAndClose(ObjectReader.java:2023)\r\n\tat com.fasterxml.jackson.databind.ObjectReader.readValue(ObjectReader.java:1528)\r\n\tat org.springframework.kafka.support.serializer.JsonDeserializer.deserialize(JsonDeserializer.java:534)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.parseRecord(Fetcher.java:1387)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.access$3400(Fetcher.java:133)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.fetchRecords(Fetcher.java:1618)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.access$1700(Fetcher.java:1454)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchRecords(Fetcher.java:687)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchedRecords(Fetcher.java:638)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.pollForFetches(KafkaConsumer.java:1272)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1233)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1206)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doPoll(KafkaMessageListenerContainer.java:1410)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1249)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1161)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:46:40.621Z","appMessage":"Consumer exception","class":"org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"ERROR","exception":"java.lang.IllegalStateException: This error handler cannot process 'SerializationException's directly; please consider configuring an 'ErrorHandlingDeserializer' in the value and/or key deserializer\r\n\tat org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:194)\r\n\tat org.springframework.kafka.listener.SeekToCurrentErrorHandler.handle(SeekToCurrentErrorHandler.java:112)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.handleConsumerException(KafkaMessageListenerContainer.java:1599)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1210)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Error deserializing key/value for partition customer-topic-2-0 at offset 0. If needed, please seek past the record to continue consumption.\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Can't deserialize data [[104, 105, 32, 116, 104, 101, 114, 101]] from topic [customer-topic-2]\r\nCaused by: com.fasterxml.jackson.core.JsonParseException: Unrecognized token 'hi': was expecting (JSON String, Number, Array, Object or token 'null', 'true' or 'false')\n at [Source: (byte[])\"hi there\"; line: 1, column: 4]\r\n\tat com.fasterxml.jackson.core.JsonParser._constructError(JsonParser.java:2337)\r\n\tat com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(ParserMinimalBase.java:720)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportInvalidToken(UTF8StreamJsonParser.java:3593)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleUnexpectedValue(UTF8StreamJsonParser.java:2688)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._nextTokenNotInObject(UTF8StreamJsonParser.java:870)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextToken(UTF8StreamJsonParser.java:762)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._initForReading(ObjectReader.java:355)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._bindAndClose(ObjectReader.java:2023)\r\n\tat com.fasterxml.jackson.databind.ObjectReader.readValue(ObjectReader.java:1528)\r\n\tat org.springframework.kafka.support.serializer.JsonDeserializer.deserialize(JsonDeserializer.java:534)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.parseRecord(Fetcher.java:1387)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.access$3400(Fetcher.java:133)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.fetchRecords(Fetcher.java:1618)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.access$1700(Fetcher.java:1454)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchRecords(Fetcher.java:687)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchedRecords(Fetcher.java:638)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.pollForFetches(KafkaConsumer.java:1272)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1233)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1206)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doPoll(KafkaMessageListenerContainer.java:1410)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1249)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1161)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:46:40.625Z","appMessage":"Consumer exception","class":"org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"ERROR","exception":"java.lang.IllegalStateException: This error handler cannot process 'SerializationException's directly; please consider configuring an 'ErrorHandlingDeserializer' in the value and/or key deserializer\r\n\tat org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:194)\r\n\tat org.springframework.kafka.listener.SeekToCurrentErrorHandler.handle(SeekToCurrentErrorHandler.java:112)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.handleConsumerException(KafkaMessageListenerContainer.java:1599)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1210)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Error deserializing key/value for partition customer-topic-2-0 at offset 0. If needed, please seek past the record to continue consumption.\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Can't deserialize data [[104, 105, 32, 116, 104, 101, 114, 101]] from topic [customer-topic-2]\r\nCaused by: com.fasterxml.jackson.core.JsonParseException: Unrecognized token 'hi': was expecting (JSON String, Number, Array, Object or token 'null', 'true' or 'false')\n at [Source: (byte[])\"hi there\"; line: 1, column: 4]\r\n\tat com.fasterxml.jackson.core.JsonParser._constructError(JsonParser.java:2337)\r\n\tat com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(ParserMinimalBase.java:720)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportInvalidToken(UTF8StreamJsonParser.java:3593)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleUnexpectedValue(UTF8StreamJsonParser.java:2688)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._nextTokenNotInObject(UTF8StreamJsonParser.java:870)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextToken(UTF8StreamJsonParser.java:762)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._initForReading(ObjectReader.java:355)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._bindAndClose(ObjectReader.java:2023)\r\n\tat com.fasterxml.jackson.databind.ObjectReader.readValue(ObjectReader.java:1528)\r\n\tat org.springframework.kafka.support.serializer.JsonDeserializer.deserialize(JsonDeserializer.java:534)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.parseRecord(Fetcher.java:1387)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.access$3400(Fetcher.java:133)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.fetchRecords(Fetcher.java:1618)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.access$1700(Fetcher.java:1454)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchRecords(Fetcher.java:687)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchedRecords(Fetcher.java:638)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.pollForFetches(KafkaConsumer.java:1272)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1233)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1206)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doPoll(KafkaMessageListenerContainer.java:1410)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1249)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1161)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:46:40.629Z","appMessage":"Consumer exception","class":"org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"ERROR","exception":"java.lang.IllegalStateException: This error handler cannot process 'SerializationException's directly; please consider configuring an 'ErrorHandlingDeserializer' in the value and/or key deserializer\r\n\tat org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:194)\r\n\tat org.springframework.kafka.listener.SeekToCurrentErrorHandler.handle(SeekToCurrentErrorHandler.java:112)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.handleConsumerException(KafkaMessageListenerContainer.java:1599)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1210)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Error deserializing key/value for partition customer-topic-2-0 at offset 0. If needed, please seek past the record to continue consumption.\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Can't deserialize data [[104, 105, 32, 116, 104, 101, 114, 101]] from topic [customer-topic-2]\r\nCaused by: com.fasterxml.jackson.core.JsonParseException: Unrecognized token 'hi': was expecting (JSON String, Number, Array, Object or token 'null', 'true' or 'false')\n at [Source: (byte[])\"hi there\"; line: 1, column: 4]\r\n\tat com.fasterxml.jackson.core.JsonParser._constructError(JsonParser.java:2337)\r\n\tat com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(ParserMinimalBase.java:720)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportInvalidToken(UTF8StreamJsonParser.java:3593)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleUnexpectedValue(UTF8StreamJsonParser.java:2688)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._nextTokenNotInObject(UTF8StreamJsonParser.java:870)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextToken(UTF8StreamJsonParser.java:762)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._initForReading(ObjectReader.java:355)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._bindAndClose(ObjectReader.java:2023)\r\n\tat com.fasterxml.jackson.databind.ObjectReader.readValue(ObjectReader.java:1528)\r\n\tat org.springframework.kafka.support.serializer.JsonDeserializer.deserialize(JsonDeserializer.java:534)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.parseRecord(Fetcher.java:1387)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.access$3400(Fetcher.java:133)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.fetchRecords(Fetcher.java:1618)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.access$1700(Fetcher.java:1454)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchRecords(Fetcher.java:687)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchedRecords(Fetcher.java:638)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.pollForFetches(KafkaConsumer.java:1272)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1233)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1206)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doPoll(KafkaMessageListenerContainer.java:1410)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1249)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1161)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:46:40.634Z","appMessage":"Consumer exception","class":"org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"ERROR","exception":"java.lang.IllegalStateException: This error handler cannot process 'SerializationException's directly; please consider configuring an 'ErrorHandlingDeserializer' in the value and/or key deserializer\r\n\tat org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:194)\r\n\tat org.springframework.kafka.listener.SeekToCurrentErrorHandler.handle(SeekToCurrentErrorHandler.java:112)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.handleConsumerException(KafkaMessageListenerContainer.java:1599)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1210)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Error deserializing key/value for partition customer-topic-2-0 at offset 0. If needed, please seek past the record to continue consumption.\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Can't deserialize data [[104, 105, 32, 116, 104, 101, 114, 101]] from topic [customer-topic-2]\r\nCaused by: com.fasterxml.jackson.core.JsonParseException: Unrecognized token 'hi': was expecting (JSON String, Number, Array, Object or token 'null', 'true' or 'false')\n at [Source: (byte[])\"hi there\"; line: 1, column: 4]\r\n\tat com.fasterxml.jackson.core.JsonParser._constructError(JsonParser.java:2337)\r\n\tat com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(ParserMinimalBase.java:720)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportInvalidToken(UTF8StreamJsonParser.java:3593)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleUnexpectedValue(UTF8StreamJsonParser.java:2688)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._nextTokenNotInObject(UTF8StreamJsonParser.java:870)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextToken(UTF8StreamJsonParser.java:762)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._initForReading(ObjectReader.java:355)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._bindAndClose(ObjectReader.java:2023)\r\n\tat com.fasterxml.jackson.databind.ObjectReader.readValue(ObjectReader.java:1528)\r\n\tat org.springframework.kafka.support.serializer.JsonDeserializer.deserialize(JsonDeserializer.java:534)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.parseRecord(Fetcher.java:1387)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.access$3400(Fetcher.java:133)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.fetchRecords(Fetcher.java:1618)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.access$1700(Fetcher.java:1454)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchRecords(Fetcher.java:687)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchedRecords(Fetcher.java:638)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.pollForFetches(KafkaConsumer.java:1272)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1233)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1206)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doPoll(KafkaMessageListenerContainer.java:1410)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1249)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1161)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:46:40.638Z","appMessage":"Consumer exception","class":"org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"ERROR","exception":"java.lang.IllegalStateException: This error handler cannot process 'SerializationException's directly; please consider configuring an 'ErrorHandlingDeserializer' in the value and/or key deserializer\r\n\tat org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:194)\r\n\tat org.springframework.kafka.listener.SeekToCurrentErrorHandler.handle(SeekToCurrentErrorHandler.java:112)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.handleConsumerException(KafkaMessageListenerContainer.java:1599)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1210)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Error deserializing key/value for partition customer-topic-2-0 at offset 0. If needed, please seek past the record to continue consumption.\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Can't deserialize data [[104, 105, 32, 116, 104, 101, 114, 101]] from topic [customer-topic-2]\r\nCaused by: com.fasterxml.jackson.core.JsonParseException: Unrecognized token 'hi': was expecting (JSON String, Number, Array, Object or token 'null', 'true' or 'false')\n at [Source: (byte[])\"hi there\"; line: 1, column: 4]\r\n\tat com.fasterxml.jackson.core.JsonParser._constructError(JsonParser.java:2337)\r\n\tat com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(ParserMinimalBase.java:720)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportInvalidToken(UTF8StreamJsonParser.java:3593)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleUnexpectedValue(UTF8StreamJsonParser.java:2688)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._nextTokenNotInObject(UTF8StreamJsonParser.java:870)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextToken(UTF8StreamJsonParser.java:762)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._initForReading(ObjectReader.java:355)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._bindAndClose(ObjectReader.java:2023)\r\n\tat com.fasterxml.jackson.databind.ObjectReader.readValue(ObjectReader.java:1528)\r\n\tat org.springframework.kafka.support.serializer.JsonDeserializer.deserialize(JsonDeserializer.java:534)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.parseRecord(Fetcher.java:1387)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.access$3400(Fetcher.java:133)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.fetchRecords(Fetcher.java:1618)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.access$1700(Fetcher.java:1454)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchRecords(Fetcher.java:687)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchedRecords(Fetcher.java:638)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.pollForFetches(KafkaConsumer.java:1272)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1233)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1206)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doPoll(KafkaMessageListenerContainer.java:1410)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1249)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1161)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:46:40.642Z","appMessage":"Consumer exception","class":"org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"ERROR","exception":"java.lang.IllegalStateException: This error handler cannot process 'SerializationException's directly; please consider configuring an 'ErrorHandlingDeserializer' in the value and/or key deserializer\r\n\tat org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:194)\r\n\tat org.springframework.kafka.listener.SeekToCurrentErrorHandler.handle(SeekToCurrentErrorHandler.java:112)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.handleConsumerException(KafkaMessageListenerContainer.java:1599)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1210)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Error deserializing key/value for partition customer-topic-2-0 at offset 0. If needed, please seek past the record to continue consumption.\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Can't deserialize data [[104, 105, 32, 116, 104, 101, 114, 101]] from topic [customer-topic-2]\r\nCaused by: com.fasterxml.jackson.core.JsonParseException: Unrecognized token 'hi': was expecting (JSON String, Number, Array, Object or token 'null', 'true' or 'false')\n at [Source: (byte[])\"hi there\"; line: 1, column: 4]\r\n\tat com.fasterxml.jackson.core.JsonParser._constructError(JsonParser.java:2337)\r\n\tat com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(ParserMinimalBase.java:720)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportInvalidToken(UTF8StreamJsonParser.java:3593)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleUnexpectedValue(UTF8StreamJsonParser.java:2688)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._nextTokenNotInObject(UTF8StreamJsonParser.java:870)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextToken(UTF8StreamJsonParser.java:762)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._initForReading(ObjectReader.java:355)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._bindAndClose(ObjectReader.java:2023)\r\n\tat com.fasterxml.jackson.databind.ObjectReader.readValue(ObjectReader.java:1528)\r\n\tat org.springframework.kafka.support.serializer.JsonDeserializer.deserialize(JsonDeserializer.java:534)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.parseRecord(Fetcher.java:1387)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.access$3400(Fetcher.java:133)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.fetchRecords(Fetcher.java:1618)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.access$1700(Fetcher.java:1454)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchRecords(Fetcher.java:687)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchedRecords(Fetcher.java:638)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.pollForFetches(KafkaConsumer.java:1272)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1233)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1206)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doPoll(KafkaMessageListenerContainer.java:1410)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1249)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1161)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:46:40.647Z","appMessage":"Consumer exception","class":"org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"ERROR","exception":"java.lang.IllegalStateException: This error handler cannot process 'SerializationException's directly; please consider configuring an 'ErrorHandlingDeserializer' in the value and/or key deserializer\r\n\tat org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:194)\r\n\tat org.springframework.kafka.listener.SeekToCurrentErrorHandler.handle(SeekToCurrentErrorHandler.java:112)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.handleConsumerException(KafkaMessageListenerContainer.java:1599)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1210)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Error deserializing key/value for partition customer-topic-2-0 at offset 0. If needed, please seek past the record to continue consumption.\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Can't deserialize data [[104, 105, 32, 116, 104, 101, 114, 101]] from topic [customer-topic-2]\r\nCaused by: com.fasterxml.jackson.core.JsonParseException: Unrecognized token 'hi': was expecting (JSON String, Number, Array, Object or token 'null', 'true' or 'false')\n at [Source: (byte[])\"hi there\"; line: 1, column: 4]\r\n\tat com.fasterxml.jackson.core.JsonParser._constructError(JsonParser.java:2337)\r\n\tat com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(ParserMinimalBase.java:720)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportInvalidToken(UTF8StreamJsonParser.java:3593)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleUnexpectedValue(UTF8StreamJsonParser.java:2688)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._nextTokenNotInObject(UTF8StreamJsonParser.java:870)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextToken(UTF8StreamJsonParser.java:762)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._initForReading(ObjectReader.java:355)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._bindAndClose(ObjectReader.java:2023)\r\n\tat com.fasterxml.jackson.databind.ObjectReader.readValue(ObjectReader.java:1528)\r\n\tat org.springframework.kafka.support.serializer.JsonDeserializer.deserialize(JsonDeserializer.java:534)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.parseRecord(Fetcher.java:1387)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.access$3400(Fetcher.java:133)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.fetchRecords(Fetcher.java:1618)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.access$1700(Fetcher.java:1454)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchRecords(Fetcher.java:687)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchedRecords(Fetcher.java:638)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.pollForFetches(KafkaConsumer.java:1272)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1233)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1206)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doPoll(KafkaMessageListenerContainer.java:1410)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1249)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1161)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:46:40.651Z","appMessage":"Consumer exception","class":"org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"ERROR","exception":"java.lang.IllegalStateException: This error handler cannot process 'SerializationException's directly; please consider configuring an 'ErrorHandlingDeserializer' in the value and/or key deserializer\r\n\tat org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:194)\r\n\tat org.springframework.kafka.listener.SeekToCurrentErrorHandler.handle(SeekToCurrentErrorHandler.java:112)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.handleConsumerException(KafkaMessageListenerContainer.java:1599)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1210)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Error deserializing key/value for partition customer-topic-2-0 at offset 0. If needed, please seek past the record to continue consumption.\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Can't deserialize data [[104, 105, 32, 116, 104, 101, 114, 101]] from topic [customer-topic-2]\r\nCaused by: com.fasterxml.jackson.core.JsonParseException: Unrecognized token 'hi': was expecting (JSON String, Number, Array, Object or token 'null', 'true' or 'false')\n at [Source: (byte[])\"hi there\"; line: 1, column: 4]\r\n\tat com.fasterxml.jackson.core.JsonParser._constructError(JsonParser.java:2337)\r\n\tat com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(ParserMinimalBase.java:720)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportInvalidToken(UTF8StreamJsonParser.java:3593)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleUnexpectedValue(UTF8StreamJsonParser.java:2688)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._nextTokenNotInObject(UTF8StreamJsonParser.java:870)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextToken(UTF8StreamJsonParser.java:762)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._initForReading(ObjectReader.java:355)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._bindAndClose(ObjectReader.java:2023)\r\n\tat com.fasterxml.jackson.databind.ObjectReader.readValue(ObjectReader.java:1528)\r\n\tat org.springframework.kafka.support.serializer.JsonDeserializer.deserialize(JsonDeserializer.java:534)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.parseRecord(Fetcher.java:1387)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.access$3400(Fetcher.java:133)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.fetchRecords(Fetcher.java:1618)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.access$1700(Fetcher.java:1454)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchRecords(Fetcher.java:687)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchedRecords(Fetcher.java:638)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.pollForFetches(KafkaConsumer.java:1272)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1233)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1206)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doPoll(KafkaMessageListenerContainer.java:1410)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1249)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1161)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:46:40.655Z","appMessage":"Consumer exception","class":"org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"ERROR","exception":"java.lang.IllegalStateException: This error handler cannot process 'SerializationException's directly; please consider configuring an 'ErrorHandlingDeserializer' in the value and/or key deserializer\r\n\tat org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:194)\r\n\tat org.springframework.kafka.listener.SeekToCurrentErrorHandler.handle(SeekToCurrentErrorHandler.java:112)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.handleConsumerException(KafkaMessageListenerContainer.java:1599)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1210)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Error deserializing key/value for partition customer-topic-2-0 at offset 0. If needed, please seek past the record to continue consumption.\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Can't deserialize data [[104, 105, 32, 116, 104, 101, 114, 101]] from topic [customer-topic-2]\r\nCaused by: com.fasterxml.jackson.core.JsonParseException: Unrecognized token 'hi': was expecting (JSON String, Number, Array, Object or token 'null', 'true' or 'false')\n at [Source: (byte[])\"hi there\"; line: 1, column: 4]\r\n\tat com.fasterxml.jackson.core.JsonParser._constructError(JsonParser.java:2337)\r\n\tat com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(ParserMinimalBase.java:720)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportInvalidToken(UTF8StreamJsonParser.java:3593)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleUnexpectedValue(UTF8StreamJsonParser.java:2688)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._nextTokenNotInObject(UTF8StreamJsonParser.java:870)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextToken(UTF8StreamJsonParser.java:762)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._initForReading(ObjectReader.java:355)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._bindAndClose(ObjectReader.java:2023)\r\n\tat com.fasterxml.jackson.databind.ObjectReader.readValue(ObjectReader.java:1528)\r\n\tat org.springframework.kafka.support.serializer.JsonDeserializer.deserialize(JsonDeserializer.java:534)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.parseRecord(Fetcher.java:1387)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.access$3400(Fetcher.java:133)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.fetchRecords(Fetcher.java:1618)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.access$1700(Fetcher.java:1454)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchRecords(Fetcher.java:687)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchedRecords(Fetcher.java:638)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.pollForFetches(KafkaConsumer.java:1272)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1233)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1206)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doPoll(KafkaMessageListenerContainer.java:1410)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1249)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1161)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:46:40.659Z","appMessage":"Consumer exception","class":"org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"ERROR","exception":"java.lang.IllegalStateException: This error handler cannot process 'SerializationException's directly; please consider configuring an 'ErrorHandlingDeserializer' in the value and/or key deserializer\r\n\tat org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:194)\r\n\tat org.springframework.kafka.listener.SeekToCurrentErrorHandler.handle(SeekToCurrentErrorHandler.java:112)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.handleConsumerException(KafkaMessageListenerContainer.java:1599)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1210)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Error deserializing key/value for partition customer-topic-2-0 at offset 0. If needed, please seek past the record to continue consumption.\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Can't deserialize data [[104, 105, 32, 116, 104, 101, 114, 101]] from topic [customer-topic-2]\r\nCaused by: com.fasterxml.jackson.core.JsonParseException: Unrecognized token 'hi': was expecting (JSON String, Number, Array, Object or token 'null', 'true' or 'false')\n at [Source: (byte[])\"hi there\"; line: 1, column: 4]\r\n\tat com.fasterxml.jackson.core.JsonParser._constructError(JsonParser.java:2337)\r\n\tat com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(ParserMinimalBase.java:720)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportInvalidToken(UTF8StreamJsonParser.java:3593)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleUnexpectedValue(UTF8StreamJsonParser.java:2688)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._nextTokenNotInObject(UTF8StreamJsonParser.java:870)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextToken(UTF8StreamJsonParser.java:762)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._initForReading(ObjectReader.java:355)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._bindAndClose(ObjectReader.java:2023)\r\n\tat com.fasterxml.jackson.databind.ObjectReader.readValue(ObjectReader.java:1528)\r\n\tat org.springframework.kafka.support.serializer.JsonDeserializer.deserialize(JsonDeserializer.java:534)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.parseRecord(Fetcher.java:1387)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.access$3400(Fetcher.java:133)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.fetchRecords(Fetcher.java:1618)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.access$1700(Fetcher.java:1454)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchRecords(Fetcher.java:687)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchedRecords(Fetcher.java:638)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.pollForFetches(KafkaConsumer.java:1272)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1233)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1206)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doPoll(KafkaMessageListenerContainer.java:1410)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1249)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1161)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:46:40.664Z","appMessage":"Consumer exception","class":"org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"ERROR","exception":"java.lang.IllegalStateException: This error handler cannot process 'SerializationException's directly; please consider configuring an 'ErrorHandlingDeserializer' in the value and/or key deserializer\r\n\tat org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:194)\r\n\tat org.springframework.kafka.listener.SeekToCurrentErrorHandler.handle(SeekToCurrentErrorHandler.java:112)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.handleConsumerException(KafkaMessageListenerContainer.java:1599)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1210)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Error deserializing key/value for partition customer-topic-2-0 at offset 0. If needed, please seek past the record to continue consumption.\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Can't deserialize data [[104, 105, 32, 116, 104, 101, 114, 101]] from topic [customer-topic-2]\r\nCaused by: com.fasterxml.jackson.core.JsonParseException: Unrecognized token 'hi': was expecting (JSON String, Number, Array, Object or token 'null', 'true' or 'false')\n at [Source: (byte[])\"hi there\"; line: 1, column: 4]\r\n\tat com.fasterxml.jackson.core.JsonParser._constructError(JsonParser.java:2337)\r\n\tat com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(ParserMinimalBase.java:720)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportInvalidToken(UTF8StreamJsonParser.java:3593)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleUnexpectedValue(UTF8StreamJsonParser.java:2688)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._nextTokenNotInObject(UTF8StreamJsonParser.java:870)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextToken(UTF8StreamJsonParser.java:762)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._initForReading(ObjectReader.java:355)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._bindAndClose(ObjectReader.java:2023)\r\n\tat com.fasterxml.jackson.databind.ObjectReader.readValue(ObjectReader.java:1528)\r\n\tat org.springframework.kafka.support.serializer.JsonDeserializer.deserialize(JsonDeserializer.java:534)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.parseRecord(Fetcher.java:1387)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.access$3400(Fetcher.java:133)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.fetchRecords(Fetcher.java:1618)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.access$1700(Fetcher.java:1454)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchRecords(Fetcher.java:687)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchedRecords(Fetcher.java:638)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.pollForFetches(KafkaConsumer.java:1272)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1233)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1206)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doPoll(KafkaMessageListenerContainer.java:1410)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1249)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1161)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:46:40.668Z","appMessage":"Consumer exception","class":"org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"ERROR","exception":"java.lang.IllegalStateException: This error handler cannot process 'SerializationException's directly; please consider configuring an 'ErrorHandlingDeserializer' in the value and/or key deserializer\r\n\tat org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:194)\r\n\tat org.springframework.kafka.listener.SeekToCurrentErrorHandler.handle(SeekToCurrentErrorHandler.java:112)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.handleConsumerException(KafkaMessageListenerContainer.java:1599)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1210)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Error deserializing key/value for partition customer-topic-2-0 at offset 0. If needed, please seek past the record to continue consumption.\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Can't deserialize data [[104, 105, 32, 116, 104, 101, 114, 101]] from topic [customer-topic-2]\r\nCaused by: com.fasterxml.jackson.core.JsonParseException: Unrecognized token 'hi': was expecting (JSON String, Number, Array, Object or token 'null', 'true' or 'false')\n at [Source: (byte[])\"hi there\"; line: 1, column: 4]\r\n\tat com.fasterxml.jackson.core.JsonParser._constructError(JsonParser.java:2337)\r\n\tat com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(ParserMinimalBase.java:720)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportInvalidToken(UTF8StreamJsonParser.java:3593)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleUnexpectedValue(UTF8StreamJsonParser.java:2688)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._nextTokenNotInObject(UTF8StreamJsonParser.java:870)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextToken(UTF8StreamJsonParser.java:762)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._initForReading(ObjectReader.java:355)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._bindAndClose(ObjectReader.java:2023)\r\n\tat com.fasterxml.jackson.databind.ObjectReader.readValue(ObjectReader.java:1528)\r\n\tat org.springframework.kafka.support.serializer.JsonDeserializer.deserialize(JsonDeserializer.java:534)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.parseRecord(Fetcher.java:1387)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.access$3400(Fetcher.java:133)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.fetchRecords(Fetcher.java:1618)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.access$1700(Fetcher.java:1454)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchRecords(Fetcher.java:687)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchedRecords(Fetcher.java:638)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.pollForFetches(KafkaConsumer.java:1272)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1233)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1206)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doPoll(KafkaMessageListenerContainer.java:1410)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1249)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1161)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:46:40.672Z","appMessage":"Consumer exception","class":"org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"ERROR","exception":"java.lang.IllegalStateException: This error handler cannot process 'SerializationException's directly; please consider configuring an 'ErrorHandlingDeserializer' in the value and/or key deserializer\r\n\tat org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:194)\r\n\tat org.springframework.kafka.listener.SeekToCurrentErrorHandler.handle(SeekToCurrentErrorHandler.java:112)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.handleConsumerException(KafkaMessageListenerContainer.java:1599)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1210)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Error deserializing key/value for partition customer-topic-2-0 at offset 0. If needed, please seek past the record to continue consumption.\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Can't deserialize data [[104, 105, 32, 116, 104, 101, 114, 101]] from topic [customer-topic-2]\r\nCaused by: com.fasterxml.jackson.core.JsonParseException: Unrecognized token 'hi': was expecting (JSON String, Number, Array, Object or token 'null', 'true' or 'false')\n at [Source: (byte[])\"hi there\"; line: 1, column: 4]\r\n\tat com.fasterxml.jackson.core.JsonParser._constructError(JsonParser.java:2337)\r\n\tat com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(ParserMinimalBase.java:720)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportInvalidToken(UTF8StreamJsonParser.java:3593)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleUnexpectedValue(UTF8StreamJsonParser.java:2688)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._nextTokenNotInObject(UTF8StreamJsonParser.java:870)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextToken(UTF8StreamJsonParser.java:762)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._initForReading(ObjectReader.java:355)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._bindAndClose(ObjectReader.java:2023)\r\n\tat com.fasterxml.jackson.databind.ObjectReader.readValue(ObjectReader.java:1528)\r\n\tat org.springframework.kafka.support.serializer.JsonDeserializer.deserialize(JsonDeserializer.java:534)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.parseRecord(Fetcher.java:1387)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.access$3400(Fetcher.java:133)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.fetchRecords(Fetcher.java:1618)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.access$1700(Fetcher.java:1454)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchRecords(Fetcher.java:687)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchedRecords(Fetcher.java:638)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.pollForFetches(KafkaConsumer.java:1272)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1233)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1206)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doPoll(KafkaMessageListenerContainer.java:1410)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1249)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1161)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:46:40.676Z","appMessage":"Consumer exception","class":"org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"ERROR","exception":"java.lang.IllegalStateException: This error handler cannot process 'SerializationException's directly; please consider configuring an 'ErrorHandlingDeserializer' in the value and/or key deserializer\r\n\tat org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:194)\r\n\tat org.springframework.kafka.listener.SeekToCurrentErrorHandler.handle(SeekToCurrentErrorHandler.java:112)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.handleConsumerException(KafkaMessageListenerContainer.java:1599)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1210)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Error deserializing key/value for partition customer-topic-2-0 at offset 0. If needed, please seek past the record to continue consumption.\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Can't deserialize data [[104, 105, 32, 116, 104, 101, 114, 101]] from topic [customer-topic-2]\r\nCaused by: com.fasterxml.jackson.core.JsonParseException: Unrecognized token 'hi': was expecting (JSON String, Number, Array, Object or token 'null', 'true' or 'false')\n at [Source: (byte[])\"hi there\"; line: 1, column: 4]\r\n\tat com.fasterxml.jackson.core.JsonParser._constructError(JsonParser.java:2337)\r\n\tat com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(ParserMinimalBase.java:720)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportInvalidToken(UTF8StreamJsonParser.java:3593)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleUnexpectedValue(UTF8StreamJsonParser.java:2688)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._nextTokenNotInObject(UTF8StreamJsonParser.java:870)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextToken(UTF8StreamJsonParser.java:762)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._initForReading(ObjectReader.java:355)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._bindAndClose(ObjectReader.java:2023)\r\n\tat com.fasterxml.jackson.databind.ObjectReader.readValue(ObjectReader.java:1528)\r\n\tat org.springframework.kafka.support.serializer.JsonDeserializer.deserialize(JsonDeserializer.java:534)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.parseRecord(Fetcher.java:1387)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.access$3400(Fetcher.java:133)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.fetchRecords(Fetcher.java:1618)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.access$1700(Fetcher.java:1454)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchRecords(Fetcher.java:687)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchedRecords(Fetcher.java:638)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.pollForFetches(KafkaConsumer.java:1272)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1233)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1206)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doPoll(KafkaMessageListenerContainer.java:1410)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1249)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1161)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:46:40.681Z","appMessage":"Consumer exception","class":"org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"ERROR","exception":"java.lang.IllegalStateException: This error handler cannot process 'SerializationException's directly; please consider configuring an 'ErrorHandlingDeserializer' in the value and/or key deserializer\r\n\tat org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:194)\r\n\tat org.springframework.kafka.listener.SeekToCurrentErrorHandler.handle(SeekToCurrentErrorHandler.java:112)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.handleConsumerException(KafkaMessageListenerContainer.java:1599)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1210)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Error deserializing key/value for partition customer-topic-2-0 at offset 0. If needed, please seek past the record to continue consumption.\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Can't deserialize data [[104, 105, 32, 116, 104, 101, 114, 101]] from topic [customer-topic-2]\r\nCaused by: com.fasterxml.jackson.core.JsonParseException: Unrecognized token 'hi': was expecting (JSON String, Number, Array, Object or token 'null', 'true' or 'false')\n at [Source: (byte[])\"hi there\"; line: 1, column: 4]\r\n\tat com.fasterxml.jackson.core.JsonParser._constructError(JsonParser.java:2337)\r\n\tat com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(ParserMinimalBase.java:720)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportInvalidToken(UTF8StreamJsonParser.java:3593)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleUnexpectedValue(UTF8StreamJsonParser.java:2688)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._nextTokenNotInObject(UTF8StreamJsonParser.java:870)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextToken(UTF8StreamJsonParser.java:762)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._initForReading(ObjectReader.java:355)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._bindAndClose(ObjectReader.java:2023)\r\n\tat com.fasterxml.jackson.databind.ObjectReader.readValue(ObjectReader.java:1528)\r\n\tat org.springframework.kafka.support.serializer.JsonDeserializer.deserialize(JsonDeserializer.java:534)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.parseRecord(Fetcher.java:1387)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.access$3400(Fetcher.java:133)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.fetchRecords(Fetcher.java:1618)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.access$1700(Fetcher.java:1454)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchRecords(Fetcher.java:687)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchedRecords(Fetcher.java:638)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.pollForFetches(KafkaConsumer.java:1272)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1233)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1206)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doPoll(KafkaMessageListenerContainer.java:1410)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1249)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1161)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:46:40.685Z","appMessage":"Consumer exception","class":"org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"ERROR","exception":"java.lang.IllegalStateException: This error handler cannot process 'SerializationException's directly; please consider configuring an 'ErrorHandlingDeserializer' in the value and/or key deserializer\r\n\tat org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:194)\r\n\tat org.springframework.kafka.listener.SeekToCurrentErrorHandler.handle(SeekToCurrentErrorHandler.java:112)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.handleConsumerException(KafkaMessageListenerContainer.java:1599)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1210)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Error deserializing key/value for partition customer-topic-2-0 at offset 0. If needed, please seek past the record to continue consumption.\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Can't deserialize data [[104, 105, 32, 116, 104, 101, 114, 101]] from topic [customer-topic-2]\r\nCaused by: com.fasterxml.jackson.core.JsonParseException: Unrecognized token 'hi': was expecting (JSON String, Number, Array, Object or token 'null', 'true' or 'false')\n at [Source: (byte[])\"hi there\"; line: 1, column: 4]\r\n\tat com.fasterxml.jackson.core.JsonParser._constructError(JsonParser.java:2337)\r\n\tat com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(ParserMinimalBase.java:720)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportInvalidToken(UTF8StreamJsonParser.java:3593)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleUnexpectedValue(UTF8StreamJsonParser.java:2688)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._nextTokenNotInObject(UTF8StreamJsonParser.java:870)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextToken(UTF8StreamJsonParser.java:762)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._initForReading(ObjectReader.java:355)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._bindAndClose(ObjectReader.java:2023)\r\n\tat com.fasterxml.jackson.databind.ObjectReader.readValue(ObjectReader.java:1528)\r\n\tat org.springframework.kafka.support.serializer.JsonDeserializer.deserialize(JsonDeserializer.java:534)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.parseRecord(Fetcher.java:1387)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.access$3400(Fetcher.java:133)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.fetchRecords(Fetcher.java:1618)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.access$1700(Fetcher.java:1454)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchRecords(Fetcher.java:687)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchedRecords(Fetcher.java:638)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.pollForFetches(KafkaConsumer.java:1272)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1233)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1206)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doPoll(KafkaMessageListenerContainer.java:1410)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1249)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1161)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:46:40.689Z","appMessage":"Consumer exception","class":"org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"ERROR","exception":"java.lang.IllegalStateException: This error handler cannot process 'SerializationException's directly; please consider configuring an 'ErrorHandlingDeserializer' in the value and/or key deserializer\r\n\tat org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:194)\r\n\tat org.springframework.kafka.listener.SeekToCurrentErrorHandler.handle(SeekToCurrentErrorHandler.java:112)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.handleConsumerException(KafkaMessageListenerContainer.java:1599)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1210)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Error deserializing key/value for partition customer-topic-2-0 at offset 0. If needed, please seek past the record to continue consumption.\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Can't deserialize data [[104, 105, 32, 116, 104, 101, 114, 101]] from topic [customer-topic-2]\r\nCaused by: com.fasterxml.jackson.core.JsonParseException: Unrecognized token 'hi': was expecting (JSON String, Number, Array, Object or token 'null', 'true' or 'false')\n at [Source: (byte[])\"hi there\"; line: 1, column: 4]\r\n\tat com.fasterxml.jackson.core.JsonParser._constructError(JsonParser.java:2337)\r\n\tat com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(ParserMinimalBase.java:720)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportInvalidToken(UTF8StreamJsonParser.java:3593)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleUnexpectedValue(UTF8StreamJsonParser.java:2688)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._nextTokenNotInObject(UTF8StreamJsonParser.java:870)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextToken(UTF8StreamJsonParser.java:762)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._initForReading(ObjectReader.java:355)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._bindAndClose(ObjectReader.java:2023)\r\n\tat com.fasterxml.jackson.databind.ObjectReader.readValue(ObjectReader.java:1528)\r\n\tat org.springframework.kafka.support.serializer.JsonDeserializer.deserialize(JsonDeserializer.java:534)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.parseRecord(Fetcher.java:1387)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.access$3400(Fetcher.java:133)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.fetchRecords(Fetcher.java:1618)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.access$1700(Fetcher.java:1454)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchRecords(Fetcher.java:687)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchedRecords(Fetcher.java:638)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.pollForFetches(KafkaConsumer.java:1272)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1233)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1206)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doPoll(KafkaMessageListenerContainer.java:1410)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1249)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1161)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:46:40.693Z","appMessage":"Consumer exception","class":"org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"ERROR","exception":"java.lang.IllegalStateException: This error handler cannot process 'SerializationException's directly; please consider configuring an 'ErrorHandlingDeserializer' in the value and/or key deserializer\r\n\tat org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:194)\r\n\tat org.springframework.kafka.listener.SeekToCurrentErrorHandler.handle(SeekToCurrentErrorHandler.java:112)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.handleConsumerException(KafkaMessageListenerContainer.java:1599)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1210)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Error deserializing key/value for partition customer-topic-2-0 at offset 0. If needed, please seek past the record to continue consumption.\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Can't deserialize data [[104, 105, 32, 116, 104, 101, 114, 101]] from topic [customer-topic-2]\r\nCaused by: com.fasterxml.jackson.core.JsonParseException: Unrecognized token 'hi': was expecting (JSON String, Number, Array, Object or token 'null', 'true' or 'false')\n at [Source: (byte[])\"hi there\"; line: 1, column: 4]\r\n\tat com.fasterxml.jackson.core.JsonParser._constructError(JsonParser.java:2337)\r\n\tat com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(ParserMinimalBase.java:720)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportInvalidToken(UTF8StreamJsonParser.java:3593)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleUnexpectedValue(UTF8StreamJsonParser.java:2688)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._nextTokenNotInObject(UTF8StreamJsonParser.java:870)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextToken(UTF8StreamJsonParser.java:762)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._initForReading(ObjectReader.java:355)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._bindAndClose(ObjectReader.java:2023)\r\n\tat com.fasterxml.jackson.databind.ObjectReader.readValue(ObjectReader.java:1528)\r\n\tat org.springframework.kafka.support.serializer.JsonDeserializer.deserialize(JsonDeserializer.java:534)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.parseRecord(Fetcher.java:1387)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.access$3400(Fetcher.java:133)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.fetchRecords(Fetcher.java:1618)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.access$1700(Fetcher.java:1454)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchRecords(Fetcher.java:687)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchedRecords(Fetcher.java:638)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.pollForFetches(KafkaConsumer.java:1272)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1233)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1206)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doPoll(KafkaMessageListenerContainer.java:1410)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1249)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1161)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:46:40.698Z","appMessage":"Consumer exception","class":"org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"ERROR","exception":"java.lang.IllegalStateException: This error handler cannot process 'SerializationException's directly; please consider configuring an 'ErrorHandlingDeserializer' in the value and/or key deserializer\r\n\tat org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:194)\r\n\tat org.springframework.kafka.listener.SeekToCurrentErrorHandler.handle(SeekToCurrentErrorHandler.java:112)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.handleConsumerException(KafkaMessageListenerContainer.java:1599)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1210)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Error deserializing key/value for partition customer-topic-2-0 at offset 0. If needed, please seek past the record to continue consumption.\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Can't deserialize data [[104, 105, 32, 116, 104, 101, 114, 101]] from topic [customer-topic-2]\r\nCaused by: com.fasterxml.jackson.core.JsonParseException: Unrecognized token 'hi': was expecting (JSON String, Number, Array, Object or token 'null', 'true' or 'false')\n at [Source: (byte[])\"hi there\"; line: 1, column: 4]\r\n\tat com.fasterxml.jackson.core.JsonParser._constructError(JsonParser.java:2337)\r\n\tat com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(ParserMinimalBase.java:720)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportInvalidToken(UTF8StreamJsonParser.java:3593)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleUnexpectedValue(UTF8StreamJsonParser.java:2688)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._nextTokenNotInObject(UTF8StreamJsonParser.java:870)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextToken(UTF8StreamJsonParser.java:762)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._initForReading(ObjectReader.java:355)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._bindAndClose(ObjectReader.java:2023)\r\n\tat com.fasterxml.jackson.databind.ObjectReader.readValue(ObjectReader.java:1528)\r\n\tat org.springframework.kafka.support.serializer.JsonDeserializer.deserialize(JsonDeserializer.java:534)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.parseRecord(Fetcher.java:1387)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.access$3400(Fetcher.java:133)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.fetchRecords(Fetcher.java:1618)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.access$1700(Fetcher.java:1454)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchRecords(Fetcher.java:687)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchedRecords(Fetcher.java:638)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.pollForFetches(KafkaConsumer.java:1272)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1233)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1206)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doPoll(KafkaMessageListenerContainer.java:1410)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1249)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1161)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:46:40.702Z","appMessage":"Consumer exception","class":"org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"ERROR","exception":"java.lang.IllegalStateException: This error handler cannot process 'SerializationException's directly; please consider configuring an 'ErrorHandlingDeserializer' in the value and/or key deserializer\r\n\tat org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:194)\r\n\tat org.springframework.kafka.listener.SeekToCurrentErrorHandler.handle(SeekToCurrentErrorHandler.java:112)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.handleConsumerException(KafkaMessageListenerContainer.java:1599)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1210)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Error deserializing key/value for partition customer-topic-2-0 at offset 0. If needed, please seek past the record to continue consumption.\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Can't deserialize data [[104, 105, 32, 116, 104, 101, 114, 101]] from topic [customer-topic-2]\r\nCaused by: com.fasterxml.jackson.core.JsonParseException: Unrecognized token 'hi': was expecting (JSON String, Number, Array, Object or token 'null', 'true' or 'false')\n at [Source: (byte[])\"hi there\"; line: 1, column: 4]\r\n\tat com.fasterxml.jackson.core.JsonParser._constructError(JsonParser.java:2337)\r\n\tat com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(ParserMinimalBase.java:720)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportInvalidToken(UTF8StreamJsonParser.java:3593)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleUnexpectedValue(UTF8StreamJsonParser.java:2688)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._nextTokenNotInObject(UTF8StreamJsonParser.java:870)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextToken(UTF8StreamJsonParser.java:762)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._initForReading(ObjectReader.java:355)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._bindAndClose(ObjectReader.java:2023)\r\n\tat com.fasterxml.jackson.databind.ObjectReader.readValue(ObjectReader.java:1528)\r\n\tat org.springframework.kafka.support.serializer.JsonDeserializer.deserialize(JsonDeserializer.java:534)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.parseRecord(Fetcher.java:1387)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.access$3400(Fetcher.java:133)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.fetchRecords(Fetcher.java:1618)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.access$1700(Fetcher.java:1454)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchRecords(Fetcher.java:687)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchedRecords(Fetcher.java:638)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.pollForFetches(KafkaConsumer.java:1272)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1233)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1206)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doPoll(KafkaMessageListenerContainer.java:1410)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1249)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1161)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:46:40.706Z","appMessage":"Consumer exception","class":"org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"ERROR","exception":"java.lang.IllegalStateException: This error handler cannot process 'SerializationException's directly; please consider configuring an 'ErrorHandlingDeserializer' in the value and/or key deserializer\r\n\tat org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:194)\r\n\tat org.springframework.kafka.listener.SeekToCurrentErrorHandler.handle(SeekToCurrentErrorHandler.java:112)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.handleConsumerException(KafkaMessageListenerContainer.java:1599)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1210)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Error deserializing key/value for partition customer-topic-2-0 at offset 0. If needed, please seek past the record to continue consumption.\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Can't deserialize data [[104, 105, 32, 116, 104, 101, 114, 101]] from topic [customer-topic-2]\r\nCaused by: com.fasterxml.jackson.core.JsonParseException: Unrecognized token 'hi': was expecting (JSON String, Number, Array, Object or token 'null', 'true' or 'false')\n at [Source: (byte[])\"hi there\"; line: 1, column: 4]\r\n\tat com.fasterxml.jackson.core.JsonParser._constructError(JsonParser.java:2337)\r\n\tat com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(ParserMinimalBase.java:720)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportInvalidToken(UTF8StreamJsonParser.java:3593)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleUnexpectedValue(UTF8StreamJsonParser.java:2688)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._nextTokenNotInObject(UTF8StreamJsonParser.java:870)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextToken(UTF8StreamJsonParser.java:762)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._initForReading(ObjectReader.java:355)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._bindAndClose(ObjectReader.java:2023)\r\n\tat com.fasterxml.jackson.databind.ObjectReader.readValue(ObjectReader.java:1528)\r\n\tat org.springframework.kafka.support.serializer.JsonDeserializer.deserialize(JsonDeserializer.java:534)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.parseRecord(Fetcher.java:1387)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.access$3400(Fetcher.java:133)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.fetchRecords(Fetcher.java:1618)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.access$1700(Fetcher.java:1454)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchRecords(Fetcher.java:687)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchedRecords(Fetcher.java:638)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.pollForFetches(KafkaConsumer.java:1272)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1233)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1206)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doPoll(KafkaMessageListenerContainer.java:1410)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1249)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1161)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:46:40.711Z","appMessage":"Consumer exception","class":"org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"ERROR","exception":"java.lang.IllegalStateException: This error handler cannot process 'SerializationException's directly; please consider configuring an 'ErrorHandlingDeserializer' in the value and/or key deserializer\r\n\tat org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:194)\r\n\tat org.springframework.kafka.listener.SeekToCurrentErrorHandler.handle(SeekToCurrentErrorHandler.java:112)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.handleConsumerException(KafkaMessageListenerContainer.java:1599)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1210)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Error deserializing key/value for partition customer-topic-2-0 at offset 0. If needed, please seek past the record to continue consumption.\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Can't deserialize data [[104, 105, 32, 116, 104, 101, 114, 101]] from topic [customer-topic-2]\r\nCaused by: com.fasterxml.jackson.core.JsonParseException: Unrecognized token 'hi': was expecting (JSON String, Number, Array, Object or token 'null', 'true' or 'false')\n at [Source: (byte[])\"hi there\"; line: 1, column: 4]\r\n\tat com.fasterxml.jackson.core.JsonParser._constructError(JsonParser.java:2337)\r\n\tat com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(ParserMinimalBase.java:720)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportInvalidToken(UTF8StreamJsonParser.java:3593)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleUnexpectedValue(UTF8StreamJsonParser.java:2688)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._nextTokenNotInObject(UTF8StreamJsonParser.java:870)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextToken(UTF8StreamJsonParser.java:762)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._initForReading(ObjectReader.java:355)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._bindAndClose(ObjectReader.java:2023)\r\n\tat com.fasterxml.jackson.databind.ObjectReader.readValue(ObjectReader.java:1528)\r\n\tat org.springframework.kafka.support.serializer.JsonDeserializer.deserialize(JsonDeserializer.java:534)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.parseRecord(Fetcher.java:1387)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.access$3400(Fetcher.java:133)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.fetchRecords(Fetcher.java:1618)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.access$1700(Fetcher.java:1454)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchRecords(Fetcher.java:687)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchedRecords(Fetcher.java:638)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.pollForFetches(KafkaConsumer.java:1272)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1233)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1206)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doPoll(KafkaMessageListenerContainer.java:1410)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1249)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1161)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:46:40.715Z","appMessage":"Consumer exception","class":"org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"ERROR","exception":"java.lang.IllegalStateException: This error handler cannot process 'SerializationException's directly; please consider configuring an 'ErrorHandlingDeserializer' in the value and/or key deserializer\r\n\tat org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:194)\r\n\tat org.springframework.kafka.listener.SeekToCurrentErrorHandler.handle(SeekToCurrentErrorHandler.java:112)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.handleConsumerException(KafkaMessageListenerContainer.java:1599)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1210)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Error deserializing key/value for partition customer-topic-2-0 at offset 0. If needed, please seek past the record to continue consumption.\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Can't deserialize data [[104, 105, 32, 116, 104, 101, 114, 101]] from topic [customer-topic-2]\r\nCaused by: com.fasterxml.jackson.core.JsonParseException: Unrecognized token 'hi': was expecting (JSON String, Number, Array, Object or token 'null', 'true' or 'false')\n at [Source: (byte[])\"hi there\"; line: 1, column: 4]\r\n\tat com.fasterxml.jackson.core.JsonParser._constructError(JsonParser.java:2337)\r\n\tat com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(ParserMinimalBase.java:720)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportInvalidToken(UTF8StreamJsonParser.java:3593)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleUnexpectedValue(UTF8StreamJsonParser.java:2688)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._nextTokenNotInObject(UTF8StreamJsonParser.java:870)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextToken(UTF8StreamJsonParser.java:762)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._initForReading(ObjectReader.java:355)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._bindAndClose(ObjectReader.java:2023)\r\n\tat com.fasterxml.jackson.databind.ObjectReader.readValue(ObjectReader.java:1528)\r\n\tat org.springframework.kafka.support.serializer.JsonDeserializer.deserialize(JsonDeserializer.java:534)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.parseRecord(Fetcher.java:1387)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.access$3400(Fetcher.java:133)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.fetchRecords(Fetcher.java:1618)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.access$1700(Fetcher.java:1454)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchRecords(Fetcher.java:687)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchedRecords(Fetcher.java:638)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.pollForFetches(KafkaConsumer.java:1272)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1233)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1206)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doPoll(KafkaMessageListenerContainer.java:1410)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1249)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1161)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:46:40.719Z","appMessage":"Consumer exception","class":"org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"ERROR","exception":"java.lang.IllegalStateException: This error handler cannot process 'SerializationException's directly; please consider configuring an 'ErrorHandlingDeserializer' in the value and/or key deserializer\r\n\tat org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:194)\r\n\tat org.springframework.kafka.listener.SeekToCurrentErrorHandler.handle(SeekToCurrentErrorHandler.java:112)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.handleConsumerException(KafkaMessageListenerContainer.java:1599)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1210)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Error deserializing key/value for partition customer-topic-2-0 at offset 0. If needed, please seek past the record to continue consumption.\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Can't deserialize data [[104, 105, 32, 116, 104, 101, 114, 101]] from topic [customer-topic-2]\r\nCaused by: com.fasterxml.jackson.core.JsonParseException: Unrecognized token 'hi': was expecting (JSON String, Number, Array, Object or token 'null', 'true' or 'false')\n at [Source: (byte[])\"hi there\"; line: 1, column: 4]\r\n\tat com.fasterxml.jackson.core.JsonParser._constructError(JsonParser.java:2337)\r\n\tat com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(ParserMinimalBase.java:720)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportInvalidToken(UTF8StreamJsonParser.java:3593)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleUnexpectedValue(UTF8StreamJsonParser.java:2688)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._nextTokenNotInObject(UTF8StreamJsonParser.java:870)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextToken(UTF8StreamJsonParser.java:762)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._initForReading(ObjectReader.java:355)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._bindAndClose(ObjectReader.java:2023)\r\n\tat com.fasterxml.jackson.databind.ObjectReader.readValue(ObjectReader.java:1528)\r\n\tat org.springframework.kafka.support.serializer.JsonDeserializer.deserialize(JsonDeserializer.java:534)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.parseRecord(Fetcher.java:1387)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.access$3400(Fetcher.java:133)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.fetchRecords(Fetcher.java:1618)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.access$1700(Fetcher.java:1454)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchRecords(Fetcher.java:687)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchedRecords(Fetcher.java:638)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.pollForFetches(KafkaConsumer.java:1272)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1233)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1206)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doPoll(KafkaMessageListenerContainer.java:1410)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1249)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1161)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:46:40.723Z","appMessage":"Consumer exception","class":"org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"ERROR","exception":"java.lang.IllegalStateException: This error handler cannot process 'SerializationException's directly; please consider configuring an 'ErrorHandlingDeserializer' in the value and/or key deserializer\r\n\tat org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:194)\r\n\tat org.springframework.kafka.listener.SeekToCurrentErrorHandler.handle(SeekToCurrentErrorHandler.java:112)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.handleConsumerException(KafkaMessageListenerContainer.java:1599)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1210)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Error deserializing key/value for partition customer-topic-2-0 at offset 0. If needed, please seek past the record to continue consumption.\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Can't deserialize data [[104, 105, 32, 116, 104, 101, 114, 101]] from topic [customer-topic-2]\r\nCaused by: com.fasterxml.jackson.core.JsonParseException: Unrecognized token 'hi': was expecting (JSON String, Number, Array, Object or token 'null', 'true' or 'false')\n at [Source: (byte[])\"hi there\"; line: 1, column: 4]\r\n\tat com.fasterxml.jackson.core.JsonParser._constructError(JsonParser.java:2337)\r\n\tat com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(ParserMinimalBase.java:720)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportInvalidToken(UTF8StreamJsonParser.java:3593)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleUnexpectedValue(UTF8StreamJsonParser.java:2688)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._nextTokenNotInObject(UTF8StreamJsonParser.java:870)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextToken(UTF8StreamJsonParser.java:762)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._initForReading(ObjectReader.java:355)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._bindAndClose(ObjectReader.java:2023)\r\n\tat com.fasterxml.jackson.databind.ObjectReader.readValue(ObjectReader.java:1528)\r\n\tat org.springframework.kafka.support.serializer.JsonDeserializer.deserialize(JsonDeserializer.java:534)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.parseRecord(Fetcher.java:1387)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.access$3400(Fetcher.java:133)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.fetchRecords(Fetcher.java:1618)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.access$1700(Fetcher.java:1454)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchRecords(Fetcher.java:687)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchedRecords(Fetcher.java:638)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.pollForFetches(KafkaConsumer.java:1272)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1233)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1206)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doPoll(KafkaMessageListenerContainer.java:1410)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1249)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1161)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:46:40.728Z","appMessage":"Consumer exception","class":"org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"ERROR","exception":"java.lang.IllegalStateException: This error handler cannot process 'SerializationException's directly; please consider configuring an 'ErrorHandlingDeserializer' in the value and/or key deserializer\r\n\tat org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:194)\r\n\tat org.springframework.kafka.listener.SeekToCurrentErrorHandler.handle(SeekToCurrentErrorHandler.java:112)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.handleConsumerException(KafkaMessageListenerContainer.java:1599)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1210)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Error deserializing key/value for partition customer-topic-2-0 at offset 0. If needed, please seek past the record to continue consumption.\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Can't deserialize data [[104, 105, 32, 116, 104, 101, 114, 101]] from topic [customer-topic-2]\r\nCaused by: com.fasterxml.jackson.core.JsonParseException: Unrecognized token 'hi': was expecting (JSON String, Number, Array, Object or token 'null', 'true' or 'false')\n at [Source: (byte[])\"hi there\"; line: 1, column: 4]\r\n\tat com.fasterxml.jackson.core.JsonParser._constructError(JsonParser.java:2337)\r\n\tat com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(ParserMinimalBase.java:720)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportInvalidToken(UTF8StreamJsonParser.java:3593)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleUnexpectedValue(UTF8StreamJsonParser.java:2688)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._nextTokenNotInObject(UTF8StreamJsonParser.java:870)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextToken(UTF8StreamJsonParser.java:762)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._initForReading(ObjectReader.java:355)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._bindAndClose(ObjectReader.java:2023)\r\n\tat com.fasterxml.jackson.databind.ObjectReader.readValue(ObjectReader.java:1528)\r\n\tat org.springframework.kafka.support.serializer.JsonDeserializer.deserialize(JsonDeserializer.java:534)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.parseRecord(Fetcher.java:1387)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.access$3400(Fetcher.java:133)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.fetchRecords(Fetcher.java:1618)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.access$1700(Fetcher.java:1454)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchRecords(Fetcher.java:687)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchedRecords(Fetcher.java:638)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.pollForFetches(KafkaConsumer.java:1272)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1233)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1206)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doPoll(KafkaMessageListenerContainer.java:1410)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1249)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1161)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:46:40.732Z","appMessage":"Consumer exception","class":"org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"ERROR","exception":"java.lang.IllegalStateException: This error handler cannot process 'SerializationException's directly; please consider configuring an 'ErrorHandlingDeserializer' in the value and/or key deserializer\r\n\tat org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:194)\r\n\tat org.springframework.kafka.listener.SeekToCurrentErrorHandler.handle(SeekToCurrentErrorHandler.java:112)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.handleConsumerException(KafkaMessageListenerContainer.java:1599)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1210)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Error deserializing key/value for partition customer-topic-2-0 at offset 0. If needed, please seek past the record to continue consumption.\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Can't deserialize data [[104, 105, 32, 116, 104, 101, 114, 101]] from topic [customer-topic-2]\r\nCaused by: com.fasterxml.jackson.core.JsonParseException: Unrecognized token 'hi': was expecting (JSON String, Number, Array, Object or token 'null', 'true' or 'false')\n at [Source: (byte[])\"hi there\"; line: 1, column: 4]\r\n\tat com.fasterxml.jackson.core.JsonParser._constructError(JsonParser.java:2337)\r\n\tat com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(ParserMinimalBase.java:720)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportInvalidToken(UTF8StreamJsonParser.java:3593)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleUnexpectedValue(UTF8StreamJsonParser.java:2688)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._nextTokenNotInObject(UTF8StreamJsonParser.java:870)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextToken(UTF8StreamJsonParser.java:762)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._initForReading(ObjectReader.java:355)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._bindAndClose(ObjectReader.java:2023)\r\n\tat com.fasterxml.jackson.databind.ObjectReader.readValue(ObjectReader.java:1528)\r\n\tat org.springframework.kafka.support.serializer.JsonDeserializer.deserialize(JsonDeserializer.java:534)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.parseRecord(Fetcher.java:1387)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.access$3400(Fetcher.java:133)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.fetchRecords(Fetcher.java:1618)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.access$1700(Fetcher.java:1454)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchRecords(Fetcher.java:687)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchedRecords(Fetcher.java:638)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.pollForFetches(KafkaConsumer.java:1272)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1233)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1206)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doPoll(KafkaMessageListenerContainer.java:1410)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1249)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1161)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:46:40.736Z","appMessage":"Consumer exception","class":"org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"ERROR","exception":"java.lang.IllegalStateException: This error handler cannot process 'SerializationException's directly; please consider configuring an 'ErrorHandlingDeserializer' in the value and/or key deserializer\r\n\tat org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:194)\r\n\tat org.springframework.kafka.listener.SeekToCurrentErrorHandler.handle(SeekToCurrentErrorHandler.java:112)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.handleConsumerException(KafkaMessageListenerContainer.java:1599)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1210)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Error deserializing key/value for partition customer-topic-2-0 at offset 0. If needed, please seek past the record to continue consumption.\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Can't deserialize data [[104, 105, 32, 116, 104, 101, 114, 101]] from topic [customer-topic-2]\r\nCaused by: com.fasterxml.jackson.core.JsonParseException: Unrecognized token 'hi': was expecting (JSON String, Number, Array, Object or token 'null', 'true' or 'false')\n at [Source: (byte[])\"hi there\"; line: 1, column: 4]\r\n\tat com.fasterxml.jackson.core.JsonParser._constructError(JsonParser.java:2337)\r\n\tat com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(ParserMinimalBase.java:720)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportInvalidToken(UTF8StreamJsonParser.java:3593)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleUnexpectedValue(UTF8StreamJsonParser.java:2688)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._nextTokenNotInObject(UTF8StreamJsonParser.java:870)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextToken(UTF8StreamJsonParser.java:762)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._initForReading(ObjectReader.java:355)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._bindAndClose(ObjectReader.java:2023)\r\n\tat com.fasterxml.jackson.databind.ObjectReader.readValue(ObjectReader.java:1528)\r\n\tat org.springframework.kafka.support.serializer.JsonDeserializer.deserialize(JsonDeserializer.java:534)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.parseRecord(Fetcher.java:1387)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.access$3400(Fetcher.java:133)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.fetchRecords(Fetcher.java:1618)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.access$1700(Fetcher.java:1454)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchRecords(Fetcher.java:687)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchedRecords(Fetcher.java:638)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.pollForFetches(KafkaConsumer.java:1272)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1233)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1206)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doPoll(KafkaMessageListenerContainer.java:1410)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1249)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1161)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:46:40.741Z","appMessage":"Consumer exception","class":"org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"ERROR","exception":"java.lang.IllegalStateException: This error handler cannot process 'SerializationException's directly; please consider configuring an 'ErrorHandlingDeserializer' in the value and/or key deserializer\r\n\tat org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:194)\r\n\tat org.springframework.kafka.listener.SeekToCurrentErrorHandler.handle(SeekToCurrentErrorHandler.java:112)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.handleConsumerException(KafkaMessageListenerContainer.java:1599)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1210)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Error deserializing key/value for partition customer-topic-2-0 at offset 0. If needed, please seek past the record to continue consumption.\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Can't deserialize data [[104, 105, 32, 116, 104, 101, 114, 101]] from topic [customer-topic-2]\r\nCaused by: com.fasterxml.jackson.core.JsonParseException: Unrecognized token 'hi': was expecting (JSON String, Number, Array, Object or token 'null', 'true' or 'false')\n at [Source: (byte[])\"hi there\"; line: 1, column: 4]\r\n\tat com.fasterxml.jackson.core.JsonParser._constructError(JsonParser.java:2337)\r\n\tat com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(ParserMinimalBase.java:720)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportInvalidToken(UTF8StreamJsonParser.java:3593)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleUnexpectedValue(UTF8StreamJsonParser.java:2688)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._nextTokenNotInObject(UTF8StreamJsonParser.java:870)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextToken(UTF8StreamJsonParser.java:762)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._initForReading(ObjectReader.java:355)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._bindAndClose(ObjectReader.java:2023)\r\n\tat com.fasterxml.jackson.databind.ObjectReader.readValue(ObjectReader.java:1528)\r\n\tat org.springframework.kafka.support.serializer.JsonDeserializer.deserialize(JsonDeserializer.java:534)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.parseRecord(Fetcher.java:1387)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.access$3400(Fetcher.java:133)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.fetchRecords(Fetcher.java:1618)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.access$1700(Fetcher.java:1454)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchRecords(Fetcher.java:687)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchedRecords(Fetcher.java:638)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.pollForFetches(KafkaConsumer.java:1272)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1233)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1206)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doPoll(KafkaMessageListenerContainer.java:1410)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1249)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1161)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:46:40.745Z","appMessage":"Consumer exception","class":"org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"ERROR","exception":"java.lang.IllegalStateException: This error handler cannot process 'SerializationException's directly; please consider configuring an 'ErrorHandlingDeserializer' in the value and/or key deserializer\r\n\tat org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:194)\r\n\tat org.springframework.kafka.listener.SeekToCurrentErrorHandler.handle(SeekToCurrentErrorHandler.java:112)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.handleConsumerException(KafkaMessageListenerContainer.java:1599)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1210)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Error deserializing key/value for partition customer-topic-2-0 at offset 0. If needed, please seek past the record to continue consumption.\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Can't deserialize data [[104, 105, 32, 116, 104, 101, 114, 101]] from topic [customer-topic-2]\r\nCaused by: com.fasterxml.jackson.core.JsonParseException: Unrecognized token 'hi': was expecting (JSON String, Number, Array, Object or token 'null', 'true' or 'false')\n at [Source: (byte[])\"hi there\"; line: 1, column: 4]\r\n\tat com.fasterxml.jackson.core.JsonParser._constructError(JsonParser.java:2337)\r\n\tat com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(ParserMinimalBase.java:720)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportInvalidToken(UTF8StreamJsonParser.java:3593)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleUnexpectedValue(UTF8StreamJsonParser.java:2688)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._nextTokenNotInObject(UTF8StreamJsonParser.java:870)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextToken(UTF8StreamJsonParser.java:762)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._initForReading(ObjectReader.java:355)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._bindAndClose(ObjectReader.java:2023)\r\n\tat com.fasterxml.jackson.databind.ObjectReader.readValue(ObjectReader.java:1528)\r\n\tat org.springframework.kafka.support.serializer.JsonDeserializer.deserialize(JsonDeserializer.java:534)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.parseRecord(Fetcher.java:1387)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.access$3400(Fetcher.java:133)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.fetchRecords(Fetcher.java:1618)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.access$1700(Fetcher.java:1454)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchRecords(Fetcher.java:687)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchedRecords(Fetcher.java:638)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.pollForFetches(KafkaConsumer.java:1272)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1233)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1206)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doPoll(KafkaMessageListenerContainer.java:1410)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1249)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1161)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:46:40.749Z","appMessage":"Consumer exception","class":"org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"ERROR","exception":"java.lang.IllegalStateException: This error handler cannot process 'SerializationException's directly; please consider configuring an 'ErrorHandlingDeserializer' in the value and/or key deserializer\r\n\tat org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:194)\r\n\tat org.springframework.kafka.listener.SeekToCurrentErrorHandler.handle(SeekToCurrentErrorHandler.java:112)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.handleConsumerException(KafkaMessageListenerContainer.java:1599)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1210)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Error deserializing key/value for partition customer-topic-2-0 at offset 0. If needed, please seek past the record to continue consumption.\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Can't deserialize data [[104, 105, 32, 116, 104, 101, 114, 101]] from topic [customer-topic-2]\r\nCaused by: com.fasterxml.jackson.core.JsonParseException: Unrecognized token 'hi': was expecting (JSON String, Number, Array, Object or token 'null', 'true' or 'false')\n at [Source: (byte[])\"hi there\"; line: 1, column: 4]\r\n\tat com.fasterxml.jackson.core.JsonParser._constructError(JsonParser.java:2337)\r\n\tat com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(ParserMinimalBase.java:720)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportInvalidToken(UTF8StreamJsonParser.java:3593)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleUnexpectedValue(UTF8StreamJsonParser.java:2688)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._nextTokenNotInObject(UTF8StreamJsonParser.java:870)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextToken(UTF8StreamJsonParser.java:762)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._initForReading(ObjectReader.java:355)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._bindAndClose(ObjectReader.java:2023)\r\n\tat com.fasterxml.jackson.databind.ObjectReader.readValue(ObjectReader.java:1528)\r\n\tat org.springframework.kafka.support.serializer.JsonDeserializer.deserialize(JsonDeserializer.java:534)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.parseRecord(Fetcher.java:1387)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.access$3400(Fetcher.java:133)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.fetchRecords(Fetcher.java:1618)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.access$1700(Fetcher.java:1454)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchRecords(Fetcher.java:687)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchedRecords(Fetcher.java:638)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.pollForFetches(KafkaConsumer.java:1272)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1233)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1206)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doPoll(KafkaMessageListenerContainer.java:1410)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1249)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1161)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:46:40.753Z","appMessage":"Consumer exception","class":"org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"ERROR","exception":"java.lang.IllegalStateException: This error handler cannot process 'SerializationException's directly; please consider configuring an 'ErrorHandlingDeserializer' in the value and/or key deserializer\r\n\tat org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:194)\r\n\tat org.springframework.kafka.listener.SeekToCurrentErrorHandler.handle(SeekToCurrentErrorHandler.java:112)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.handleConsumerException(KafkaMessageListenerContainer.java:1599)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1210)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Error deserializing key/value for partition customer-topic-2-0 at offset 0. If needed, please seek past the record to continue consumption.\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Can't deserialize data [[104, 105, 32, 116, 104, 101, 114, 101]] from topic [customer-topic-2]\r\nCaused by: com.fasterxml.jackson.core.JsonParseException: Unrecognized token 'hi': was expecting (JSON String, Number, Array, Object or token 'null', 'true' or 'false')\n at [Source: (byte[])\"hi there\"; line: 1, column: 4]\r\n\tat com.fasterxml.jackson.core.JsonParser._constructError(JsonParser.java:2337)\r\n\tat com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(ParserMinimalBase.java:720)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportInvalidToken(UTF8StreamJsonParser.java:3593)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleUnexpectedValue(UTF8StreamJsonParser.java:2688)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._nextTokenNotInObject(UTF8StreamJsonParser.java:870)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextToken(UTF8StreamJsonParser.java:762)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._initForReading(ObjectReader.java:355)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._bindAndClose(ObjectReader.java:2023)\r\n\tat com.fasterxml.jackson.databind.ObjectReader.readValue(ObjectReader.java:1528)\r\n\tat org.springframework.kafka.support.serializer.JsonDeserializer.deserialize(JsonDeserializer.java:534)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.parseRecord(Fetcher.java:1387)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.access$3400(Fetcher.java:133)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.fetchRecords(Fetcher.java:1618)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.access$1700(Fetcher.java:1454)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchRecords(Fetcher.java:687)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchedRecords(Fetcher.java:638)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.pollForFetches(KafkaConsumer.java:1272)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1233)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1206)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doPoll(KafkaMessageListenerContainer.java:1410)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1249)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1161)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:46:40.758Z","appMessage":"Consumer exception","class":"org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"ERROR","exception":"java.lang.IllegalStateException: This error handler cannot process 'SerializationException's directly; please consider configuring an 'ErrorHandlingDeserializer' in the value and/or key deserializer\r\n\tat org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:194)\r\n\tat org.springframework.kafka.listener.SeekToCurrentErrorHandler.handle(SeekToCurrentErrorHandler.java:112)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.handleConsumerException(KafkaMessageListenerContainer.java:1599)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1210)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Error deserializing key/value for partition customer-topic-2-0 at offset 0. If needed, please seek past the record to continue consumption.\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Can't deserialize data [[104, 105, 32, 116, 104, 101, 114, 101]] from topic [customer-topic-2]\r\nCaused by: com.fasterxml.jackson.core.JsonParseException: Unrecognized token 'hi': was expecting (JSON String, Number, Array, Object or token 'null', 'true' or 'false')\n at [Source: (byte[])\"hi there\"; line: 1, column: 4]\r\n\tat com.fasterxml.jackson.core.JsonParser._constructError(JsonParser.java:2337)\r\n\tat com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(ParserMinimalBase.java:720)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportInvalidToken(UTF8StreamJsonParser.java:3593)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleUnexpectedValue(UTF8StreamJsonParser.java:2688)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._nextTokenNotInObject(UTF8StreamJsonParser.java:870)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextToken(UTF8StreamJsonParser.java:762)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._initForReading(ObjectReader.java:355)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._bindAndClose(ObjectReader.java:2023)\r\n\tat com.fasterxml.jackson.databind.ObjectReader.readValue(ObjectReader.java:1528)\r\n\tat org.springframework.kafka.support.serializer.JsonDeserializer.deserialize(JsonDeserializer.java:534)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.parseRecord(Fetcher.java:1387)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.access$3400(Fetcher.java:133)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.fetchRecords(Fetcher.java:1618)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.access$1700(Fetcher.java:1454)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchRecords(Fetcher.java:687)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchedRecords(Fetcher.java:638)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.pollForFetches(KafkaConsumer.java:1272)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1233)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1206)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doPoll(KafkaMessageListenerContainer.java:1410)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1249)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1161)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:46:40.762Z","appMessage":"Consumer exception","class":"org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"ERROR","exception":"java.lang.IllegalStateException: This error handler cannot process 'SerializationException's directly; please consider configuring an 'ErrorHandlingDeserializer' in the value and/or key deserializer\r\n\tat org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:194)\r\n\tat org.springframework.kafka.listener.SeekToCurrentErrorHandler.handle(SeekToCurrentErrorHandler.java:112)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.handleConsumerException(KafkaMessageListenerContainer.java:1599)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1210)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Error deserializing key/value for partition customer-topic-2-0 at offset 0. If needed, please seek past the record to continue consumption.\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Can't deserialize data [[104, 105, 32, 116, 104, 101, 114, 101]] from topic [customer-topic-2]\r\nCaused by: com.fasterxml.jackson.core.JsonParseException: Unrecognized token 'hi': was expecting (JSON String, Number, Array, Object or token 'null', 'true' or 'false')\n at [Source: (byte[])\"hi there\"; line: 1, column: 4]\r\n\tat com.fasterxml.jackson.core.JsonParser._constructError(JsonParser.java:2337)\r\n\tat com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(ParserMinimalBase.java:720)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportInvalidToken(UTF8StreamJsonParser.java:3593)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleUnexpectedValue(UTF8StreamJsonParser.java:2688)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._nextTokenNotInObject(UTF8StreamJsonParser.java:870)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextToken(UTF8StreamJsonParser.java:762)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._initForReading(ObjectReader.java:355)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._bindAndClose(ObjectReader.java:2023)\r\n\tat com.fasterxml.jackson.databind.ObjectReader.readValue(ObjectReader.java:1528)\r\n\tat org.springframework.kafka.support.serializer.JsonDeserializer.deserialize(JsonDeserializer.java:534)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.parseRecord(Fetcher.java:1387)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.access$3400(Fetcher.java:133)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.fetchRecords(Fetcher.java:1618)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.access$1700(Fetcher.java:1454)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchRecords(Fetcher.java:687)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchedRecords(Fetcher.java:638)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.pollForFetches(KafkaConsumer.java:1272)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1233)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1206)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doPoll(KafkaMessageListenerContainer.java:1410)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1249)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1161)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:46:40.766Z","appMessage":"Consumer exception","class":"org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"ERROR","exception":"java.lang.IllegalStateException: This error handler cannot process 'SerializationException's directly; please consider configuring an 'ErrorHandlingDeserializer' in the value and/or key deserializer\r\n\tat org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:194)\r\n\tat org.springframework.kafka.listener.SeekToCurrentErrorHandler.handle(SeekToCurrentErrorHandler.java:112)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.handleConsumerException(KafkaMessageListenerContainer.java:1599)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1210)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Error deserializing key/value for partition customer-topic-2-0 at offset 0. If needed, please seek past the record to continue consumption.\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Can't deserialize data [[104, 105, 32, 116, 104, 101, 114, 101]] from topic [customer-topic-2]\r\nCaused by: com.fasterxml.jackson.core.JsonParseException: Unrecognized token 'hi': was expecting (JSON String, Number, Array, Object or token 'null', 'true' or 'false')\n at [Source: (byte[])\"hi there\"; line: 1, column: 4]\r\n\tat com.fasterxml.jackson.core.JsonParser._constructError(JsonParser.java:2337)\r\n\tat com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(ParserMinimalBase.java:720)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportInvalidToken(UTF8StreamJsonParser.java:3593)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleUnexpectedValue(UTF8StreamJsonParser.java:2688)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._nextTokenNotInObject(UTF8StreamJsonParser.java:870)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextToken(UTF8StreamJsonParser.java:762)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._initForReading(ObjectReader.java:355)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._bindAndClose(ObjectReader.java:2023)\r\n\tat com.fasterxml.jackson.databind.ObjectReader.readValue(ObjectReader.java:1528)\r\n\tat org.springframework.kafka.support.serializer.JsonDeserializer.deserialize(JsonDeserializer.java:534)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.parseRecord(Fetcher.java:1387)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.access$3400(Fetcher.java:133)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.fetchRecords(Fetcher.java:1618)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.access$1700(Fetcher.java:1454)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchRecords(Fetcher.java:687)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchedRecords(Fetcher.java:638)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.pollForFetches(KafkaConsumer.java:1272)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1233)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1206)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doPoll(KafkaMessageListenerContainer.java:1410)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1249)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1161)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:46:40.771Z","appMessage":"Consumer exception","class":"org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"ERROR","exception":"java.lang.IllegalStateException: This error handler cannot process 'SerializationException's directly; please consider configuring an 'ErrorHandlingDeserializer' in the value and/or key deserializer\r\n\tat org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:194)\r\n\tat org.springframework.kafka.listener.SeekToCurrentErrorHandler.handle(SeekToCurrentErrorHandler.java:112)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.handleConsumerException(KafkaMessageListenerContainer.java:1599)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1210)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Error deserializing key/value for partition customer-topic-2-0 at offset 0. If needed, please seek past the record to continue consumption.\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Can't deserialize data [[104, 105, 32, 116, 104, 101, 114, 101]] from topic [customer-topic-2]\r\nCaused by: com.fasterxml.jackson.core.JsonParseException: Unrecognized token 'hi': was expecting (JSON String, Number, Array, Object or token 'null', 'true' or 'false')\n at [Source: (byte[])\"hi there\"; line: 1, column: 4]\r\n\tat com.fasterxml.jackson.core.JsonParser._constructError(JsonParser.java:2337)\r\n\tat com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(ParserMinimalBase.java:720)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportInvalidToken(UTF8StreamJsonParser.java:3593)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleUnexpectedValue(UTF8StreamJsonParser.java:2688)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._nextTokenNotInObject(UTF8StreamJsonParser.java:870)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextToken(UTF8StreamJsonParser.java:762)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._initForReading(ObjectReader.java:355)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._bindAndClose(ObjectReader.java:2023)\r\n\tat com.fasterxml.jackson.databind.ObjectReader.readValue(ObjectReader.java:1528)\r\n\tat org.springframework.kafka.support.serializer.JsonDeserializer.deserialize(JsonDeserializer.java:534)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.parseRecord(Fetcher.java:1387)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.access$3400(Fetcher.java:133)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.fetchRecords(Fetcher.java:1618)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.access$1700(Fetcher.java:1454)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchRecords(Fetcher.java:687)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchedRecords(Fetcher.java:638)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.pollForFetches(KafkaConsumer.java:1272)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1233)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1206)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doPoll(KafkaMessageListenerContainer.java:1410)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1249)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1161)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:46:40.775Z","appMessage":"Consumer exception","class":"org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"ERROR","exception":"java.lang.IllegalStateException: This error handler cannot process 'SerializationException's directly; please consider configuring an 'ErrorHandlingDeserializer' in the value and/or key deserializer\r\n\tat org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:194)\r\n\tat org.springframework.kafka.listener.SeekToCurrentErrorHandler.handle(SeekToCurrentErrorHandler.java:112)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.handleConsumerException(KafkaMessageListenerContainer.java:1599)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1210)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Error deserializing key/value for partition customer-topic-2-0 at offset 0. If needed, please seek past the record to continue consumption.\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Can't deserialize data [[104, 105, 32, 116, 104, 101, 114, 101]] from topic [customer-topic-2]\r\nCaused by: com.fasterxml.jackson.core.JsonParseException: Unrecognized token 'hi': was expecting (JSON String, Number, Array, Object or token 'null', 'true' or 'false')\n at [Source: (byte[])\"hi there\"; line: 1, column: 4]\r\n\tat com.fasterxml.jackson.core.JsonParser._constructError(JsonParser.java:2337)\r\n\tat com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(ParserMinimalBase.java:720)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportInvalidToken(UTF8StreamJsonParser.java:3593)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleUnexpectedValue(UTF8StreamJsonParser.java:2688)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._nextTokenNotInObject(UTF8StreamJsonParser.java:870)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextToken(UTF8StreamJsonParser.java:762)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._initForReading(ObjectReader.java:355)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._bindAndClose(ObjectReader.java:2023)\r\n\tat com.fasterxml.jackson.databind.ObjectReader.readValue(ObjectReader.java:1528)\r\n\tat org.springframework.kafka.support.serializer.JsonDeserializer.deserialize(JsonDeserializer.java:534)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.parseRecord(Fetcher.java:1387)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.access$3400(Fetcher.java:133)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.fetchRecords(Fetcher.java:1618)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.access$1700(Fetcher.java:1454)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchRecords(Fetcher.java:687)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchedRecords(Fetcher.java:638)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.pollForFetches(KafkaConsumer.java:1272)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1233)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1206)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doPoll(KafkaMessageListenerContainer.java:1410)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1249)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1161)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:46:40.779Z","appMessage":"Consumer exception","class":"org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"ERROR","exception":"java.lang.IllegalStateException: This error handler cannot process 'SerializationException's directly; please consider configuring an 'ErrorHandlingDeserializer' in the value and/or key deserializer\r\n\tat org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:194)\r\n\tat org.springframework.kafka.listener.SeekToCurrentErrorHandler.handle(SeekToCurrentErrorHandler.java:112)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.handleConsumerException(KafkaMessageListenerContainer.java:1599)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1210)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Error deserializing key/value for partition customer-topic-2-0 at offset 0. If needed, please seek past the record to continue consumption.\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Can't deserialize data [[104, 105, 32, 116, 104, 101, 114, 101]] from topic [customer-topic-2]\r\nCaused by: com.fasterxml.jackson.core.JsonParseException: Unrecognized token 'hi': was expecting (JSON String, Number, Array, Object or token 'null', 'true' or 'false')\n at [Source: (byte[])\"hi there\"; line: 1, column: 4]\r\n\tat com.fasterxml.jackson.core.JsonParser._constructError(JsonParser.java:2337)\r\n\tat com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(ParserMinimalBase.java:720)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportInvalidToken(UTF8StreamJsonParser.java:3593)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleUnexpectedValue(UTF8StreamJsonParser.java:2688)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._nextTokenNotInObject(UTF8StreamJsonParser.java:870)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextToken(UTF8StreamJsonParser.java:762)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._initForReading(ObjectReader.java:355)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._bindAndClose(ObjectReader.java:2023)\r\n\tat com.fasterxml.jackson.databind.ObjectReader.readValue(ObjectReader.java:1528)\r\n\tat org.springframework.kafka.support.serializer.JsonDeserializer.deserialize(JsonDeserializer.java:534)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.parseRecord(Fetcher.java:1387)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.access$3400(Fetcher.java:133)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.fetchRecords(Fetcher.java:1618)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.access$1700(Fetcher.java:1454)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchRecords(Fetcher.java:687)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchedRecords(Fetcher.java:638)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.pollForFetches(KafkaConsumer.java:1272)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1233)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1206)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doPoll(KafkaMessageListenerContainer.java:1410)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1249)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1161)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:46:40.784Z","appMessage":"Consumer exception","class":"org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"ERROR","exception":"java.lang.IllegalStateException: This error handler cannot process 'SerializationException's directly; please consider configuring an 'ErrorHandlingDeserializer' in the value and/or key deserializer\r\n\tat org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:194)\r\n\tat org.springframework.kafka.listener.SeekToCurrentErrorHandler.handle(SeekToCurrentErrorHandler.java:112)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.handleConsumerException(KafkaMessageListenerContainer.java:1599)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1210)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Error deserializing key/value for partition customer-topic-2-0 at offset 0. If needed, please seek past the record to continue consumption.\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Can't deserialize data [[104, 105, 32, 116, 104, 101, 114, 101]] from topic [customer-topic-2]\r\nCaused by: com.fasterxml.jackson.core.JsonParseException: Unrecognized token 'hi': was expecting (JSON String, Number, Array, Object or token 'null', 'true' or 'false')\n at [Source: (byte[])\"hi there\"; line: 1, column: 4]\r\n\tat com.fasterxml.jackson.core.JsonParser._constructError(JsonParser.java:2337)\r\n\tat com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(ParserMinimalBase.java:720)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportInvalidToken(UTF8StreamJsonParser.java:3593)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleUnexpectedValue(UTF8StreamJsonParser.java:2688)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._nextTokenNotInObject(UTF8StreamJsonParser.java:870)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextToken(UTF8StreamJsonParser.java:762)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._initForReading(ObjectReader.java:355)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._bindAndClose(ObjectReader.java:2023)\r\n\tat com.fasterxml.jackson.databind.ObjectReader.readValue(ObjectReader.java:1528)\r\n\tat org.springframework.kafka.support.serializer.JsonDeserializer.deserialize(JsonDeserializer.java:534)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.parseRecord(Fetcher.java:1387)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.access$3400(Fetcher.java:133)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.fetchRecords(Fetcher.java:1618)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.access$1700(Fetcher.java:1454)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchRecords(Fetcher.java:687)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchedRecords(Fetcher.java:638)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.pollForFetches(KafkaConsumer.java:1272)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1233)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1206)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doPoll(KafkaMessageListenerContainer.java:1410)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1249)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1161)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:46:40.788Z","appMessage":"Consumer exception","class":"org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"ERROR","exception":"java.lang.IllegalStateException: This error handler cannot process 'SerializationException's directly; please consider configuring an 'ErrorHandlingDeserializer' in the value and/or key deserializer\r\n\tat org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:194)\r\n\tat org.springframework.kafka.listener.SeekToCurrentErrorHandler.handle(SeekToCurrentErrorHandler.java:112)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.handleConsumerException(KafkaMessageListenerContainer.java:1599)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1210)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Error deserializing key/value for partition customer-topic-2-0 at offset 0. If needed, please seek past the record to continue consumption.\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Can't deserialize data [[104, 105, 32, 116, 104, 101, 114, 101]] from topic [customer-topic-2]\r\nCaused by: com.fasterxml.jackson.core.JsonParseException: Unrecognized token 'hi': was expecting (JSON String, Number, Array, Object or token 'null', 'true' or 'false')\n at [Source: (byte[])\"hi there\"; line: 1, column: 4]\r\n\tat com.fasterxml.jackson.core.JsonParser._constructError(JsonParser.java:2337)\r\n\tat com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(ParserMinimalBase.java:720)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportInvalidToken(UTF8StreamJsonParser.java:3593)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleUnexpectedValue(UTF8StreamJsonParser.java:2688)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._nextTokenNotInObject(UTF8StreamJsonParser.java:870)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextToken(UTF8StreamJsonParser.java:762)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._initForReading(ObjectReader.java:355)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._bindAndClose(ObjectReader.java:2023)\r\n\tat com.fasterxml.jackson.databind.ObjectReader.readValue(ObjectReader.java:1528)\r\n\tat org.springframework.kafka.support.serializer.JsonDeserializer.deserialize(JsonDeserializer.java:534)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.parseRecord(Fetcher.java:1387)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.access$3400(Fetcher.java:133)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.fetchRecords(Fetcher.java:1618)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.access$1700(Fetcher.java:1454)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchRecords(Fetcher.java:687)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchedRecords(Fetcher.java:638)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.pollForFetches(KafkaConsumer.java:1272)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1233)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1206)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doPoll(KafkaMessageListenerContainer.java:1410)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1249)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1161)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:46:40.792Z","appMessage":"Consumer exception","class":"org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"ERROR","exception":"java.lang.IllegalStateException: This error handler cannot process 'SerializationException's directly; please consider configuring an 'ErrorHandlingDeserializer' in the value and/or key deserializer\r\n\tat org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:194)\r\n\tat org.springframework.kafka.listener.SeekToCurrentErrorHandler.handle(SeekToCurrentErrorHandler.java:112)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.handleConsumerException(KafkaMessageListenerContainer.java:1599)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1210)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Error deserializing key/value for partition customer-topic-2-0 at offset 0. If needed, please seek past the record to continue consumption.\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Can't deserialize data [[104, 105, 32, 116, 104, 101, 114, 101]] from topic [customer-topic-2]\r\nCaused by: com.fasterxml.jackson.core.JsonParseException: Unrecognized token 'hi': was expecting (JSON String, Number, Array, Object or token 'null', 'true' or 'false')\n at [Source: (byte[])\"hi there\"; line: 1, column: 4]\r\n\tat com.fasterxml.jackson.core.JsonParser._constructError(JsonParser.java:2337)\r\n\tat com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(ParserMinimalBase.java:720)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportInvalidToken(UTF8StreamJsonParser.java:3593)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleUnexpectedValue(UTF8StreamJsonParser.java:2688)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._nextTokenNotInObject(UTF8StreamJsonParser.java:870)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextToken(UTF8StreamJsonParser.java:762)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._initForReading(ObjectReader.java:355)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._bindAndClose(ObjectReader.java:2023)\r\n\tat com.fasterxml.jackson.databind.ObjectReader.readValue(ObjectReader.java:1528)\r\n\tat org.springframework.kafka.support.serializer.JsonDeserializer.deserialize(JsonDeserializer.java:534)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.parseRecord(Fetcher.java:1387)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.access$3400(Fetcher.java:133)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.fetchRecords(Fetcher.java:1618)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.access$1700(Fetcher.java:1454)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchRecords(Fetcher.java:687)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchedRecords(Fetcher.java:638)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.pollForFetches(KafkaConsumer.java:1272)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1233)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1206)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doPoll(KafkaMessageListenerContainer.java:1410)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1249)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1161)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:46:40.796Z","appMessage":"Consumer exception","class":"org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"ERROR","exception":"java.lang.IllegalStateException: This error handler cannot process 'SerializationException's directly; please consider configuring an 'ErrorHandlingDeserializer' in the value and/or key deserializer\r\n\tat org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:194)\r\n\tat org.springframework.kafka.listener.SeekToCurrentErrorHandler.handle(SeekToCurrentErrorHandler.java:112)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.handleConsumerException(KafkaMessageListenerContainer.java:1599)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1210)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Error deserializing key/value for partition customer-topic-2-0 at offset 0. If needed, please seek past the record to continue consumption.\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Can't deserialize data [[104, 105, 32, 116, 104, 101, 114, 101]] from topic [customer-topic-2]\r\nCaused by: com.fasterxml.jackson.core.JsonParseException: Unrecognized token 'hi': was expecting (JSON String, Number, Array, Object or token 'null', 'true' or 'false')\n at [Source: (byte[])\"hi there\"; line: 1, column: 4]\r\n\tat com.fasterxml.jackson.core.JsonParser._constructError(JsonParser.java:2337)\r\n\tat com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(ParserMinimalBase.java:720)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportInvalidToken(UTF8StreamJsonParser.java:3593)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleUnexpectedValue(UTF8StreamJsonParser.java:2688)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._nextTokenNotInObject(UTF8StreamJsonParser.java:870)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextToken(UTF8StreamJsonParser.java:762)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._initForReading(ObjectReader.java:355)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._bindAndClose(ObjectReader.java:2023)\r\n\tat com.fasterxml.jackson.databind.ObjectReader.readValue(ObjectReader.java:1528)\r\n\tat org.springframework.kafka.support.serializer.JsonDeserializer.deserialize(JsonDeserializer.java:534)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.parseRecord(Fetcher.java:1387)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.access$3400(Fetcher.java:133)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.fetchRecords(Fetcher.java:1618)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.access$1700(Fetcher.java:1454)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchRecords(Fetcher.java:687)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchedRecords(Fetcher.java:638)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.pollForFetches(KafkaConsumer.java:1272)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1233)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1206)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doPoll(KafkaMessageListenerContainer.java:1410)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1249)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1161)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:46:40.801Z","appMessage":"Consumer exception","class":"org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"ERROR","exception":"java.lang.IllegalStateException: This error handler cannot process 'SerializationException's directly; please consider configuring an 'ErrorHandlingDeserializer' in the value and/or key deserializer\r\n\tat org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:194)\r\n\tat org.springframework.kafka.listener.SeekToCurrentErrorHandler.handle(SeekToCurrentErrorHandler.java:112)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.handleConsumerException(KafkaMessageListenerContainer.java:1599)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1210)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Error deserializing key/value for partition customer-topic-2-0 at offset 0. If needed, please seek past the record to continue consumption.\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Can't deserialize data [[104, 105, 32, 116, 104, 101, 114, 101]] from topic [customer-topic-2]\r\nCaused by: com.fasterxml.jackson.core.JsonParseException: Unrecognized token 'hi': was expecting (JSON String, Number, Array, Object or token 'null', 'true' or 'false')\n at [Source: (byte[])\"hi there\"; line: 1, column: 4]\r\n\tat com.fasterxml.jackson.core.JsonParser._constructError(JsonParser.java:2337)\r\n\tat com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(ParserMinimalBase.java:720)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportInvalidToken(UTF8StreamJsonParser.java:3593)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleUnexpectedValue(UTF8StreamJsonParser.java:2688)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._nextTokenNotInObject(UTF8StreamJsonParser.java:870)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextToken(UTF8StreamJsonParser.java:762)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._initForReading(ObjectReader.java:355)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._bindAndClose(ObjectReader.java:2023)\r\n\tat com.fasterxml.jackson.databind.ObjectReader.readValue(ObjectReader.java:1528)\r\n\tat org.springframework.kafka.support.serializer.JsonDeserializer.deserialize(JsonDeserializer.java:534)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.parseRecord(Fetcher.java:1387)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.access$3400(Fetcher.java:133)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.fetchRecords(Fetcher.java:1618)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.access$1700(Fetcher.java:1454)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchRecords(Fetcher.java:687)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchedRecords(Fetcher.java:638)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.pollForFetches(KafkaConsumer.java:1272)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1233)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1206)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doPoll(KafkaMessageListenerContainer.java:1410)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1249)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1161)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:46:40.805Z","appMessage":"Consumer exception","class":"org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"ERROR","exception":"java.lang.IllegalStateException: This error handler cannot process 'SerializationException's directly; please consider configuring an 'ErrorHandlingDeserializer' in the value and/or key deserializer\r\n\tat org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:194)\r\n\tat org.springframework.kafka.listener.SeekToCurrentErrorHandler.handle(SeekToCurrentErrorHandler.java:112)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.handleConsumerException(KafkaMessageListenerContainer.java:1599)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1210)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Error deserializing key/value for partition customer-topic-2-0 at offset 0. If needed, please seek past the record to continue consumption.\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Can't deserialize data [[104, 105, 32, 116, 104, 101, 114, 101]] from topic [customer-topic-2]\r\nCaused by: com.fasterxml.jackson.core.JsonParseException: Unrecognized token 'hi': was expecting (JSON String, Number, Array, Object or token 'null', 'true' or 'false')\n at [Source: (byte[])\"hi there\"; line: 1, column: 4]\r\n\tat com.fasterxml.jackson.core.JsonParser._constructError(JsonParser.java:2337)\r\n\tat com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(ParserMinimalBase.java:720)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportInvalidToken(UTF8StreamJsonParser.java:3593)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleUnexpectedValue(UTF8StreamJsonParser.java:2688)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._nextTokenNotInObject(UTF8StreamJsonParser.java:870)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextToken(UTF8StreamJsonParser.java:762)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._initForReading(ObjectReader.java:355)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._bindAndClose(ObjectReader.java:2023)\r\n\tat com.fasterxml.jackson.databind.ObjectReader.readValue(ObjectReader.java:1528)\r\n\tat org.springframework.kafka.support.serializer.JsonDeserializer.deserialize(JsonDeserializer.java:534)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.parseRecord(Fetcher.java:1387)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.access$3400(Fetcher.java:133)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.fetchRecords(Fetcher.java:1618)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.access$1700(Fetcher.java:1454)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchRecords(Fetcher.java:687)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchedRecords(Fetcher.java:638)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.pollForFetches(KafkaConsumer.java:1272)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1233)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1206)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doPoll(KafkaMessageListenerContainer.java:1410)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1249)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1161)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:46:40.809Z","appMessage":"Consumer exception","class":"org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"ERROR","exception":"java.lang.IllegalStateException: This error handler cannot process 'SerializationException's directly; please consider configuring an 'ErrorHandlingDeserializer' in the value and/or key deserializer\r\n\tat org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:194)\r\n\tat org.springframework.kafka.listener.SeekToCurrentErrorHandler.handle(SeekToCurrentErrorHandler.java:112)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.handleConsumerException(KafkaMessageListenerContainer.java:1599)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1210)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Error deserializing key/value for partition customer-topic-2-0 at offset 0. If needed, please seek past the record to continue consumption.\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Can't deserialize data [[104, 105, 32, 116, 104, 101, 114, 101]] from topic [customer-topic-2]\r\nCaused by: com.fasterxml.jackson.core.JsonParseException: Unrecognized token 'hi': was expecting (JSON String, Number, Array, Object or token 'null', 'true' or 'false')\n at [Source: (byte[])\"hi there\"; line: 1, column: 4]\r\n\tat com.fasterxml.jackson.core.JsonParser._constructError(JsonParser.java:2337)\r\n\tat com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(ParserMinimalBase.java:720)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportInvalidToken(UTF8StreamJsonParser.java:3593)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleUnexpectedValue(UTF8StreamJsonParser.java:2688)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._nextTokenNotInObject(UTF8StreamJsonParser.java:870)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextToken(UTF8StreamJsonParser.java:762)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._initForReading(ObjectReader.java:355)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._bindAndClose(ObjectReader.java:2023)\r\n\tat com.fasterxml.jackson.databind.ObjectReader.readValue(ObjectReader.java:1528)\r\n\tat org.springframework.kafka.support.serializer.JsonDeserializer.deserialize(JsonDeserializer.java:534)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.parseRecord(Fetcher.java:1387)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.access$3400(Fetcher.java:133)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.fetchRecords(Fetcher.java:1618)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.access$1700(Fetcher.java:1454)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchRecords(Fetcher.java:687)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchedRecords(Fetcher.java:638)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.pollForFetches(KafkaConsumer.java:1272)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1233)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1206)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doPoll(KafkaMessageListenerContainer.java:1410)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1249)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1161)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:46:40.813Z","appMessage":"Consumer exception","class":"org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"ERROR","exception":"java.lang.IllegalStateException: This error handler cannot process 'SerializationException's directly; please consider configuring an 'ErrorHandlingDeserializer' in the value and/or key deserializer\r\n\tat org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:194)\r\n\tat org.springframework.kafka.listener.SeekToCurrentErrorHandler.handle(SeekToCurrentErrorHandler.java:112)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.handleConsumerException(KafkaMessageListenerContainer.java:1599)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1210)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Error deserializing key/value for partition customer-topic-2-0 at offset 0. If needed, please seek past the record to continue consumption.\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Can't deserialize data [[104, 105, 32, 116, 104, 101, 114, 101]] from topic [customer-topic-2]\r\nCaused by: com.fasterxml.jackson.core.JsonParseException: Unrecognized token 'hi': was expecting (JSON String, Number, Array, Object or token 'null', 'true' or 'false')\n at [Source: (byte[])\"hi there\"; line: 1, column: 4]\r\n\tat com.fasterxml.jackson.core.JsonParser._constructError(JsonParser.java:2337)\r\n\tat com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(ParserMinimalBase.java:720)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportInvalidToken(UTF8StreamJsonParser.java:3593)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleUnexpectedValue(UTF8StreamJsonParser.java:2688)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._nextTokenNotInObject(UTF8StreamJsonParser.java:870)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextToken(UTF8StreamJsonParser.java:762)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._initForReading(ObjectReader.java:355)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._bindAndClose(ObjectReader.java:2023)\r\n\tat com.fasterxml.jackson.databind.ObjectReader.readValue(ObjectReader.java:1528)\r\n\tat org.springframework.kafka.support.serializer.JsonDeserializer.deserialize(JsonDeserializer.java:534)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.parseRecord(Fetcher.java:1387)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.access$3400(Fetcher.java:133)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.fetchRecords(Fetcher.java:1618)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.access$1700(Fetcher.java:1454)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchRecords(Fetcher.java:687)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchedRecords(Fetcher.java:638)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.pollForFetches(KafkaConsumer.java:1272)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1233)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1206)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doPoll(KafkaMessageListenerContainer.java:1410)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1249)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1161)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:46:40.818Z","appMessage":"Consumer exception","class":"org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"ERROR","exception":"java.lang.IllegalStateException: This error handler cannot process 'SerializationException's directly; please consider configuring an 'ErrorHandlingDeserializer' in the value and/or key deserializer\r\n\tat org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:194)\r\n\tat org.springframework.kafka.listener.SeekToCurrentErrorHandler.handle(SeekToCurrentErrorHandler.java:112)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.handleConsumerException(KafkaMessageListenerContainer.java:1599)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1210)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Error deserializing key/value for partition customer-topic-2-0 at offset 0. If needed, please seek past the record to continue consumption.\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Can't deserialize data [[104, 105, 32, 116, 104, 101, 114, 101]] from topic [customer-topic-2]\r\nCaused by: com.fasterxml.jackson.core.JsonParseException: Unrecognized token 'hi': was expecting (JSON String, Number, Array, Object or token 'null', 'true' or 'false')\n at [Source: (byte[])\"hi there\"; line: 1, column: 4]\r\n\tat com.fasterxml.jackson.core.JsonParser._constructError(JsonParser.java:2337)\r\n\tat com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(ParserMinimalBase.java:720)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportInvalidToken(UTF8StreamJsonParser.java:3593)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleUnexpectedValue(UTF8StreamJsonParser.java:2688)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._nextTokenNotInObject(UTF8StreamJsonParser.java:870)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextToken(UTF8StreamJsonParser.java:762)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._initForReading(ObjectReader.java:355)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._bindAndClose(ObjectReader.java:2023)\r\n\tat com.fasterxml.jackson.databind.ObjectReader.readValue(ObjectReader.java:1528)\r\n\tat org.springframework.kafka.support.serializer.JsonDeserializer.deserialize(JsonDeserializer.java:534)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.parseRecord(Fetcher.java:1387)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.access$3400(Fetcher.java:133)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.fetchRecords(Fetcher.java:1618)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.access$1700(Fetcher.java:1454)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchRecords(Fetcher.java:687)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchedRecords(Fetcher.java:638)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.pollForFetches(KafkaConsumer.java:1272)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1233)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1206)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doPoll(KafkaMessageListenerContainer.java:1410)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1249)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1161)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:46:40.822Z","appMessage":"Consumer exception","class":"org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"ERROR","exception":"java.lang.IllegalStateException: This error handler cannot process 'SerializationException's directly; please consider configuring an 'ErrorHandlingDeserializer' in the value and/or key deserializer\r\n\tat org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:194)\r\n\tat org.springframework.kafka.listener.SeekToCurrentErrorHandler.handle(SeekToCurrentErrorHandler.java:112)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.handleConsumerException(KafkaMessageListenerContainer.java:1599)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1210)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Error deserializing key/value for partition customer-topic-2-0 at offset 0. If needed, please seek past the record to continue consumption.\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Can't deserialize data [[104, 105, 32, 116, 104, 101, 114, 101]] from topic [customer-topic-2]\r\nCaused by: com.fasterxml.jackson.core.JsonParseException: Unrecognized token 'hi': was expecting (JSON String, Number, Array, Object or token 'null', 'true' or 'false')\n at [Source: (byte[])\"hi there\"; line: 1, column: 4]\r\n\tat com.fasterxml.jackson.core.JsonParser._constructError(JsonParser.java:2337)\r\n\tat com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(ParserMinimalBase.java:720)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportInvalidToken(UTF8StreamJsonParser.java:3593)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleUnexpectedValue(UTF8StreamJsonParser.java:2688)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._nextTokenNotInObject(UTF8StreamJsonParser.java:870)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextToken(UTF8StreamJsonParser.java:762)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._initForReading(ObjectReader.java:355)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._bindAndClose(ObjectReader.java:2023)\r\n\tat com.fasterxml.jackson.databind.ObjectReader.readValue(ObjectReader.java:1528)\r\n\tat org.springframework.kafka.support.serializer.JsonDeserializer.deserialize(JsonDeserializer.java:534)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.parseRecord(Fetcher.java:1387)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.access$3400(Fetcher.java:133)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.fetchRecords(Fetcher.java:1618)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.access$1700(Fetcher.java:1454)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchRecords(Fetcher.java:687)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchedRecords(Fetcher.java:638)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.pollForFetches(KafkaConsumer.java:1272)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1233)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1206)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doPoll(KafkaMessageListenerContainer.java:1410)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1249)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1161)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:46:40.826Z","appMessage":"Consumer exception","class":"org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"ERROR","exception":"java.lang.IllegalStateException: This error handler cannot process 'SerializationException's directly; please consider configuring an 'ErrorHandlingDeserializer' in the value and/or key deserializer\r\n\tat org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:194)\r\n\tat org.springframework.kafka.listener.SeekToCurrentErrorHandler.handle(SeekToCurrentErrorHandler.java:112)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.handleConsumerException(KafkaMessageListenerContainer.java:1599)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1210)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Error deserializing key/value for partition customer-topic-2-0 at offset 0. If needed, please seek past the record to continue consumption.\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Can't deserialize data [[104, 105, 32, 116, 104, 101, 114, 101]] from topic [customer-topic-2]\r\nCaused by: com.fasterxml.jackson.core.JsonParseException: Unrecognized token 'hi': was expecting (JSON String, Number, Array, Object or token 'null', 'true' or 'false')\n at [Source: (byte[])\"hi there\"; line: 1, column: 4]\r\n\tat com.fasterxml.jackson.core.JsonParser._constructError(JsonParser.java:2337)\r\n\tat com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(ParserMinimalBase.java:720)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportInvalidToken(UTF8StreamJsonParser.java:3593)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleUnexpectedValue(UTF8StreamJsonParser.java:2688)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._nextTokenNotInObject(UTF8StreamJsonParser.java:870)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextToken(UTF8StreamJsonParser.java:762)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._initForReading(ObjectReader.java:355)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._bindAndClose(ObjectReader.java:2023)\r\n\tat com.fasterxml.jackson.databind.ObjectReader.readValue(ObjectReader.java:1528)\r\n\tat org.springframework.kafka.support.serializer.JsonDeserializer.deserialize(JsonDeserializer.java:534)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.parseRecord(Fetcher.java:1387)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.access$3400(Fetcher.java:133)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.fetchRecords(Fetcher.java:1618)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.access$1700(Fetcher.java:1454)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchRecords(Fetcher.java:687)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchedRecords(Fetcher.java:638)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.pollForFetches(KafkaConsumer.java:1272)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1233)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1206)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doPoll(KafkaMessageListenerContainer.java:1410)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1249)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1161)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:46:40.831Z","appMessage":"Consumer exception","class":"org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"ERROR","exception":"java.lang.IllegalStateException: This error handler cannot process 'SerializationException's directly; please consider configuring an 'ErrorHandlingDeserializer' in the value and/or key deserializer\r\n\tat org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:194)\r\n\tat org.springframework.kafka.listener.SeekToCurrentErrorHandler.handle(SeekToCurrentErrorHandler.java:112)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.handleConsumerException(KafkaMessageListenerContainer.java:1599)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1210)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Error deserializing key/value for partition customer-topic-2-0 at offset 0. If needed, please seek past the record to continue consumption.\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Can't deserialize data [[104, 105, 32, 116, 104, 101, 114, 101]] from topic [customer-topic-2]\r\nCaused by: com.fasterxml.jackson.core.JsonParseException: Unrecognized token 'hi': was expecting (JSON String, Number, Array, Object or token 'null', 'true' or 'false')\n at [Source: (byte[])\"hi there\"; line: 1, column: 4]\r\n\tat com.fasterxml.jackson.core.JsonParser._constructError(JsonParser.java:2337)\r\n\tat com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(ParserMinimalBase.java:720)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportInvalidToken(UTF8StreamJsonParser.java:3593)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleUnexpectedValue(UTF8StreamJsonParser.java:2688)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._nextTokenNotInObject(UTF8StreamJsonParser.java:870)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextToken(UTF8StreamJsonParser.java:762)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._initForReading(ObjectReader.java:355)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._bindAndClose(ObjectReader.java:2023)\r\n\tat com.fasterxml.jackson.databind.ObjectReader.readValue(ObjectReader.java:1528)\r\n\tat org.springframework.kafka.support.serializer.JsonDeserializer.deserialize(JsonDeserializer.java:534)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.parseRecord(Fetcher.java:1387)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.access$3400(Fetcher.java:133)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.fetchRecords(Fetcher.java:1618)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.access$1700(Fetcher.java:1454)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchRecords(Fetcher.java:687)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchedRecords(Fetcher.java:638)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.pollForFetches(KafkaConsumer.java:1272)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1233)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1206)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doPoll(KafkaMessageListenerContainer.java:1410)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1249)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1161)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:46:40.835Z","appMessage":"Consumer exception","class":"org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"ERROR","exception":"java.lang.IllegalStateException: This error handler cannot process 'SerializationException's directly; please consider configuring an 'ErrorHandlingDeserializer' in the value and/or key deserializer\r\n\tat org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:194)\r\n\tat org.springframework.kafka.listener.SeekToCurrentErrorHandler.handle(SeekToCurrentErrorHandler.java:112)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.handleConsumerException(KafkaMessageListenerContainer.java:1599)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1210)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Error deserializing key/value for partition customer-topic-2-0 at offset 0. If needed, please seek past the record to continue consumption.\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Can't deserialize data [[104, 105, 32, 116, 104, 101, 114, 101]] from topic [customer-topic-2]\r\nCaused by: com.fasterxml.jackson.core.JsonParseException: Unrecognized token 'hi': was expecting (JSON String, Number, Array, Object or token 'null', 'true' or 'false')\n at [Source: (byte[])\"hi there\"; line: 1, column: 4]\r\n\tat com.fasterxml.jackson.core.JsonParser._constructError(JsonParser.java:2337)\r\n\tat com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(ParserMinimalBase.java:720)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportInvalidToken(UTF8StreamJsonParser.java:3593)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleUnexpectedValue(UTF8StreamJsonParser.java:2688)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._nextTokenNotInObject(UTF8StreamJsonParser.java:870)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextToken(UTF8StreamJsonParser.java:762)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._initForReading(ObjectReader.java:355)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._bindAndClose(ObjectReader.java:2023)\r\n\tat com.fasterxml.jackson.databind.ObjectReader.readValue(ObjectReader.java:1528)\r\n\tat org.springframework.kafka.support.serializer.JsonDeserializer.deserialize(JsonDeserializer.java:534)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.parseRecord(Fetcher.java:1387)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.access$3400(Fetcher.java:133)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.fetchRecords(Fetcher.java:1618)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.access$1700(Fetcher.java:1454)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchRecords(Fetcher.java:687)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchedRecords(Fetcher.java:638)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.pollForFetches(KafkaConsumer.java:1272)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1233)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1206)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doPoll(KafkaMessageListenerContainer.java:1410)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1249)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1161)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:46:40.839Z","appMessage":"Consumer exception","class":"org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"ERROR","exception":"java.lang.IllegalStateException: This error handler cannot process 'SerializationException's directly; please consider configuring an 'ErrorHandlingDeserializer' in the value and/or key deserializer\r\n\tat org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:194)\r\n\tat org.springframework.kafka.listener.SeekToCurrentErrorHandler.handle(SeekToCurrentErrorHandler.java:112)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.handleConsumerException(KafkaMessageListenerContainer.java:1599)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1210)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Error deserializing key/value for partition customer-topic-2-0 at offset 0. If needed, please seek past the record to continue consumption.\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Can't deserialize data [[104, 105, 32, 116, 104, 101, 114, 101]] from topic [customer-topic-2]\r\nCaused by: com.fasterxml.jackson.core.JsonParseException: Unrecognized token 'hi': was expecting (JSON String, Number, Array, Object or token 'null', 'true' or 'false')\n at [Source: (byte[])\"hi there\"; line: 1, column: 4]\r\n\tat com.fasterxml.jackson.core.JsonParser._constructError(JsonParser.java:2337)\r\n\tat com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(ParserMinimalBase.java:720)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportInvalidToken(UTF8StreamJsonParser.java:3593)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleUnexpectedValue(UTF8StreamJsonParser.java:2688)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._nextTokenNotInObject(UTF8StreamJsonParser.java:870)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextToken(UTF8StreamJsonParser.java:762)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._initForReading(ObjectReader.java:355)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._bindAndClose(ObjectReader.java:2023)\r\n\tat com.fasterxml.jackson.databind.ObjectReader.readValue(ObjectReader.java:1528)\r\n\tat org.springframework.kafka.support.serializer.JsonDeserializer.deserialize(JsonDeserializer.java:534)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.parseRecord(Fetcher.java:1387)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.access$3400(Fetcher.java:133)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.fetchRecords(Fetcher.java:1618)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.access$1700(Fetcher.java:1454)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchRecords(Fetcher.java:687)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchedRecords(Fetcher.java:638)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.pollForFetches(KafkaConsumer.java:1272)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1233)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1206)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doPoll(KafkaMessageListenerContainer.java:1410)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1249)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1161)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:46:40.843Z","appMessage":"Consumer exception","class":"org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"ERROR","exception":"java.lang.IllegalStateException: This error handler cannot process 'SerializationException's directly; please consider configuring an 'ErrorHandlingDeserializer' in the value and/or key deserializer\r\n\tat org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:194)\r\n\tat org.springframework.kafka.listener.SeekToCurrentErrorHandler.handle(SeekToCurrentErrorHandler.java:112)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.handleConsumerException(KafkaMessageListenerContainer.java:1599)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1210)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Error deserializing key/value for partition customer-topic-2-0 at offset 0. If needed, please seek past the record to continue consumption.\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Can't deserialize data [[104, 105, 32, 116, 104, 101, 114, 101]] from topic [customer-topic-2]\r\nCaused by: com.fasterxml.jackson.core.JsonParseException: Unrecognized token 'hi': was expecting (JSON String, Number, Array, Object or token 'null', 'true' or 'false')\n at [Source: (byte[])\"hi there\"; line: 1, column: 4]\r\n\tat com.fasterxml.jackson.core.JsonParser._constructError(JsonParser.java:2337)\r\n\tat com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(ParserMinimalBase.java:720)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportInvalidToken(UTF8StreamJsonParser.java:3593)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleUnexpectedValue(UTF8StreamJsonParser.java:2688)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._nextTokenNotInObject(UTF8StreamJsonParser.java:870)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextToken(UTF8StreamJsonParser.java:762)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._initForReading(ObjectReader.java:355)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._bindAndClose(ObjectReader.java:2023)\r\n\tat com.fasterxml.jackson.databind.ObjectReader.readValue(ObjectReader.java:1528)\r\n\tat org.springframework.kafka.support.serializer.JsonDeserializer.deserialize(JsonDeserializer.java:534)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.parseRecord(Fetcher.java:1387)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.access$3400(Fetcher.java:133)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.fetchRecords(Fetcher.java:1618)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.access$1700(Fetcher.java:1454)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchRecords(Fetcher.java:687)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchedRecords(Fetcher.java:638)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.pollForFetches(KafkaConsumer.java:1272)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1233)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1206)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doPoll(KafkaMessageListenerContainer.java:1410)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1249)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1161)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:46:40.848Z","appMessage":"Consumer exception","class":"org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"ERROR","exception":"java.lang.IllegalStateException: This error handler cannot process 'SerializationException's directly; please consider configuring an 'ErrorHandlingDeserializer' in the value and/or key deserializer\r\n\tat org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:194)\r\n\tat org.springframework.kafka.listener.SeekToCurrentErrorHandler.handle(SeekToCurrentErrorHandler.java:112)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.handleConsumerException(KafkaMessageListenerContainer.java:1599)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1210)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Error deserializing key/value for partition customer-topic-2-0 at offset 0. If needed, please seek past the record to continue consumption.\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Can't deserialize data [[104, 105, 32, 116, 104, 101, 114, 101]] from topic [customer-topic-2]\r\nCaused by: com.fasterxml.jackson.core.JsonParseException: Unrecognized token 'hi': was expecting (JSON String, Number, Array, Object or token 'null', 'true' or 'false')\n at [Source: (byte[])\"hi there\"; line: 1, column: 4]\r\n\tat com.fasterxml.jackson.core.JsonParser._constructError(JsonParser.java:2337)\r\n\tat com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(ParserMinimalBase.java:720)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportInvalidToken(UTF8StreamJsonParser.java:3593)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleUnexpectedValue(UTF8StreamJsonParser.java:2688)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._nextTokenNotInObject(UTF8StreamJsonParser.java:870)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextToken(UTF8StreamJsonParser.java:762)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._initForReading(ObjectReader.java:355)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._bindAndClose(ObjectReader.java:2023)\r\n\tat com.fasterxml.jackson.databind.ObjectReader.readValue(ObjectReader.java:1528)\r\n\tat org.springframework.kafka.support.serializer.JsonDeserializer.deserialize(JsonDeserializer.java:534)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.parseRecord(Fetcher.java:1387)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.access$3400(Fetcher.java:133)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.fetchRecords(Fetcher.java:1618)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.access$1700(Fetcher.java:1454)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchRecords(Fetcher.java:687)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchedRecords(Fetcher.java:638)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.pollForFetches(KafkaConsumer.java:1272)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1233)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1206)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doPoll(KafkaMessageListenerContainer.java:1410)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1249)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1161)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:46:40.852Z","appMessage":"Consumer exception","class":"org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"ERROR","exception":"java.lang.IllegalStateException: This error handler cannot process 'SerializationException's directly; please consider configuring an 'ErrorHandlingDeserializer' in the value and/or key deserializer\r\n\tat org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:194)\r\n\tat org.springframework.kafka.listener.SeekToCurrentErrorHandler.handle(SeekToCurrentErrorHandler.java:112)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.handleConsumerException(KafkaMessageListenerContainer.java:1599)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1210)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Error deserializing key/value for partition customer-topic-2-0 at offset 0. If needed, please seek past the record to continue consumption.\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Can't deserialize data [[104, 105, 32, 116, 104, 101, 114, 101]] from topic [customer-topic-2]\r\nCaused by: com.fasterxml.jackson.core.JsonParseException: Unrecognized token 'hi': was expecting (JSON String, Number, Array, Object or token 'null', 'true' or 'false')\n at [Source: (byte[])\"hi there\"; line: 1, column: 4]\r\n\tat com.fasterxml.jackson.core.JsonParser._constructError(JsonParser.java:2337)\r\n\tat com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(ParserMinimalBase.java:720)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportInvalidToken(UTF8StreamJsonParser.java:3593)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleUnexpectedValue(UTF8StreamJsonParser.java:2688)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._nextTokenNotInObject(UTF8StreamJsonParser.java:870)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextToken(UTF8StreamJsonParser.java:762)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._initForReading(ObjectReader.java:355)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._bindAndClose(ObjectReader.java:2023)\r\n\tat com.fasterxml.jackson.databind.ObjectReader.readValue(ObjectReader.java:1528)\r\n\tat org.springframework.kafka.support.serializer.JsonDeserializer.deserialize(JsonDeserializer.java:534)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.parseRecord(Fetcher.java:1387)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.access$3400(Fetcher.java:133)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.fetchRecords(Fetcher.java:1618)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.access$1700(Fetcher.java:1454)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchRecords(Fetcher.java:687)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchedRecords(Fetcher.java:638)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.pollForFetches(KafkaConsumer.java:1272)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1233)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1206)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doPoll(KafkaMessageListenerContainer.java:1410)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1249)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1161)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:46:40.856Z","appMessage":"Consumer exception","class":"org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"ERROR","exception":"java.lang.IllegalStateException: This error handler cannot process 'SerializationException's directly; please consider configuring an 'ErrorHandlingDeserializer' in the value and/or key deserializer\r\n\tat org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:194)\r\n\tat org.springframework.kafka.listener.SeekToCurrentErrorHandler.handle(SeekToCurrentErrorHandler.java:112)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.handleConsumerException(KafkaMessageListenerContainer.java:1599)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1210)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Error deserializing key/value for partition customer-topic-2-0 at offset 0. If needed, please seek past the record to continue consumption.\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Can't deserialize data [[104, 105, 32, 116, 104, 101, 114, 101]] from topic [customer-topic-2]\r\nCaused by: com.fasterxml.jackson.core.JsonParseException: Unrecognized token 'hi': was expecting (JSON String, Number, Array, Object or token 'null', 'true' or 'false')\n at [Source: (byte[])\"hi there\"; line: 1, column: 4]\r\n\tat com.fasterxml.jackson.core.JsonParser._constructError(JsonParser.java:2337)\r\n\tat com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(ParserMinimalBase.java:720)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportInvalidToken(UTF8StreamJsonParser.java:3593)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleUnexpectedValue(UTF8StreamJsonParser.java:2688)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._nextTokenNotInObject(UTF8StreamJsonParser.java:870)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextToken(UTF8StreamJsonParser.java:762)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._initForReading(ObjectReader.java:355)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._bindAndClose(ObjectReader.java:2023)\r\n\tat com.fasterxml.jackson.databind.ObjectReader.readValue(ObjectReader.java:1528)\r\n\tat org.springframework.kafka.support.serializer.JsonDeserializer.deserialize(JsonDeserializer.java:534)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.parseRecord(Fetcher.java:1387)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.access$3400(Fetcher.java:133)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.fetchRecords(Fetcher.java:1618)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.access$1700(Fetcher.java:1454)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchRecords(Fetcher.java:687)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchedRecords(Fetcher.java:638)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.pollForFetches(KafkaConsumer.java:1272)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1233)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1206)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doPoll(KafkaMessageListenerContainer.java:1410)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1249)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1161)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:46:40.861Z","appMessage":"Consumer exception","class":"org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"ERROR","exception":"java.lang.IllegalStateException: This error handler cannot process 'SerializationException's directly; please consider configuring an 'ErrorHandlingDeserializer' in the value and/or key deserializer\r\n\tat org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:194)\r\n\tat org.springframework.kafka.listener.SeekToCurrentErrorHandler.handle(SeekToCurrentErrorHandler.java:112)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.handleConsumerException(KafkaMessageListenerContainer.java:1599)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1210)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Error deserializing key/value for partition customer-topic-2-0 at offset 0. If needed, please seek past the record to continue consumption.\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Can't deserialize data [[104, 105, 32, 116, 104, 101, 114, 101]] from topic [customer-topic-2]\r\nCaused by: com.fasterxml.jackson.core.JsonParseException: Unrecognized token 'hi': was expecting (JSON String, Number, Array, Object or token 'null', 'true' or 'false')\n at [Source: (byte[])\"hi there\"; line: 1, column: 4]\r\n\tat com.fasterxml.jackson.core.JsonParser._constructError(JsonParser.java:2337)\r\n\tat com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(ParserMinimalBase.java:720)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportInvalidToken(UTF8StreamJsonParser.java:3593)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleUnexpectedValue(UTF8StreamJsonParser.java:2688)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._nextTokenNotInObject(UTF8StreamJsonParser.java:870)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextToken(UTF8StreamJsonParser.java:762)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._initForReading(ObjectReader.java:355)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._bindAndClose(ObjectReader.java:2023)\r\n\tat com.fasterxml.jackson.databind.ObjectReader.readValue(ObjectReader.java:1528)\r\n\tat org.springframework.kafka.support.serializer.JsonDeserializer.deserialize(JsonDeserializer.java:534)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.parseRecord(Fetcher.java:1387)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.access$3400(Fetcher.java:133)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.fetchRecords(Fetcher.java:1618)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.access$1700(Fetcher.java:1454)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchRecords(Fetcher.java:687)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchedRecords(Fetcher.java:638)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.pollForFetches(KafkaConsumer.java:1272)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1233)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1206)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doPoll(KafkaMessageListenerContainer.java:1410)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1249)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1161)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:46:40.865Z","appMessage":"Consumer exception","class":"org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"ERROR","exception":"java.lang.IllegalStateException: This error handler cannot process 'SerializationException's directly; please consider configuring an 'ErrorHandlingDeserializer' in the value and/or key deserializer\r\n\tat org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:194)\r\n\tat org.springframework.kafka.listener.SeekToCurrentErrorHandler.handle(SeekToCurrentErrorHandler.java:112)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.handleConsumerException(KafkaMessageListenerContainer.java:1599)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1210)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Error deserializing key/value for partition customer-topic-2-0 at offset 0. If needed, please seek past the record to continue consumption.\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Can't deserialize data [[104, 105, 32, 116, 104, 101, 114, 101]] from topic [customer-topic-2]\r\nCaused by: com.fasterxml.jackson.core.JsonParseException: Unrecognized token 'hi': was expecting (JSON String, Number, Array, Object or token 'null', 'true' or 'false')\n at [Source: (byte[])\"hi there\"; line: 1, column: 4]\r\n\tat com.fasterxml.jackson.core.JsonParser._constructError(JsonParser.java:2337)\r\n\tat com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(ParserMinimalBase.java:720)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportInvalidToken(UTF8StreamJsonParser.java:3593)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleUnexpectedValue(UTF8StreamJsonParser.java:2688)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._nextTokenNotInObject(UTF8StreamJsonParser.java:870)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextToken(UTF8StreamJsonParser.java:762)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._initForReading(ObjectReader.java:355)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._bindAndClose(ObjectReader.java:2023)\r\n\tat com.fasterxml.jackson.databind.ObjectReader.readValue(ObjectReader.java:1528)\r\n\tat org.springframework.kafka.support.serializer.JsonDeserializer.deserialize(JsonDeserializer.java:534)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.parseRecord(Fetcher.java:1387)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.access$3400(Fetcher.java:133)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.fetchRecords(Fetcher.java:1618)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.access$1700(Fetcher.java:1454)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchRecords(Fetcher.java:687)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchedRecords(Fetcher.java:638)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.pollForFetches(KafkaConsumer.java:1272)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1233)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1206)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doPoll(KafkaMessageListenerContainer.java:1410)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1249)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1161)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:46:40.869Z","appMessage":"Consumer exception","class":"org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"ERROR","exception":"java.lang.IllegalStateException: This error handler cannot process 'SerializationException's directly; please consider configuring an 'ErrorHandlingDeserializer' in the value and/or key deserializer\r\n\tat org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:194)\r\n\tat org.springframework.kafka.listener.SeekToCurrentErrorHandler.handle(SeekToCurrentErrorHandler.java:112)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.handleConsumerException(KafkaMessageListenerContainer.java:1599)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1210)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Error deserializing key/value for partition customer-topic-2-0 at offset 0. If needed, please seek past the record to continue consumption.\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Can't deserialize data [[104, 105, 32, 116, 104, 101, 114, 101]] from topic [customer-topic-2]\r\nCaused by: com.fasterxml.jackson.core.JsonParseException: Unrecognized token 'hi': was expecting (JSON String, Number, Array, Object or token 'null', 'true' or 'false')\n at [Source: (byte[])\"hi there\"; line: 1, column: 4]\r\n\tat com.fasterxml.jackson.core.JsonParser._constructError(JsonParser.java:2337)\r\n\tat com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(ParserMinimalBase.java:720)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportInvalidToken(UTF8StreamJsonParser.java:3593)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleUnexpectedValue(UTF8StreamJsonParser.java:2688)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._nextTokenNotInObject(UTF8StreamJsonParser.java:870)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextToken(UTF8StreamJsonParser.java:762)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._initForReading(ObjectReader.java:355)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._bindAndClose(ObjectReader.java:2023)\r\n\tat com.fasterxml.jackson.databind.ObjectReader.readValue(ObjectReader.java:1528)\r\n\tat org.springframework.kafka.support.serializer.JsonDeserializer.deserialize(JsonDeserializer.java:534)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.parseRecord(Fetcher.java:1387)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.access$3400(Fetcher.java:133)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.fetchRecords(Fetcher.java:1618)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.access$1700(Fetcher.java:1454)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchRecords(Fetcher.java:687)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchedRecords(Fetcher.java:638)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.pollForFetches(KafkaConsumer.java:1272)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1233)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1206)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doPoll(KafkaMessageListenerContainer.java:1410)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1249)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1161)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:46:40.873Z","appMessage":"Consumer exception","class":"org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"ERROR","exception":"java.lang.IllegalStateException: This error handler cannot process 'SerializationException's directly; please consider configuring an 'ErrorHandlingDeserializer' in the value and/or key deserializer\r\n\tat org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:194)\r\n\tat org.springframework.kafka.listener.SeekToCurrentErrorHandler.handle(SeekToCurrentErrorHandler.java:112)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.handleConsumerException(KafkaMessageListenerContainer.java:1599)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1210)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Error deserializing key/value for partition customer-topic-2-0 at offset 0. If needed, please seek past the record to continue consumption.\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Can't deserialize data [[104, 105, 32, 116, 104, 101, 114, 101]] from topic [customer-topic-2]\r\nCaused by: com.fasterxml.jackson.core.JsonParseException: Unrecognized token 'hi': was expecting (JSON String, Number, Array, Object or token 'null', 'true' or 'false')\n at [Source: (byte[])\"hi there\"; line: 1, column: 4]\r\n\tat com.fasterxml.jackson.core.JsonParser._constructError(JsonParser.java:2337)\r\n\tat com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(ParserMinimalBase.java:720)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportInvalidToken(UTF8StreamJsonParser.java:3593)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleUnexpectedValue(UTF8StreamJsonParser.java:2688)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._nextTokenNotInObject(UTF8StreamJsonParser.java:870)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextToken(UTF8StreamJsonParser.java:762)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._initForReading(ObjectReader.java:355)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._bindAndClose(ObjectReader.java:2023)\r\n\tat com.fasterxml.jackson.databind.ObjectReader.readValue(ObjectReader.java:1528)\r\n\tat org.springframework.kafka.support.serializer.JsonDeserializer.deserialize(JsonDeserializer.java:534)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.parseRecord(Fetcher.java:1387)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.access$3400(Fetcher.java:133)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.fetchRecords(Fetcher.java:1618)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.access$1700(Fetcher.java:1454)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchRecords(Fetcher.java:687)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchedRecords(Fetcher.java:638)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.pollForFetches(KafkaConsumer.java:1272)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1233)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1206)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doPoll(KafkaMessageListenerContainer.java:1410)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1249)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1161)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:46:40.878Z","appMessage":"Consumer exception","class":"org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"ERROR","exception":"java.lang.IllegalStateException: This error handler cannot process 'SerializationException's directly; please consider configuring an 'ErrorHandlingDeserializer' in the value and/or key deserializer\r\n\tat org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:194)\r\n\tat org.springframework.kafka.listener.SeekToCurrentErrorHandler.handle(SeekToCurrentErrorHandler.java:112)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.handleConsumerException(KafkaMessageListenerContainer.java:1599)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1210)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Error deserializing key/value for partition customer-topic-2-0 at offset 0. If needed, please seek past the record to continue consumption.\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Can't deserialize data [[104, 105, 32, 116, 104, 101, 114, 101]] from topic [customer-topic-2]\r\nCaused by: com.fasterxml.jackson.core.JsonParseException: Unrecognized token 'hi': was expecting (JSON String, Number, Array, Object or token 'null', 'true' or 'false')\n at [Source: (byte[])\"hi there\"; line: 1, column: 4]\r\n\tat com.fasterxml.jackson.core.JsonParser._constructError(JsonParser.java:2337)\r\n\tat com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(ParserMinimalBase.java:720)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportInvalidToken(UTF8StreamJsonParser.java:3593)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleUnexpectedValue(UTF8StreamJsonParser.java:2688)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._nextTokenNotInObject(UTF8StreamJsonParser.java:870)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextToken(UTF8StreamJsonParser.java:762)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._initForReading(ObjectReader.java:355)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._bindAndClose(ObjectReader.java:2023)\r\n\tat com.fasterxml.jackson.databind.ObjectReader.readValue(ObjectReader.java:1528)\r\n\tat org.springframework.kafka.support.serializer.JsonDeserializer.deserialize(JsonDeserializer.java:534)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.parseRecord(Fetcher.java:1387)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.access$3400(Fetcher.java:133)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.fetchRecords(Fetcher.java:1618)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.access$1700(Fetcher.java:1454)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchRecords(Fetcher.java:687)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchedRecords(Fetcher.java:638)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.pollForFetches(KafkaConsumer.java:1272)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1233)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1206)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doPoll(KafkaMessageListenerContainer.java:1410)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1249)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1161)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:46:40.882Z","appMessage":"Consumer exception","class":"org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"ERROR","exception":"java.lang.IllegalStateException: This error handler cannot process 'SerializationException's directly; please consider configuring an 'ErrorHandlingDeserializer' in the value and/or key deserializer\r\n\tat org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:194)\r\n\tat org.springframework.kafka.listener.SeekToCurrentErrorHandler.handle(SeekToCurrentErrorHandler.java:112)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.handleConsumerException(KafkaMessageListenerContainer.java:1599)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1210)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Error deserializing key/value for partition customer-topic-2-0 at offset 0. If needed, please seek past the record to continue consumption.\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Can't deserialize data [[104, 105, 32, 116, 104, 101, 114, 101]] from topic [customer-topic-2]\r\nCaused by: com.fasterxml.jackson.core.JsonParseException: Unrecognized token 'hi': was expecting (JSON String, Number, Array, Object or token 'null', 'true' or 'false')\n at [Source: (byte[])\"hi there\"; line: 1, column: 4]\r\n\tat com.fasterxml.jackson.core.JsonParser._constructError(JsonParser.java:2337)\r\n\tat com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(ParserMinimalBase.java:720)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportInvalidToken(UTF8StreamJsonParser.java:3593)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleUnexpectedValue(UTF8StreamJsonParser.java:2688)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._nextTokenNotInObject(UTF8StreamJsonParser.java:870)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextToken(UTF8StreamJsonParser.java:762)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._initForReading(ObjectReader.java:355)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._bindAndClose(ObjectReader.java:2023)\r\n\tat com.fasterxml.jackson.databind.ObjectReader.readValue(ObjectReader.java:1528)\r\n\tat org.springframework.kafka.support.serializer.JsonDeserializer.deserialize(JsonDeserializer.java:534)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.parseRecord(Fetcher.java:1387)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.access$3400(Fetcher.java:133)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.fetchRecords(Fetcher.java:1618)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.access$1700(Fetcher.java:1454)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchRecords(Fetcher.java:687)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchedRecords(Fetcher.java:638)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.pollForFetches(KafkaConsumer.java:1272)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1233)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1206)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doPoll(KafkaMessageListenerContainer.java:1410)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1249)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1161)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:46:40.886Z","appMessage":"Consumer exception","class":"org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"ERROR","exception":"java.lang.IllegalStateException: This error handler cannot process 'SerializationException's directly; please consider configuring an 'ErrorHandlingDeserializer' in the value and/or key deserializer\r\n\tat org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:194)\r\n\tat org.springframework.kafka.listener.SeekToCurrentErrorHandler.handle(SeekToCurrentErrorHandler.java:112)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.handleConsumerException(KafkaMessageListenerContainer.java:1599)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1210)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Error deserializing key/value for partition customer-topic-2-0 at offset 0. If needed, please seek past the record to continue consumption.\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Can't deserialize data [[104, 105, 32, 116, 104, 101, 114, 101]] from topic [customer-topic-2]\r\nCaused by: com.fasterxml.jackson.core.JsonParseException: Unrecognized token 'hi': was expecting (JSON String, Number, Array, Object or token 'null', 'true' or 'false')\n at [Source: (byte[])\"hi there\"; line: 1, column: 4]\r\n\tat com.fasterxml.jackson.core.JsonParser._constructError(JsonParser.java:2337)\r\n\tat com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(ParserMinimalBase.java:720)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportInvalidToken(UTF8StreamJsonParser.java:3593)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleUnexpectedValue(UTF8StreamJsonParser.java:2688)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._nextTokenNotInObject(UTF8StreamJsonParser.java:870)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextToken(UTF8StreamJsonParser.java:762)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._initForReading(ObjectReader.java:355)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._bindAndClose(ObjectReader.java:2023)\r\n\tat com.fasterxml.jackson.databind.ObjectReader.readValue(ObjectReader.java:1528)\r\n\tat org.springframework.kafka.support.serializer.JsonDeserializer.deserialize(JsonDeserializer.java:534)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.parseRecord(Fetcher.java:1387)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.access$3400(Fetcher.java:133)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.fetchRecords(Fetcher.java:1618)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.access$1700(Fetcher.java:1454)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchRecords(Fetcher.java:687)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchedRecords(Fetcher.java:638)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.pollForFetches(KafkaConsumer.java:1272)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1233)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1206)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doPoll(KafkaMessageListenerContainer.java:1410)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1249)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1161)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:46:40.891Z","appMessage":"Consumer exception","class":"org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"ERROR","exception":"java.lang.IllegalStateException: This error handler cannot process 'SerializationException's directly; please consider configuring an 'ErrorHandlingDeserializer' in the value and/or key deserializer\r\n\tat org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:194)\r\n\tat org.springframework.kafka.listener.SeekToCurrentErrorHandler.handle(SeekToCurrentErrorHandler.java:112)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.handleConsumerException(KafkaMessageListenerContainer.java:1599)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1210)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Error deserializing key/value for partition customer-topic-2-0 at offset 0. If needed, please seek past the record to continue consumption.\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Can't deserialize data [[104, 105, 32, 116, 104, 101, 114, 101]] from topic [customer-topic-2]\r\nCaused by: com.fasterxml.jackson.core.JsonParseException: Unrecognized token 'hi': was expecting (JSON String, Number, Array, Object or token 'null', 'true' or 'false')\n at [Source: (byte[])\"hi there\"; line: 1, column: 4]\r\n\tat com.fasterxml.jackson.core.JsonParser._constructError(JsonParser.java:2337)\r\n\tat com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(ParserMinimalBase.java:720)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportInvalidToken(UTF8StreamJsonParser.java:3593)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleUnexpectedValue(UTF8StreamJsonParser.java:2688)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._nextTokenNotInObject(UTF8StreamJsonParser.java:870)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextToken(UTF8StreamJsonParser.java:762)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._initForReading(ObjectReader.java:355)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._bindAndClose(ObjectReader.java:2023)\r\n\tat com.fasterxml.jackson.databind.ObjectReader.readValue(ObjectReader.java:1528)\r\n\tat org.springframework.kafka.support.serializer.JsonDeserializer.deserialize(JsonDeserializer.java:534)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.parseRecord(Fetcher.java:1387)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.access$3400(Fetcher.java:133)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.fetchRecords(Fetcher.java:1618)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.access$1700(Fetcher.java:1454)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchRecords(Fetcher.java:687)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchedRecords(Fetcher.java:638)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.pollForFetches(KafkaConsumer.java:1272)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1233)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1206)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doPoll(KafkaMessageListenerContainer.java:1410)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1249)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1161)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:46:40.895Z","appMessage":"Consumer exception","class":"org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"ERROR","exception":"java.lang.IllegalStateException: This error handler cannot process 'SerializationException's directly; please consider configuring an 'ErrorHandlingDeserializer' in the value and/or key deserializer\r\n\tat org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:194)\r\n\tat org.springframework.kafka.listener.SeekToCurrentErrorHandler.handle(SeekToCurrentErrorHandler.java:112)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.handleConsumerException(KafkaMessageListenerContainer.java:1599)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1210)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Error deserializing key/value for partition customer-topic-2-0 at offset 0. If needed, please seek past the record to continue consumption.\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Can't deserialize data [[104, 105, 32, 116, 104, 101, 114, 101]] from topic [customer-topic-2]\r\nCaused by: com.fasterxml.jackson.core.JsonParseException: Unrecognized token 'hi': was expecting (JSON String, Number, Array, Object or token 'null', 'true' or 'false')\n at [Source: (byte[])\"hi there\"; line: 1, column: 4]\r\n\tat com.fasterxml.jackson.core.JsonParser._constructError(JsonParser.java:2337)\r\n\tat com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(ParserMinimalBase.java:720)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportInvalidToken(UTF8StreamJsonParser.java:3593)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleUnexpectedValue(UTF8StreamJsonParser.java:2688)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._nextTokenNotInObject(UTF8StreamJsonParser.java:870)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextToken(UTF8StreamJsonParser.java:762)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._initForReading(ObjectReader.java:355)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._bindAndClose(ObjectReader.java:2023)\r\n\tat com.fasterxml.jackson.databind.ObjectReader.readValue(ObjectReader.java:1528)\r\n\tat org.springframework.kafka.support.serializer.JsonDeserializer.deserialize(JsonDeserializer.java:534)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.parseRecord(Fetcher.java:1387)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.access$3400(Fetcher.java:133)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.fetchRecords(Fetcher.java:1618)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.access$1700(Fetcher.java:1454)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchRecords(Fetcher.java:687)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchedRecords(Fetcher.java:638)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.pollForFetches(KafkaConsumer.java:1272)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1233)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1206)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doPoll(KafkaMessageListenerContainer.java:1410)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1249)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1161)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:46:40.899Z","appMessage":"Consumer exception","class":"org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"ERROR","exception":"java.lang.IllegalStateException: This error handler cannot process 'SerializationException's directly; please consider configuring an 'ErrorHandlingDeserializer' in the value and/or key deserializer\r\n\tat org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:194)\r\n\tat org.springframework.kafka.listener.SeekToCurrentErrorHandler.handle(SeekToCurrentErrorHandler.java:112)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.handleConsumerException(KafkaMessageListenerContainer.java:1599)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1210)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Error deserializing key/value for partition customer-topic-2-0 at offset 0. If needed, please seek past the record to continue consumption.\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Can't deserialize data [[104, 105, 32, 116, 104, 101, 114, 101]] from topic [customer-topic-2]\r\nCaused by: com.fasterxml.jackson.core.JsonParseException: Unrecognized token 'hi': was expecting (JSON String, Number, Array, Object or token 'null', 'true' or 'false')\n at [Source: (byte[])\"hi there\"; line: 1, column: 4]\r\n\tat com.fasterxml.jackson.core.JsonParser._constructError(JsonParser.java:2337)\r\n\tat com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(ParserMinimalBase.java:720)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportInvalidToken(UTF8StreamJsonParser.java:3593)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleUnexpectedValue(UTF8StreamJsonParser.java:2688)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._nextTokenNotInObject(UTF8StreamJsonParser.java:870)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextToken(UTF8StreamJsonParser.java:762)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._initForReading(ObjectReader.java:355)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._bindAndClose(ObjectReader.java:2023)\r\n\tat com.fasterxml.jackson.databind.ObjectReader.readValue(ObjectReader.java:1528)\r\n\tat org.springframework.kafka.support.serializer.JsonDeserializer.deserialize(JsonDeserializer.java:534)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.parseRecord(Fetcher.java:1387)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.access$3400(Fetcher.java:133)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.fetchRecords(Fetcher.java:1618)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.access$1700(Fetcher.java:1454)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchRecords(Fetcher.java:687)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchedRecords(Fetcher.java:638)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.pollForFetches(KafkaConsumer.java:1272)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1233)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1206)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doPoll(KafkaMessageListenerContainer.java:1410)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1249)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1161)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:46:40.903Z","appMessage":"Consumer exception","class":"org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"ERROR","exception":"java.lang.IllegalStateException: This error handler cannot process 'SerializationException's directly; please consider configuring an 'ErrorHandlingDeserializer' in the value and/or key deserializer\r\n\tat org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:194)\r\n\tat org.springframework.kafka.listener.SeekToCurrentErrorHandler.handle(SeekToCurrentErrorHandler.java:112)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.handleConsumerException(KafkaMessageListenerContainer.java:1599)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1210)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Error deserializing key/value for partition customer-topic-2-0 at offset 0. If needed, please seek past the record to continue consumption.\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Can't deserialize data [[104, 105, 32, 116, 104, 101, 114, 101]] from topic [customer-topic-2]\r\nCaused by: com.fasterxml.jackson.core.JsonParseException: Unrecognized token 'hi': was expecting (JSON String, Number, Array, Object or token 'null', 'true' or 'false')\n at [Source: (byte[])\"hi there\"; line: 1, column: 4]\r\n\tat com.fasterxml.jackson.core.JsonParser._constructError(JsonParser.java:2337)\r\n\tat com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(ParserMinimalBase.java:720)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportInvalidToken(UTF8StreamJsonParser.java:3593)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleUnexpectedValue(UTF8StreamJsonParser.java:2688)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._nextTokenNotInObject(UTF8StreamJsonParser.java:870)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextToken(UTF8StreamJsonParser.java:762)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._initForReading(ObjectReader.java:355)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._bindAndClose(ObjectReader.java:2023)\r\n\tat com.fasterxml.jackson.databind.ObjectReader.readValue(ObjectReader.java:1528)\r\n\tat org.springframework.kafka.support.serializer.JsonDeserializer.deserialize(JsonDeserializer.java:534)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.parseRecord(Fetcher.java:1387)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.access$3400(Fetcher.java:133)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.fetchRecords(Fetcher.java:1618)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.access$1700(Fetcher.java:1454)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchRecords(Fetcher.java:687)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchedRecords(Fetcher.java:638)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.pollForFetches(KafkaConsumer.java:1272)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1233)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1206)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doPoll(KafkaMessageListenerContainer.java:1410)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1249)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1161)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:46:40.908Z","appMessage":"Consumer exception","class":"org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"ERROR","exception":"java.lang.IllegalStateException: This error handler cannot process 'SerializationException's directly; please consider configuring an 'ErrorHandlingDeserializer' in the value and/or key deserializer\r\n\tat org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:194)\r\n\tat org.springframework.kafka.listener.SeekToCurrentErrorHandler.handle(SeekToCurrentErrorHandler.java:112)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.handleConsumerException(KafkaMessageListenerContainer.java:1599)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1210)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Error deserializing key/value for partition customer-topic-2-0 at offset 0. If needed, please seek past the record to continue consumption.\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Can't deserialize data [[104, 105, 32, 116, 104, 101, 114, 101]] from topic [customer-topic-2]\r\nCaused by: com.fasterxml.jackson.core.JsonParseException: Unrecognized token 'hi': was expecting (JSON String, Number, Array, Object or token 'null', 'true' or 'false')\n at [Source: (byte[])\"hi there\"; line: 1, column: 4]\r\n\tat com.fasterxml.jackson.core.JsonParser._constructError(JsonParser.java:2337)\r\n\tat com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(ParserMinimalBase.java:720)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportInvalidToken(UTF8StreamJsonParser.java:3593)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleUnexpectedValue(UTF8StreamJsonParser.java:2688)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._nextTokenNotInObject(UTF8StreamJsonParser.java:870)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextToken(UTF8StreamJsonParser.java:762)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._initForReading(ObjectReader.java:355)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._bindAndClose(ObjectReader.java:2023)\r\n\tat com.fasterxml.jackson.databind.ObjectReader.readValue(ObjectReader.java:1528)\r\n\tat org.springframework.kafka.support.serializer.JsonDeserializer.deserialize(JsonDeserializer.java:534)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.parseRecord(Fetcher.java:1387)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.access$3400(Fetcher.java:133)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.fetchRecords(Fetcher.java:1618)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.access$1700(Fetcher.java:1454)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchRecords(Fetcher.java:687)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchedRecords(Fetcher.java:638)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.pollForFetches(KafkaConsumer.java:1272)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1233)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1206)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doPoll(KafkaMessageListenerContainer.java:1410)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1249)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1161)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:46:40.912Z","appMessage":"Consumer exception","class":"org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"ERROR","exception":"java.lang.IllegalStateException: This error handler cannot process 'SerializationException's directly; please consider configuring an 'ErrorHandlingDeserializer' in the value and/or key deserializer\r\n\tat org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:194)\r\n\tat org.springframework.kafka.listener.SeekToCurrentErrorHandler.handle(SeekToCurrentErrorHandler.java:112)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.handleConsumerException(KafkaMessageListenerContainer.java:1599)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1210)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Error deserializing key/value for partition customer-topic-2-0 at offset 0. If needed, please seek past the record to continue consumption.\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Can't deserialize data [[104, 105, 32, 116, 104, 101, 114, 101]] from topic [customer-topic-2]\r\nCaused by: com.fasterxml.jackson.core.JsonParseException: Unrecognized token 'hi': was expecting (JSON String, Number, Array, Object or token 'null', 'true' or 'false')\n at [Source: (byte[])\"hi there\"; line: 1, column: 4]\r\n\tat com.fasterxml.jackson.core.JsonParser._constructError(JsonParser.java:2337)\r\n\tat com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(ParserMinimalBase.java:720)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportInvalidToken(UTF8StreamJsonParser.java:3593)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleUnexpectedValue(UTF8StreamJsonParser.java:2688)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._nextTokenNotInObject(UTF8StreamJsonParser.java:870)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextToken(UTF8StreamJsonParser.java:762)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._initForReading(ObjectReader.java:355)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._bindAndClose(ObjectReader.java:2023)\r\n\tat com.fasterxml.jackson.databind.ObjectReader.readValue(ObjectReader.java:1528)\r\n\tat org.springframework.kafka.support.serializer.JsonDeserializer.deserialize(JsonDeserializer.java:534)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.parseRecord(Fetcher.java:1387)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.access$3400(Fetcher.java:133)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.fetchRecords(Fetcher.java:1618)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.access$1700(Fetcher.java:1454)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchRecords(Fetcher.java:687)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchedRecords(Fetcher.java:638)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.pollForFetches(KafkaConsumer.java:1272)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1233)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1206)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doPoll(KafkaMessageListenerContainer.java:1410)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1249)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1161)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:46:40.916Z","appMessage":"Consumer exception","class":"org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"ERROR","exception":"java.lang.IllegalStateException: This error handler cannot process 'SerializationException's directly; please consider configuring an 'ErrorHandlingDeserializer' in the value and/or key deserializer\r\n\tat org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:194)\r\n\tat org.springframework.kafka.listener.SeekToCurrentErrorHandler.handle(SeekToCurrentErrorHandler.java:112)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.handleConsumerException(KafkaMessageListenerContainer.java:1599)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1210)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Error deserializing key/value for partition customer-topic-2-0 at offset 0. If needed, please seek past the record to continue consumption.\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Can't deserialize data [[104, 105, 32, 116, 104, 101, 114, 101]] from topic [customer-topic-2]\r\nCaused by: com.fasterxml.jackson.core.JsonParseException: Unrecognized token 'hi': was expecting (JSON String, Number, Array, Object or token 'null', 'true' or 'false')\n at [Source: (byte[])\"hi there\"; line: 1, column: 4]\r\n\tat com.fasterxml.jackson.core.JsonParser._constructError(JsonParser.java:2337)\r\n\tat com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(ParserMinimalBase.java:720)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportInvalidToken(UTF8StreamJsonParser.java:3593)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleUnexpectedValue(UTF8StreamJsonParser.java:2688)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._nextTokenNotInObject(UTF8StreamJsonParser.java:870)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextToken(UTF8StreamJsonParser.java:762)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._initForReading(ObjectReader.java:355)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._bindAndClose(ObjectReader.java:2023)\r\n\tat com.fasterxml.jackson.databind.ObjectReader.readValue(ObjectReader.java:1528)\r\n\tat org.springframework.kafka.support.serializer.JsonDeserializer.deserialize(JsonDeserializer.java:534)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.parseRecord(Fetcher.java:1387)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.access$3400(Fetcher.java:133)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.fetchRecords(Fetcher.java:1618)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.access$1700(Fetcher.java:1454)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchRecords(Fetcher.java:687)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchedRecords(Fetcher.java:638)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.pollForFetches(KafkaConsumer.java:1272)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1233)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1206)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doPoll(KafkaMessageListenerContainer.java:1410)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1249)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1161)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:46:40.921Z","appMessage":"Consumer exception","class":"org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"ERROR","exception":"java.lang.IllegalStateException: This error handler cannot process 'SerializationException's directly; please consider configuring an 'ErrorHandlingDeserializer' in the value and/or key deserializer\r\n\tat org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:194)\r\n\tat org.springframework.kafka.listener.SeekToCurrentErrorHandler.handle(SeekToCurrentErrorHandler.java:112)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.handleConsumerException(KafkaMessageListenerContainer.java:1599)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1210)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Error deserializing key/value for partition customer-topic-2-0 at offset 0. If needed, please seek past the record to continue consumption.\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Can't deserialize data [[104, 105, 32, 116, 104, 101, 114, 101]] from topic [customer-topic-2]\r\nCaused by: com.fasterxml.jackson.core.JsonParseException: Unrecognized token 'hi': was expecting (JSON String, Number, Array, Object or token 'null', 'true' or 'false')\n at [Source: (byte[])\"hi there\"; line: 1, column: 4]\r\n\tat com.fasterxml.jackson.core.JsonParser._constructError(JsonParser.java:2337)\r\n\tat com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(ParserMinimalBase.java:720)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportInvalidToken(UTF8StreamJsonParser.java:3593)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleUnexpectedValue(UTF8StreamJsonParser.java:2688)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._nextTokenNotInObject(UTF8StreamJsonParser.java:870)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextToken(UTF8StreamJsonParser.java:762)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._initForReading(ObjectReader.java:355)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._bindAndClose(ObjectReader.java:2023)\r\n\tat com.fasterxml.jackson.databind.ObjectReader.readValue(ObjectReader.java:1528)\r\n\tat org.springframework.kafka.support.serializer.JsonDeserializer.deserialize(JsonDeserializer.java:534)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.parseRecord(Fetcher.java:1387)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.access$3400(Fetcher.java:133)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.fetchRecords(Fetcher.java:1618)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.access$1700(Fetcher.java:1454)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchRecords(Fetcher.java:687)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchedRecords(Fetcher.java:638)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.pollForFetches(KafkaConsumer.java:1272)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1233)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1206)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doPoll(KafkaMessageListenerContainer.java:1410)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1249)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1161)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:46:40.925Z","appMessage":"Consumer exception","class":"org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"ERROR","exception":"java.lang.IllegalStateException: This error handler cannot process 'SerializationException's directly; please consider configuring an 'ErrorHandlingDeserializer' in the value and/or key deserializer\r\n\tat org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:194)\r\n\tat org.springframework.kafka.listener.SeekToCurrentErrorHandler.handle(SeekToCurrentErrorHandler.java:112)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.handleConsumerException(KafkaMessageListenerContainer.java:1599)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1210)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Error deserializing key/value for partition customer-topic-2-0 at offset 0. If needed, please seek past the record to continue consumption.\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Can't deserialize data [[104, 105, 32, 116, 104, 101, 114, 101]] from topic [customer-topic-2]\r\nCaused by: com.fasterxml.jackson.core.JsonParseException: Unrecognized token 'hi': was expecting (JSON String, Number, Array, Object or token 'null', 'true' or 'false')\n at [Source: (byte[])\"hi there\"; line: 1, column: 4]\r\n\tat com.fasterxml.jackson.core.JsonParser._constructError(JsonParser.java:2337)\r\n\tat com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(ParserMinimalBase.java:720)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportInvalidToken(UTF8StreamJsonParser.java:3593)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleUnexpectedValue(UTF8StreamJsonParser.java:2688)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._nextTokenNotInObject(UTF8StreamJsonParser.java:870)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextToken(UTF8StreamJsonParser.java:762)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._initForReading(ObjectReader.java:355)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._bindAndClose(ObjectReader.java:2023)\r\n\tat com.fasterxml.jackson.databind.ObjectReader.readValue(ObjectReader.java:1528)\r\n\tat org.springframework.kafka.support.serializer.JsonDeserializer.deserialize(JsonDeserializer.java:534)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.parseRecord(Fetcher.java:1387)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.access$3400(Fetcher.java:133)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.fetchRecords(Fetcher.java:1618)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.access$1700(Fetcher.java:1454)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchRecords(Fetcher.java:687)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchedRecords(Fetcher.java:638)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.pollForFetches(KafkaConsumer.java:1272)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1233)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1206)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doPoll(KafkaMessageListenerContainer.java:1410)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1249)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1161)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:46:40.929Z","appMessage":"Consumer exception","class":"org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"ERROR","exception":"java.lang.IllegalStateException: This error handler cannot process 'SerializationException's directly; please consider configuring an 'ErrorHandlingDeserializer' in the value and/or key deserializer\r\n\tat org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:194)\r\n\tat org.springframework.kafka.listener.SeekToCurrentErrorHandler.handle(SeekToCurrentErrorHandler.java:112)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.handleConsumerException(KafkaMessageListenerContainer.java:1599)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1210)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Error deserializing key/value for partition customer-topic-2-0 at offset 0. If needed, please seek past the record to continue consumption.\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Can't deserialize data [[104, 105, 32, 116, 104, 101, 114, 101]] from topic [customer-topic-2]\r\nCaused by: com.fasterxml.jackson.core.JsonParseException: Unrecognized token 'hi': was expecting (JSON String, Number, Array, Object or token 'null', 'true' or 'false')\n at [Source: (byte[])\"hi there\"; line: 1, column: 4]\r\n\tat com.fasterxml.jackson.core.JsonParser._constructError(JsonParser.java:2337)\r\n\tat com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(ParserMinimalBase.java:720)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportInvalidToken(UTF8StreamJsonParser.java:3593)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleUnexpectedValue(UTF8StreamJsonParser.java:2688)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._nextTokenNotInObject(UTF8StreamJsonParser.java:870)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextToken(UTF8StreamJsonParser.java:762)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._initForReading(ObjectReader.java:355)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._bindAndClose(ObjectReader.java:2023)\r\n\tat com.fasterxml.jackson.databind.ObjectReader.readValue(ObjectReader.java:1528)\r\n\tat org.springframework.kafka.support.serializer.JsonDeserializer.deserialize(JsonDeserializer.java:534)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.parseRecord(Fetcher.java:1387)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.access$3400(Fetcher.java:133)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.fetchRecords(Fetcher.java:1618)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.access$1700(Fetcher.java:1454)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchRecords(Fetcher.java:687)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchedRecords(Fetcher.java:638)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.pollForFetches(KafkaConsumer.java:1272)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1233)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1206)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doPoll(KafkaMessageListenerContainer.java:1410)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1249)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1161)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:46:40.934Z","appMessage":"Consumer exception","class":"org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"ERROR","exception":"java.lang.IllegalStateException: This error handler cannot process 'SerializationException's directly; please consider configuring an 'ErrorHandlingDeserializer' in the value and/or key deserializer\r\n\tat org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:194)\r\n\tat org.springframework.kafka.listener.SeekToCurrentErrorHandler.handle(SeekToCurrentErrorHandler.java:112)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.handleConsumerException(KafkaMessageListenerContainer.java:1599)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1210)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Error deserializing key/value for partition customer-topic-2-0 at offset 0. If needed, please seek past the record to continue consumption.\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Can't deserialize data [[104, 105, 32, 116, 104, 101, 114, 101]] from topic [customer-topic-2]\r\nCaused by: com.fasterxml.jackson.core.JsonParseException: Unrecognized token 'hi': was expecting (JSON String, Number, Array, Object or token 'null', 'true' or 'false')\n at [Source: (byte[])\"hi there\"; line: 1, column: 4]\r\n\tat com.fasterxml.jackson.core.JsonParser._constructError(JsonParser.java:2337)\r\n\tat com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(ParserMinimalBase.java:720)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportInvalidToken(UTF8StreamJsonParser.java:3593)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleUnexpectedValue(UTF8StreamJsonParser.java:2688)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._nextTokenNotInObject(UTF8StreamJsonParser.java:870)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextToken(UTF8StreamJsonParser.java:762)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._initForReading(ObjectReader.java:355)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._bindAndClose(ObjectReader.java:2023)\r\n\tat com.fasterxml.jackson.databind.ObjectReader.readValue(ObjectReader.java:1528)\r\n\tat org.springframework.kafka.support.serializer.JsonDeserializer.deserialize(JsonDeserializer.java:534)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.parseRecord(Fetcher.java:1387)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.access$3400(Fetcher.java:133)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.fetchRecords(Fetcher.java:1618)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.access$1700(Fetcher.java:1454)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchRecords(Fetcher.java:687)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchedRecords(Fetcher.java:638)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.pollForFetches(KafkaConsumer.java:1272)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1233)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1206)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doPoll(KafkaMessageListenerContainer.java:1410)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1249)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1161)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:46:40.938Z","appMessage":"Consumer exception","class":"org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"ERROR","exception":"java.lang.IllegalStateException: This error handler cannot process 'SerializationException's directly; please consider configuring an 'ErrorHandlingDeserializer' in the value and/or key deserializer\r\n\tat org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:194)\r\n\tat org.springframework.kafka.listener.SeekToCurrentErrorHandler.handle(SeekToCurrentErrorHandler.java:112)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.handleConsumerException(KafkaMessageListenerContainer.java:1599)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1210)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Error deserializing key/value for partition customer-topic-2-0 at offset 0. If needed, please seek past the record to continue consumption.\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Can't deserialize data [[104, 105, 32, 116, 104, 101, 114, 101]] from topic [customer-topic-2]\r\nCaused by: com.fasterxml.jackson.core.JsonParseException: Unrecognized token 'hi': was expecting (JSON String, Number, Array, Object or token 'null', 'true' or 'false')\n at [Source: (byte[])\"hi there\"; line: 1, column: 4]\r\n\tat com.fasterxml.jackson.core.JsonParser._constructError(JsonParser.java:2337)\r\n\tat com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(ParserMinimalBase.java:720)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportInvalidToken(UTF8StreamJsonParser.java:3593)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleUnexpectedValue(UTF8StreamJsonParser.java:2688)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._nextTokenNotInObject(UTF8StreamJsonParser.java:870)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextToken(UTF8StreamJsonParser.java:762)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._initForReading(ObjectReader.java:355)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._bindAndClose(ObjectReader.java:2023)\r\n\tat com.fasterxml.jackson.databind.ObjectReader.readValue(ObjectReader.java:1528)\r\n\tat org.springframework.kafka.support.serializer.JsonDeserializer.deserialize(JsonDeserializer.java:534)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.parseRecord(Fetcher.java:1387)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.access$3400(Fetcher.java:133)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.fetchRecords(Fetcher.java:1618)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.access$1700(Fetcher.java:1454)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchRecords(Fetcher.java:687)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchedRecords(Fetcher.java:638)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.pollForFetches(KafkaConsumer.java:1272)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1233)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1206)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doPoll(KafkaMessageListenerContainer.java:1410)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1249)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1161)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:46:40.942Z","appMessage":"Consumer exception","class":"org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"ERROR","exception":"java.lang.IllegalStateException: This error handler cannot process 'SerializationException's directly; please consider configuring an 'ErrorHandlingDeserializer' in the value and/or key deserializer\r\n\tat org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:194)\r\n\tat org.springframework.kafka.listener.SeekToCurrentErrorHandler.handle(SeekToCurrentErrorHandler.java:112)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.handleConsumerException(KafkaMessageListenerContainer.java:1599)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1210)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Error deserializing key/value for partition customer-topic-2-0 at offset 0. If needed, please seek past the record to continue consumption.\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Can't deserialize data [[104, 105, 32, 116, 104, 101, 114, 101]] from topic [customer-topic-2]\r\nCaused by: com.fasterxml.jackson.core.JsonParseException: Unrecognized token 'hi': was expecting (JSON String, Number, Array, Object or token 'null', 'true' or 'false')\n at [Source: (byte[])\"hi there\"; line: 1, column: 4]\r\n\tat com.fasterxml.jackson.core.JsonParser._constructError(JsonParser.java:2337)\r\n\tat com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(ParserMinimalBase.java:720)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportInvalidToken(UTF8StreamJsonParser.java:3593)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleUnexpectedValue(UTF8StreamJsonParser.java:2688)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._nextTokenNotInObject(UTF8StreamJsonParser.java:870)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextToken(UTF8StreamJsonParser.java:762)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._initForReading(ObjectReader.java:355)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._bindAndClose(ObjectReader.java:2023)\r\n\tat com.fasterxml.jackson.databind.ObjectReader.readValue(ObjectReader.java:1528)\r\n\tat org.springframework.kafka.support.serializer.JsonDeserializer.deserialize(JsonDeserializer.java:534)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.parseRecord(Fetcher.java:1387)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.access$3400(Fetcher.java:133)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.fetchRecords(Fetcher.java:1618)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.access$1700(Fetcher.java:1454)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchRecords(Fetcher.java:687)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchedRecords(Fetcher.java:638)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.pollForFetches(KafkaConsumer.java:1272)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1233)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1206)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doPoll(KafkaMessageListenerContainer.java:1410)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1249)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1161)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:46:40.947Z","appMessage":"Consumer exception","class":"org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"ERROR","exception":"java.lang.IllegalStateException: This error handler cannot process 'SerializationException's directly; please consider configuring an 'ErrorHandlingDeserializer' in the value and/or key deserializer\r\n\tat org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:194)\r\n\tat org.springframework.kafka.listener.SeekToCurrentErrorHandler.handle(SeekToCurrentErrorHandler.java:112)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.handleConsumerException(KafkaMessageListenerContainer.java:1599)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1210)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Error deserializing key/value for partition customer-topic-2-0 at offset 0. If needed, please seek past the record to continue consumption.\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Can't deserialize data [[104, 105, 32, 116, 104, 101, 114, 101]] from topic [customer-topic-2]\r\nCaused by: com.fasterxml.jackson.core.JsonParseException: Unrecognized token 'hi': was expecting (JSON String, Number, Array, Object or token 'null', 'true' or 'false')\n at [Source: (byte[])\"hi there\"; line: 1, column: 4]\r\n\tat com.fasterxml.jackson.core.JsonParser._constructError(JsonParser.java:2337)\r\n\tat com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(ParserMinimalBase.java:720)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportInvalidToken(UTF8StreamJsonParser.java:3593)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleUnexpectedValue(UTF8StreamJsonParser.java:2688)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._nextTokenNotInObject(UTF8StreamJsonParser.java:870)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextToken(UTF8StreamJsonParser.java:762)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._initForReading(ObjectReader.java:355)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._bindAndClose(ObjectReader.java:2023)\r\n\tat com.fasterxml.jackson.databind.ObjectReader.readValue(ObjectReader.java:1528)\r\n\tat org.springframework.kafka.support.serializer.JsonDeserializer.deserialize(JsonDeserializer.java:534)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.parseRecord(Fetcher.java:1387)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.access$3400(Fetcher.java:133)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.fetchRecords(Fetcher.java:1618)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.access$1700(Fetcher.java:1454)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchRecords(Fetcher.java:687)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchedRecords(Fetcher.java:638)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.pollForFetches(KafkaConsumer.java:1272)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1233)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1206)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doPoll(KafkaMessageListenerContainer.java:1410)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1249)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1161)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:46:40.951Z","appMessage":"Consumer exception","class":"org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"ERROR","exception":"java.lang.IllegalStateException: This error handler cannot process 'SerializationException's directly; please consider configuring an 'ErrorHandlingDeserializer' in the value and/or key deserializer\r\n\tat org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:194)\r\n\tat org.springframework.kafka.listener.SeekToCurrentErrorHandler.handle(SeekToCurrentErrorHandler.java:112)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.handleConsumerException(KafkaMessageListenerContainer.java:1599)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1210)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Error deserializing key/value for partition customer-topic-2-0 at offset 0. If needed, please seek past the record to continue consumption.\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Can't deserialize data [[104, 105, 32, 116, 104, 101, 114, 101]] from topic [customer-topic-2]\r\nCaused by: com.fasterxml.jackson.core.JsonParseException: Unrecognized token 'hi': was expecting (JSON String, Number, Array, Object or token 'null', 'true' or 'false')\n at [Source: (byte[])\"hi there\"; line: 1, column: 4]\r\n\tat com.fasterxml.jackson.core.JsonParser._constructError(JsonParser.java:2337)\r\n\tat com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(ParserMinimalBase.java:720)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportInvalidToken(UTF8StreamJsonParser.java:3593)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleUnexpectedValue(UTF8StreamJsonParser.java:2688)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._nextTokenNotInObject(UTF8StreamJsonParser.java:870)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextToken(UTF8StreamJsonParser.java:762)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._initForReading(ObjectReader.java:355)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._bindAndClose(ObjectReader.java:2023)\r\n\tat com.fasterxml.jackson.databind.ObjectReader.readValue(ObjectReader.java:1528)\r\n\tat org.springframework.kafka.support.serializer.JsonDeserializer.deserialize(JsonDeserializer.java:534)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.parseRecord(Fetcher.java:1387)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.access$3400(Fetcher.java:133)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.fetchRecords(Fetcher.java:1618)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.access$1700(Fetcher.java:1454)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchRecords(Fetcher.java:687)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchedRecords(Fetcher.java:638)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.pollForFetches(KafkaConsumer.java:1272)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1233)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1206)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doPoll(KafkaMessageListenerContainer.java:1410)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1249)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1161)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:46:40.955Z","appMessage":"Consumer exception","class":"org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"ERROR","exception":"java.lang.IllegalStateException: This error handler cannot process 'SerializationException's directly; please consider configuring an 'ErrorHandlingDeserializer' in the value and/or key deserializer\r\n\tat org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:194)\r\n\tat org.springframework.kafka.listener.SeekToCurrentErrorHandler.handle(SeekToCurrentErrorHandler.java:112)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.handleConsumerException(KafkaMessageListenerContainer.java:1599)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1210)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Error deserializing key/value for partition customer-topic-2-0 at offset 0. If needed, please seek past the record to continue consumption.\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Can't deserialize data [[104, 105, 32, 116, 104, 101, 114, 101]] from topic [customer-topic-2]\r\nCaused by: com.fasterxml.jackson.core.JsonParseException: Unrecognized token 'hi': was expecting (JSON String, Number, Array, Object or token 'null', 'true' or 'false')\n at [Source: (byte[])\"hi there\"; line: 1, column: 4]\r\n\tat com.fasterxml.jackson.core.JsonParser._constructError(JsonParser.java:2337)\r\n\tat com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(ParserMinimalBase.java:720)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportInvalidToken(UTF8StreamJsonParser.java:3593)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleUnexpectedValue(UTF8StreamJsonParser.java:2688)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._nextTokenNotInObject(UTF8StreamJsonParser.java:870)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextToken(UTF8StreamJsonParser.java:762)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._initForReading(ObjectReader.java:355)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._bindAndClose(ObjectReader.java:2023)\r\n\tat com.fasterxml.jackson.databind.ObjectReader.readValue(ObjectReader.java:1528)\r\n\tat org.springframework.kafka.support.serializer.JsonDeserializer.deserialize(JsonDeserializer.java:534)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.parseRecord(Fetcher.java:1387)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.access$3400(Fetcher.java:133)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.fetchRecords(Fetcher.java:1618)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.access$1700(Fetcher.java:1454)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchRecords(Fetcher.java:687)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchedRecords(Fetcher.java:638)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.pollForFetches(KafkaConsumer.java:1272)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1233)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1206)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doPoll(KafkaMessageListenerContainer.java:1410)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1249)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1161)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:46:40.960Z","appMessage":"Consumer exception","class":"org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"ERROR","exception":"java.lang.IllegalStateException: This error handler cannot process 'SerializationException's directly; please consider configuring an 'ErrorHandlingDeserializer' in the value and/or key deserializer\r\n\tat org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:194)\r\n\tat org.springframework.kafka.listener.SeekToCurrentErrorHandler.handle(SeekToCurrentErrorHandler.java:112)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.handleConsumerException(KafkaMessageListenerContainer.java:1599)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1210)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Error deserializing key/value for partition customer-topic-2-0 at offset 0. If needed, please seek past the record to continue consumption.\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Can't deserialize data [[104, 105, 32, 116, 104, 101, 114, 101]] from topic [customer-topic-2]\r\nCaused by: com.fasterxml.jackson.core.JsonParseException: Unrecognized token 'hi': was expecting (JSON String, Number, Array, Object or token 'null', 'true' or 'false')\n at [Source: (byte[])\"hi there\"; line: 1, column: 4]\r\n\tat com.fasterxml.jackson.core.JsonParser._constructError(JsonParser.java:2337)\r\n\tat com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(ParserMinimalBase.java:720)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportInvalidToken(UTF8StreamJsonParser.java:3593)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleUnexpectedValue(UTF8StreamJsonParser.java:2688)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._nextTokenNotInObject(UTF8StreamJsonParser.java:870)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextToken(UTF8StreamJsonParser.java:762)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._initForReading(ObjectReader.java:355)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._bindAndClose(ObjectReader.java:2023)\r\n\tat com.fasterxml.jackson.databind.ObjectReader.readValue(ObjectReader.java:1528)\r\n\tat org.springframework.kafka.support.serializer.JsonDeserializer.deserialize(JsonDeserializer.java:534)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.parseRecord(Fetcher.java:1387)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.access$3400(Fetcher.java:133)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.fetchRecords(Fetcher.java:1618)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.access$1700(Fetcher.java:1454)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchRecords(Fetcher.java:687)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchedRecords(Fetcher.java:638)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.pollForFetches(KafkaConsumer.java:1272)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1233)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1206)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doPoll(KafkaMessageListenerContainer.java:1410)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1249)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1161)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:46:40.964Z","appMessage":"Consumer exception","class":"org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"ERROR","exception":"java.lang.IllegalStateException: This error handler cannot process 'SerializationException's directly; please consider configuring an 'ErrorHandlingDeserializer' in the value and/or key deserializer\r\n\tat org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:194)\r\n\tat org.springframework.kafka.listener.SeekToCurrentErrorHandler.handle(SeekToCurrentErrorHandler.java:112)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.handleConsumerException(KafkaMessageListenerContainer.java:1599)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1210)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Error deserializing key/value for partition customer-topic-2-0 at offset 0. If needed, please seek past the record to continue consumption.\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Can't deserialize data [[104, 105, 32, 116, 104, 101, 114, 101]] from topic [customer-topic-2]\r\nCaused by: com.fasterxml.jackson.core.JsonParseException: Unrecognized token 'hi': was expecting (JSON String, Number, Array, Object or token 'null', 'true' or 'false')\n at [Source: (byte[])\"hi there\"; line: 1, column: 4]\r\n\tat com.fasterxml.jackson.core.JsonParser._constructError(JsonParser.java:2337)\r\n\tat com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(ParserMinimalBase.java:720)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportInvalidToken(UTF8StreamJsonParser.java:3593)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleUnexpectedValue(UTF8StreamJsonParser.java:2688)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._nextTokenNotInObject(UTF8StreamJsonParser.java:870)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextToken(UTF8StreamJsonParser.java:762)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._initForReading(ObjectReader.java:355)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._bindAndClose(ObjectReader.java:2023)\r\n\tat com.fasterxml.jackson.databind.ObjectReader.readValue(ObjectReader.java:1528)\r\n\tat org.springframework.kafka.support.serializer.JsonDeserializer.deserialize(JsonDeserializer.java:534)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.parseRecord(Fetcher.java:1387)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.access$3400(Fetcher.java:133)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.fetchRecords(Fetcher.java:1618)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.access$1700(Fetcher.java:1454)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchRecords(Fetcher.java:687)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchedRecords(Fetcher.java:638)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.pollForFetches(KafkaConsumer.java:1272)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1233)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1206)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doPoll(KafkaMessageListenerContainer.java:1410)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1249)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1161)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:46:40.969Z","appMessage":"Consumer exception","class":"org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"ERROR","exception":"java.lang.IllegalStateException: This error handler cannot process 'SerializationException's directly; please consider configuring an 'ErrorHandlingDeserializer' in the value and/or key deserializer\r\n\tat org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:194)\r\n\tat org.springframework.kafka.listener.SeekToCurrentErrorHandler.handle(SeekToCurrentErrorHandler.java:112)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.handleConsumerException(KafkaMessageListenerContainer.java:1599)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1210)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Error deserializing key/value for partition customer-topic-2-0 at offset 0. If needed, please seek past the record to continue consumption.\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Can't deserialize data [[104, 105, 32, 116, 104, 101, 114, 101]] from topic [customer-topic-2]\r\nCaused by: com.fasterxml.jackson.core.JsonParseException: Unrecognized token 'hi': was expecting (JSON String, Number, Array, Object or token 'null', 'true' or 'false')\n at [Source: (byte[])\"hi there\"; line: 1, column: 4]\r\n\tat com.fasterxml.jackson.core.JsonParser._constructError(JsonParser.java:2337)\r\n\tat com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(ParserMinimalBase.java:720)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportInvalidToken(UTF8StreamJsonParser.java:3593)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleUnexpectedValue(UTF8StreamJsonParser.java:2688)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._nextTokenNotInObject(UTF8StreamJsonParser.java:870)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextToken(UTF8StreamJsonParser.java:762)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._initForReading(ObjectReader.java:355)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._bindAndClose(ObjectReader.java:2023)\r\n\tat com.fasterxml.jackson.databind.ObjectReader.readValue(ObjectReader.java:1528)\r\n\tat org.springframework.kafka.support.serializer.JsonDeserializer.deserialize(JsonDeserializer.java:534)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.parseRecord(Fetcher.java:1387)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.access$3400(Fetcher.java:133)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.fetchRecords(Fetcher.java:1618)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.access$1700(Fetcher.java:1454)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchRecords(Fetcher.java:687)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchedRecords(Fetcher.java:638)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.pollForFetches(KafkaConsumer.java:1272)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1233)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1206)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doPoll(KafkaMessageListenerContainer.java:1410)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1249)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1161)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:46:40.973Z","appMessage":"Consumer exception","class":"org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"ERROR","exception":"java.lang.IllegalStateException: This error handler cannot process 'SerializationException's directly; please consider configuring an 'ErrorHandlingDeserializer' in the value and/or key deserializer\r\n\tat org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:194)\r\n\tat org.springframework.kafka.listener.SeekToCurrentErrorHandler.handle(SeekToCurrentErrorHandler.java:112)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.handleConsumerException(KafkaMessageListenerContainer.java:1599)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1210)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Error deserializing key/value for partition customer-topic-2-0 at offset 0. If needed, please seek past the record to continue consumption.\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Can't deserialize data [[104, 105, 32, 116, 104, 101, 114, 101]] from topic [customer-topic-2]\r\nCaused by: com.fasterxml.jackson.core.JsonParseException: Unrecognized token 'hi': was expecting (JSON String, Number, Array, Object or token 'null', 'true' or 'false')\n at [Source: (byte[])\"hi there\"; line: 1, column: 4]\r\n\tat com.fasterxml.jackson.core.JsonParser._constructError(JsonParser.java:2337)\r\n\tat com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(ParserMinimalBase.java:720)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportInvalidToken(UTF8StreamJsonParser.java:3593)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleUnexpectedValue(UTF8StreamJsonParser.java:2688)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._nextTokenNotInObject(UTF8StreamJsonParser.java:870)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextToken(UTF8StreamJsonParser.java:762)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._initForReading(ObjectReader.java:355)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._bindAndClose(ObjectReader.java:2023)\r\n\tat com.fasterxml.jackson.databind.ObjectReader.readValue(ObjectReader.java:1528)\r\n\tat org.springframework.kafka.support.serializer.JsonDeserializer.deserialize(JsonDeserializer.java:534)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.parseRecord(Fetcher.java:1387)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.access$3400(Fetcher.java:133)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.fetchRecords(Fetcher.java:1618)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.access$1700(Fetcher.java:1454)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchRecords(Fetcher.java:687)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchedRecords(Fetcher.java:638)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.pollForFetches(KafkaConsumer.java:1272)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1233)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1206)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doPoll(KafkaMessageListenerContainer.java:1410)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1249)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1161)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:46:40.977Z","appMessage":"Consumer exception","class":"org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"ERROR","exception":"java.lang.IllegalStateException: This error handler cannot process 'SerializationException's directly; please consider configuring an 'ErrorHandlingDeserializer' in the value and/or key deserializer\r\n\tat org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:194)\r\n\tat org.springframework.kafka.listener.SeekToCurrentErrorHandler.handle(SeekToCurrentErrorHandler.java:112)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.handleConsumerException(KafkaMessageListenerContainer.java:1599)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1210)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Error deserializing key/value for partition customer-topic-2-0 at offset 0. If needed, please seek past the record to continue consumption.\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Can't deserialize data [[104, 105, 32, 116, 104, 101, 114, 101]] from topic [customer-topic-2]\r\nCaused by: com.fasterxml.jackson.core.JsonParseException: Unrecognized token 'hi': was expecting (JSON String, Number, Array, Object or token 'null', 'true' or 'false')\n at [Source: (byte[])\"hi there\"; line: 1, column: 4]\r\n\tat com.fasterxml.jackson.core.JsonParser._constructError(JsonParser.java:2337)\r\n\tat com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(ParserMinimalBase.java:720)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportInvalidToken(UTF8StreamJsonParser.java:3593)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleUnexpectedValue(UTF8StreamJsonParser.java:2688)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._nextTokenNotInObject(UTF8StreamJsonParser.java:870)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextToken(UTF8StreamJsonParser.java:762)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._initForReading(ObjectReader.java:355)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._bindAndClose(ObjectReader.java:2023)\r\n\tat com.fasterxml.jackson.databind.ObjectReader.readValue(ObjectReader.java:1528)\r\n\tat org.springframework.kafka.support.serializer.JsonDeserializer.deserialize(JsonDeserializer.java:534)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.parseRecord(Fetcher.java:1387)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.access$3400(Fetcher.java:133)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.fetchRecords(Fetcher.java:1618)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.access$1700(Fetcher.java:1454)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchRecords(Fetcher.java:687)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchedRecords(Fetcher.java:638)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.pollForFetches(KafkaConsumer.java:1272)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1233)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1206)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doPoll(KafkaMessageListenerContainer.java:1410)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1249)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1161)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:46:40.982Z","appMessage":"Consumer exception","class":"org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"ERROR","exception":"java.lang.IllegalStateException: This error handler cannot process 'SerializationException's directly; please consider configuring an 'ErrorHandlingDeserializer' in the value and/or key deserializer\r\n\tat org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:194)\r\n\tat org.springframework.kafka.listener.SeekToCurrentErrorHandler.handle(SeekToCurrentErrorHandler.java:112)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.handleConsumerException(KafkaMessageListenerContainer.java:1599)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1210)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Error deserializing key/value for partition customer-topic-2-0 at offset 0. If needed, please seek past the record to continue consumption.\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Can't deserialize data [[104, 105, 32, 116, 104, 101, 114, 101]] from topic [customer-topic-2]\r\nCaused by: com.fasterxml.jackson.core.JsonParseException: Unrecognized token 'hi': was expecting (JSON String, Number, Array, Object or token 'null', 'true' or 'false')\n at [Source: (byte[])\"hi there\"; line: 1, column: 4]\r\n\tat com.fasterxml.jackson.core.JsonParser._constructError(JsonParser.java:2337)\r\n\tat com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(ParserMinimalBase.java:720)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportInvalidToken(UTF8StreamJsonParser.java:3593)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleUnexpectedValue(UTF8StreamJsonParser.java:2688)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._nextTokenNotInObject(UTF8StreamJsonParser.java:870)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextToken(UTF8StreamJsonParser.java:762)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._initForReading(ObjectReader.java:355)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._bindAndClose(ObjectReader.java:2023)\r\n\tat com.fasterxml.jackson.databind.ObjectReader.readValue(ObjectReader.java:1528)\r\n\tat org.springframework.kafka.support.serializer.JsonDeserializer.deserialize(JsonDeserializer.java:534)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.parseRecord(Fetcher.java:1387)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.access$3400(Fetcher.java:133)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.fetchRecords(Fetcher.java:1618)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.access$1700(Fetcher.java:1454)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchRecords(Fetcher.java:687)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchedRecords(Fetcher.java:638)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.pollForFetches(KafkaConsumer.java:1272)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1233)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1206)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doPoll(KafkaMessageListenerContainer.java:1410)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1249)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1161)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:46:40.986Z","appMessage":"Consumer exception","class":"org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"ERROR","exception":"java.lang.IllegalStateException: This error handler cannot process 'SerializationException's directly; please consider configuring an 'ErrorHandlingDeserializer' in the value and/or key deserializer\r\n\tat org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:194)\r\n\tat org.springframework.kafka.listener.SeekToCurrentErrorHandler.handle(SeekToCurrentErrorHandler.java:112)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.handleConsumerException(KafkaMessageListenerContainer.java:1599)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1210)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Error deserializing key/value for partition customer-topic-2-0 at offset 0. If needed, please seek past the record to continue consumption.\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Can't deserialize data [[104, 105, 32, 116, 104, 101, 114, 101]] from topic [customer-topic-2]\r\nCaused by: com.fasterxml.jackson.core.JsonParseException: Unrecognized token 'hi': was expecting (JSON String, Number, Array, Object or token 'null', 'true' or 'false')\n at [Source: (byte[])\"hi there\"; line: 1, column: 4]\r\n\tat com.fasterxml.jackson.core.JsonParser._constructError(JsonParser.java:2337)\r\n\tat com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(ParserMinimalBase.java:720)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportInvalidToken(UTF8StreamJsonParser.java:3593)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleUnexpectedValue(UTF8StreamJsonParser.java:2688)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._nextTokenNotInObject(UTF8StreamJsonParser.java:870)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextToken(UTF8StreamJsonParser.java:762)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._initForReading(ObjectReader.java:355)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._bindAndClose(ObjectReader.java:2023)\r\n\tat com.fasterxml.jackson.databind.ObjectReader.readValue(ObjectReader.java:1528)\r\n\tat org.springframework.kafka.support.serializer.JsonDeserializer.deserialize(JsonDeserializer.java:534)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.parseRecord(Fetcher.java:1387)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.access$3400(Fetcher.java:133)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.fetchRecords(Fetcher.java:1618)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.access$1700(Fetcher.java:1454)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchRecords(Fetcher.java:687)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchedRecords(Fetcher.java:638)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.pollForFetches(KafkaConsumer.java:1272)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1233)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1206)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doPoll(KafkaMessageListenerContainer.java:1410)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1249)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1161)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:46:40.991Z","appMessage":"Consumer exception","class":"org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"ERROR","exception":"java.lang.IllegalStateException: This error handler cannot process 'SerializationException's directly; please consider configuring an 'ErrorHandlingDeserializer' in the value and/or key deserializer\r\n\tat org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:194)\r\n\tat org.springframework.kafka.listener.SeekToCurrentErrorHandler.handle(SeekToCurrentErrorHandler.java:112)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.handleConsumerException(KafkaMessageListenerContainer.java:1599)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1210)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Error deserializing key/value for partition customer-topic-2-0 at offset 0. If needed, please seek past the record to continue consumption.\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Can't deserialize data [[104, 105, 32, 116, 104, 101, 114, 101]] from topic [customer-topic-2]\r\nCaused by: com.fasterxml.jackson.core.JsonParseException: Unrecognized token 'hi': was expecting (JSON String, Number, Array, Object or token 'null', 'true' or 'false')\n at [Source: (byte[])\"hi there\"; line: 1, column: 4]\r\n\tat com.fasterxml.jackson.core.JsonParser._constructError(JsonParser.java:2337)\r\n\tat com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(ParserMinimalBase.java:720)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportInvalidToken(UTF8StreamJsonParser.java:3593)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleUnexpectedValue(UTF8StreamJsonParser.java:2688)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._nextTokenNotInObject(UTF8StreamJsonParser.java:870)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextToken(UTF8StreamJsonParser.java:762)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._initForReading(ObjectReader.java:355)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._bindAndClose(ObjectReader.java:2023)\r\n\tat com.fasterxml.jackson.databind.ObjectReader.readValue(ObjectReader.java:1528)\r\n\tat org.springframework.kafka.support.serializer.JsonDeserializer.deserialize(JsonDeserializer.java:534)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.parseRecord(Fetcher.java:1387)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.access$3400(Fetcher.java:133)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.fetchRecords(Fetcher.java:1618)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.access$1700(Fetcher.java:1454)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchRecords(Fetcher.java:687)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchedRecords(Fetcher.java:638)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.pollForFetches(KafkaConsumer.java:1272)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1233)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1206)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doPoll(KafkaMessageListenerContainer.java:1410)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1249)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1161)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:46:40.995Z","appMessage":"Consumer exception","class":"org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"ERROR","exception":"java.lang.IllegalStateException: This error handler cannot process 'SerializationException's directly; please consider configuring an 'ErrorHandlingDeserializer' in the value and/or key deserializer\r\n\tat org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:194)\r\n\tat org.springframework.kafka.listener.SeekToCurrentErrorHandler.handle(SeekToCurrentErrorHandler.java:112)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.handleConsumerException(KafkaMessageListenerContainer.java:1599)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1210)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Error deserializing key/value for partition customer-topic-2-0 at offset 0. If needed, please seek past the record to continue consumption.\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Can't deserialize data [[104, 105, 32, 116, 104, 101, 114, 101]] from topic [customer-topic-2]\r\nCaused by: com.fasterxml.jackson.core.JsonParseException: Unrecognized token 'hi': was expecting (JSON String, Number, Array, Object or token 'null', 'true' or 'false')\n at [Source: (byte[])\"hi there\"; line: 1, column: 4]\r\n\tat com.fasterxml.jackson.core.JsonParser._constructError(JsonParser.java:2337)\r\n\tat com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(ParserMinimalBase.java:720)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportInvalidToken(UTF8StreamJsonParser.java:3593)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleUnexpectedValue(UTF8StreamJsonParser.java:2688)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._nextTokenNotInObject(UTF8StreamJsonParser.java:870)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextToken(UTF8StreamJsonParser.java:762)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._initForReading(ObjectReader.java:355)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._bindAndClose(ObjectReader.java:2023)\r\n\tat com.fasterxml.jackson.databind.ObjectReader.readValue(ObjectReader.java:1528)\r\n\tat org.springframework.kafka.support.serializer.JsonDeserializer.deserialize(JsonDeserializer.java:534)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.parseRecord(Fetcher.java:1387)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.access$3400(Fetcher.java:133)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.fetchRecords(Fetcher.java:1618)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.access$1700(Fetcher.java:1454)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchRecords(Fetcher.java:687)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchedRecords(Fetcher.java:638)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.pollForFetches(KafkaConsumer.java:1272)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1233)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1206)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doPoll(KafkaMessageListenerContainer.java:1410)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1249)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1161)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:46:41.000Z","appMessage":"Consumer exception","class":"org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"ERROR","exception":"java.lang.IllegalStateException: This error handler cannot process 'SerializationException's directly; please consider configuring an 'ErrorHandlingDeserializer' in the value and/or key deserializer\r\n\tat org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:194)\r\n\tat org.springframework.kafka.listener.SeekToCurrentErrorHandler.handle(SeekToCurrentErrorHandler.java:112)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.handleConsumerException(KafkaMessageListenerContainer.java:1599)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1210)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Error deserializing key/value for partition customer-topic-2-0 at offset 0. If needed, please seek past the record to continue consumption.\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Can't deserialize data [[104, 105, 32, 116, 104, 101, 114, 101]] from topic [customer-topic-2]\r\nCaused by: com.fasterxml.jackson.core.JsonParseException: Unrecognized token 'hi': was expecting (JSON String, Number, Array, Object or token 'null', 'true' or 'false')\n at [Source: (byte[])\"hi there\"; line: 1, column: 4]\r\n\tat com.fasterxml.jackson.core.JsonParser._constructError(JsonParser.java:2337)\r\n\tat com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(ParserMinimalBase.java:720)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportInvalidToken(UTF8StreamJsonParser.java:3593)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleUnexpectedValue(UTF8StreamJsonParser.java:2688)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._nextTokenNotInObject(UTF8StreamJsonParser.java:870)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextToken(UTF8StreamJsonParser.java:762)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._initForReading(ObjectReader.java:355)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._bindAndClose(ObjectReader.java:2023)\r\n\tat com.fasterxml.jackson.databind.ObjectReader.readValue(ObjectReader.java:1528)\r\n\tat org.springframework.kafka.support.serializer.JsonDeserializer.deserialize(JsonDeserializer.java:534)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.parseRecord(Fetcher.java:1387)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.access$3400(Fetcher.java:133)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.fetchRecords(Fetcher.java:1618)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.access$1700(Fetcher.java:1454)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchRecords(Fetcher.java:687)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchedRecords(Fetcher.java:638)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.pollForFetches(KafkaConsumer.java:1272)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1233)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1206)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doPoll(KafkaMessageListenerContainer.java:1410)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1249)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1161)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:46:41.005Z","appMessage":"Consumer exception","class":"org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"ERROR","exception":"java.lang.IllegalStateException: This error handler cannot process 'SerializationException's directly; please consider configuring an 'ErrorHandlingDeserializer' in the value and/or key deserializer\r\n\tat org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:194)\r\n\tat org.springframework.kafka.listener.SeekToCurrentErrorHandler.handle(SeekToCurrentErrorHandler.java:112)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.handleConsumerException(KafkaMessageListenerContainer.java:1599)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1210)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Error deserializing key/value for partition customer-topic-2-0 at offset 0. If needed, please seek past the record to continue consumption.\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Can't deserialize data [[104, 105, 32, 116, 104, 101, 114, 101]] from topic [customer-topic-2]\r\nCaused by: com.fasterxml.jackson.core.JsonParseException: Unrecognized token 'hi': was expecting (JSON String, Number, Array, Object or token 'null', 'true' or 'false')\n at [Source: (byte[])\"hi there\"; line: 1, column: 4]\r\n\tat com.fasterxml.jackson.core.JsonParser._constructError(JsonParser.java:2337)\r\n\tat com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(ParserMinimalBase.java:720)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportInvalidToken(UTF8StreamJsonParser.java:3593)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleUnexpectedValue(UTF8StreamJsonParser.java:2688)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._nextTokenNotInObject(UTF8StreamJsonParser.java:870)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextToken(UTF8StreamJsonParser.java:762)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._initForReading(ObjectReader.java:355)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._bindAndClose(ObjectReader.java:2023)\r\n\tat com.fasterxml.jackson.databind.ObjectReader.readValue(ObjectReader.java:1528)\r\n\tat org.springframework.kafka.support.serializer.JsonDeserializer.deserialize(JsonDeserializer.java:534)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.parseRecord(Fetcher.java:1387)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.access$3400(Fetcher.java:133)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.fetchRecords(Fetcher.java:1618)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.access$1700(Fetcher.java:1454)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchRecords(Fetcher.java:687)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchedRecords(Fetcher.java:638)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.pollForFetches(KafkaConsumer.java:1272)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1233)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1206)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doPoll(KafkaMessageListenerContainer.java:1410)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1249)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1161)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:46:41.009Z","appMessage":"Consumer exception","class":"org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"ERROR","exception":"java.lang.IllegalStateException: This error handler cannot process 'SerializationException's directly; please consider configuring an 'ErrorHandlingDeserializer' in the value and/or key deserializer\r\n\tat org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:194)\r\n\tat org.springframework.kafka.listener.SeekToCurrentErrorHandler.handle(SeekToCurrentErrorHandler.java:112)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.handleConsumerException(KafkaMessageListenerContainer.java:1599)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1210)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Error deserializing key/value for partition customer-topic-2-0 at offset 0. If needed, please seek past the record to continue consumption.\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Can't deserialize data [[104, 105, 32, 116, 104, 101, 114, 101]] from topic [customer-topic-2]\r\nCaused by: com.fasterxml.jackson.core.JsonParseException: Unrecognized token 'hi': was expecting (JSON String, Number, Array, Object or token 'null', 'true' or 'false')\n at [Source: (byte[])\"hi there\"; line: 1, column: 4]\r\n\tat com.fasterxml.jackson.core.JsonParser._constructError(JsonParser.java:2337)\r\n\tat com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(ParserMinimalBase.java:720)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportInvalidToken(UTF8StreamJsonParser.java:3593)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleUnexpectedValue(UTF8StreamJsonParser.java:2688)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._nextTokenNotInObject(UTF8StreamJsonParser.java:870)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextToken(UTF8StreamJsonParser.java:762)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._initForReading(ObjectReader.java:355)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._bindAndClose(ObjectReader.java:2023)\r\n\tat com.fasterxml.jackson.databind.ObjectReader.readValue(ObjectReader.java:1528)\r\n\tat org.springframework.kafka.support.serializer.JsonDeserializer.deserialize(JsonDeserializer.java:534)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.parseRecord(Fetcher.java:1387)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.access$3400(Fetcher.java:133)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.fetchRecords(Fetcher.java:1618)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.access$1700(Fetcher.java:1454)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchRecords(Fetcher.java:687)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchedRecords(Fetcher.java:638)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.pollForFetches(KafkaConsumer.java:1272)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1233)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1206)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doPoll(KafkaMessageListenerContainer.java:1410)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1249)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1161)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:46:41.014Z","appMessage":"Consumer exception","class":"org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"ERROR","exception":"java.lang.IllegalStateException: This error handler cannot process 'SerializationException's directly; please consider configuring an 'ErrorHandlingDeserializer' in the value and/or key deserializer\r\n\tat org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:194)\r\n\tat org.springframework.kafka.listener.SeekToCurrentErrorHandler.handle(SeekToCurrentErrorHandler.java:112)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.handleConsumerException(KafkaMessageListenerContainer.java:1599)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1210)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Error deserializing key/value for partition customer-topic-2-0 at offset 0. If needed, please seek past the record to continue consumption.\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Can't deserialize data [[104, 105, 32, 116, 104, 101, 114, 101]] from topic [customer-topic-2]\r\nCaused by: com.fasterxml.jackson.core.JsonParseException: Unrecognized token 'hi': was expecting (JSON String, Number, Array, Object or token 'null', 'true' or 'false')\n at [Source: (byte[])\"hi there\"; line: 1, column: 4]\r\n\tat com.fasterxml.jackson.core.JsonParser._constructError(JsonParser.java:2337)\r\n\tat com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(ParserMinimalBase.java:720)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportInvalidToken(UTF8StreamJsonParser.java:3593)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleUnexpectedValue(UTF8StreamJsonParser.java:2688)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._nextTokenNotInObject(UTF8StreamJsonParser.java:870)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextToken(UTF8StreamJsonParser.java:762)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._initForReading(ObjectReader.java:355)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._bindAndClose(ObjectReader.java:2023)\r\n\tat com.fasterxml.jackson.databind.ObjectReader.readValue(ObjectReader.java:1528)\r\n\tat org.springframework.kafka.support.serializer.JsonDeserializer.deserialize(JsonDeserializer.java:534)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.parseRecord(Fetcher.java:1387)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.access$3400(Fetcher.java:133)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.fetchRecords(Fetcher.java:1618)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.access$1700(Fetcher.java:1454)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchRecords(Fetcher.java:687)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchedRecords(Fetcher.java:638)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.pollForFetches(KafkaConsumer.java:1272)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1233)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1206)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doPoll(KafkaMessageListenerContainer.java:1410)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1249)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1161)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:46:41.019Z","appMessage":"Consumer exception","class":"org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"ERROR","exception":"java.lang.IllegalStateException: This error handler cannot process 'SerializationException's directly; please consider configuring an 'ErrorHandlingDeserializer' in the value and/or key deserializer\r\n\tat org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:194)\r\n\tat org.springframework.kafka.listener.SeekToCurrentErrorHandler.handle(SeekToCurrentErrorHandler.java:112)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.handleConsumerException(KafkaMessageListenerContainer.java:1599)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1210)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Error deserializing key/value for partition customer-topic-2-0 at offset 0. If needed, please seek past the record to continue consumption.\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Can't deserialize data [[104, 105, 32, 116, 104, 101, 114, 101]] from topic [customer-topic-2]\r\nCaused by: com.fasterxml.jackson.core.JsonParseException: Unrecognized token 'hi': was expecting (JSON String, Number, Array, Object or token 'null', 'true' or 'false')\n at [Source: (byte[])\"hi there\"; line: 1, column: 4]\r\n\tat com.fasterxml.jackson.core.JsonParser._constructError(JsonParser.java:2337)\r\n\tat com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(ParserMinimalBase.java:720)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportInvalidToken(UTF8StreamJsonParser.java:3593)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleUnexpectedValue(UTF8StreamJsonParser.java:2688)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._nextTokenNotInObject(UTF8StreamJsonParser.java:870)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextToken(UTF8StreamJsonParser.java:762)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._initForReading(ObjectReader.java:355)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._bindAndClose(ObjectReader.java:2023)\r\n\tat com.fasterxml.jackson.databind.ObjectReader.readValue(ObjectReader.java:1528)\r\n\tat org.springframework.kafka.support.serializer.JsonDeserializer.deserialize(JsonDeserializer.java:534)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.parseRecord(Fetcher.java:1387)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.access$3400(Fetcher.java:133)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.fetchRecords(Fetcher.java:1618)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.access$1700(Fetcher.java:1454)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchRecords(Fetcher.java:687)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchedRecords(Fetcher.java:638)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.pollForFetches(KafkaConsumer.java:1272)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1233)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1206)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doPoll(KafkaMessageListenerContainer.java:1410)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1249)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1161)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:46:41.023Z","appMessage":"Consumer exception","class":"org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"ERROR","exception":"java.lang.IllegalStateException: This error handler cannot process 'SerializationException's directly; please consider configuring an 'ErrorHandlingDeserializer' in the value and/or key deserializer\r\n\tat org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:194)\r\n\tat org.springframework.kafka.listener.SeekToCurrentErrorHandler.handle(SeekToCurrentErrorHandler.java:112)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.handleConsumerException(KafkaMessageListenerContainer.java:1599)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1210)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Error deserializing key/value for partition customer-topic-2-0 at offset 0. If needed, please seek past the record to continue consumption.\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Can't deserialize data [[104, 105, 32, 116, 104, 101, 114, 101]] from topic [customer-topic-2]\r\nCaused by: com.fasterxml.jackson.core.JsonParseException: Unrecognized token 'hi': was expecting (JSON String, Number, Array, Object or token 'null', 'true' or 'false')\n at [Source: (byte[])\"hi there\"; line: 1, column: 4]\r\n\tat com.fasterxml.jackson.core.JsonParser._constructError(JsonParser.java:2337)\r\n\tat com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(ParserMinimalBase.java:720)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportInvalidToken(UTF8StreamJsonParser.java:3593)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleUnexpectedValue(UTF8StreamJsonParser.java:2688)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._nextTokenNotInObject(UTF8StreamJsonParser.java:870)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextToken(UTF8StreamJsonParser.java:762)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._initForReading(ObjectReader.java:355)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._bindAndClose(ObjectReader.java:2023)\r\n\tat com.fasterxml.jackson.databind.ObjectReader.readValue(ObjectReader.java:1528)\r\n\tat org.springframework.kafka.support.serializer.JsonDeserializer.deserialize(JsonDeserializer.java:534)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.parseRecord(Fetcher.java:1387)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.access$3400(Fetcher.java:133)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.fetchRecords(Fetcher.java:1618)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.access$1700(Fetcher.java:1454)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchRecords(Fetcher.java:687)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchedRecords(Fetcher.java:638)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.pollForFetches(KafkaConsumer.java:1272)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1233)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1206)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doPoll(KafkaMessageListenerContainer.java:1410)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1249)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1161)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:46:41.028Z","appMessage":"Consumer exception","class":"org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"ERROR","exception":"java.lang.IllegalStateException: This error handler cannot process 'SerializationException's directly; please consider configuring an 'ErrorHandlingDeserializer' in the value and/or key deserializer\r\n\tat org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:194)\r\n\tat org.springframework.kafka.listener.SeekToCurrentErrorHandler.handle(SeekToCurrentErrorHandler.java:112)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.handleConsumerException(KafkaMessageListenerContainer.java:1599)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1210)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Error deserializing key/value for partition customer-topic-2-0 at offset 0. If needed, please seek past the record to continue consumption.\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Can't deserialize data [[104, 105, 32, 116, 104, 101, 114, 101]] from topic [customer-topic-2]\r\nCaused by: com.fasterxml.jackson.core.JsonParseException: Unrecognized token 'hi': was expecting (JSON String, Number, Array, Object or token 'null', 'true' or 'false')\n at [Source: (byte[])\"hi there\"; line: 1, column: 4]\r\n\tat com.fasterxml.jackson.core.JsonParser._constructError(JsonParser.java:2337)\r\n\tat com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(ParserMinimalBase.java:720)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportInvalidToken(UTF8StreamJsonParser.java:3593)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleUnexpectedValue(UTF8StreamJsonParser.java:2688)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._nextTokenNotInObject(UTF8StreamJsonParser.java:870)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextToken(UTF8StreamJsonParser.java:762)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._initForReading(ObjectReader.java:355)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._bindAndClose(ObjectReader.java:2023)\r\n\tat com.fasterxml.jackson.databind.ObjectReader.readValue(ObjectReader.java:1528)\r\n\tat org.springframework.kafka.support.serializer.JsonDeserializer.deserialize(JsonDeserializer.java:534)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.parseRecord(Fetcher.java:1387)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.access$3400(Fetcher.java:133)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.fetchRecords(Fetcher.java:1618)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.access$1700(Fetcher.java:1454)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchRecords(Fetcher.java:687)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchedRecords(Fetcher.java:638)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.pollForFetches(KafkaConsumer.java:1272)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1233)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1206)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doPoll(KafkaMessageListenerContainer.java:1410)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1249)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1161)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:46:41.032Z","appMessage":"Consumer exception","class":"org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"ERROR","exception":"java.lang.IllegalStateException: This error handler cannot process 'SerializationException's directly; please consider configuring an 'ErrorHandlingDeserializer' in the value and/or key deserializer\r\n\tat org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:194)\r\n\tat org.springframework.kafka.listener.SeekToCurrentErrorHandler.handle(SeekToCurrentErrorHandler.java:112)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.handleConsumerException(KafkaMessageListenerContainer.java:1599)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1210)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Error deserializing key/value for partition customer-topic-2-0 at offset 0. If needed, please seek past the record to continue consumption.\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Can't deserialize data [[104, 105, 32, 116, 104, 101, 114, 101]] from topic [customer-topic-2]\r\nCaused by: com.fasterxml.jackson.core.JsonParseException: Unrecognized token 'hi': was expecting (JSON String, Number, Array, Object or token 'null', 'true' or 'false')\n at [Source: (byte[])\"hi there\"; line: 1, column: 4]\r\n\tat com.fasterxml.jackson.core.JsonParser._constructError(JsonParser.java:2337)\r\n\tat com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(ParserMinimalBase.java:720)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportInvalidToken(UTF8StreamJsonParser.java:3593)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleUnexpectedValue(UTF8StreamJsonParser.java:2688)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._nextTokenNotInObject(UTF8StreamJsonParser.java:870)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextToken(UTF8StreamJsonParser.java:762)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._initForReading(ObjectReader.java:355)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._bindAndClose(ObjectReader.java:2023)\r\n\tat com.fasterxml.jackson.databind.ObjectReader.readValue(ObjectReader.java:1528)\r\n\tat org.springframework.kafka.support.serializer.JsonDeserializer.deserialize(JsonDeserializer.java:534)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.parseRecord(Fetcher.java:1387)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.access$3400(Fetcher.java:133)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.fetchRecords(Fetcher.java:1618)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.access$1700(Fetcher.java:1454)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchRecords(Fetcher.java:687)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchedRecords(Fetcher.java:638)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.pollForFetches(KafkaConsumer.java:1272)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1233)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1206)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doPoll(KafkaMessageListenerContainer.java:1410)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1249)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1161)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:46:41.036Z","appMessage":"Consumer exception","class":"org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"ERROR","exception":"java.lang.IllegalStateException: This error handler cannot process 'SerializationException's directly; please consider configuring an 'ErrorHandlingDeserializer' in the value and/or key deserializer\r\n\tat org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:194)\r\n\tat org.springframework.kafka.listener.SeekToCurrentErrorHandler.handle(SeekToCurrentErrorHandler.java:112)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.handleConsumerException(KafkaMessageListenerContainer.java:1599)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1210)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Error deserializing key/value for partition customer-topic-2-0 at offset 0. If needed, please seek past the record to continue consumption.\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Can't deserialize data [[104, 105, 32, 116, 104, 101, 114, 101]] from topic [customer-topic-2]\r\nCaused by: com.fasterxml.jackson.core.JsonParseException: Unrecognized token 'hi': was expecting (JSON String, Number, Array, Object or token 'null', 'true' or 'false')\n at [Source: (byte[])\"hi there\"; line: 1, column: 4]\r\n\tat com.fasterxml.jackson.core.JsonParser._constructError(JsonParser.java:2337)\r\n\tat com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(ParserMinimalBase.java:720)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportInvalidToken(UTF8StreamJsonParser.java:3593)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleUnexpectedValue(UTF8StreamJsonParser.java:2688)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._nextTokenNotInObject(UTF8StreamJsonParser.java:870)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextToken(UTF8StreamJsonParser.java:762)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._initForReading(ObjectReader.java:355)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._bindAndClose(ObjectReader.java:2023)\r\n\tat com.fasterxml.jackson.databind.ObjectReader.readValue(ObjectReader.java:1528)\r\n\tat org.springframework.kafka.support.serializer.JsonDeserializer.deserialize(JsonDeserializer.java:534)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.parseRecord(Fetcher.java:1387)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.access$3400(Fetcher.java:133)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.fetchRecords(Fetcher.java:1618)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.access$1700(Fetcher.java:1454)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchRecords(Fetcher.java:687)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchedRecords(Fetcher.java:638)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.pollForFetches(KafkaConsumer.java:1272)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1233)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1206)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doPoll(KafkaMessageListenerContainer.java:1410)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1249)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1161)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:46:41.041Z","appMessage":"Consumer exception","class":"org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"ERROR","exception":"java.lang.IllegalStateException: This error handler cannot process 'SerializationException's directly; please consider configuring an 'ErrorHandlingDeserializer' in the value and/or key deserializer\r\n\tat org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:194)\r\n\tat org.springframework.kafka.listener.SeekToCurrentErrorHandler.handle(SeekToCurrentErrorHandler.java:112)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.handleConsumerException(KafkaMessageListenerContainer.java:1599)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1210)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Error deserializing key/value for partition customer-topic-2-0 at offset 0. If needed, please seek past the record to continue consumption.\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Can't deserialize data [[104, 105, 32, 116, 104, 101, 114, 101]] from topic [customer-topic-2]\r\nCaused by: com.fasterxml.jackson.core.JsonParseException: Unrecognized token 'hi': was expecting (JSON String, Number, Array, Object or token 'null', 'true' or 'false')\n at [Source: (byte[])\"hi there\"; line: 1, column: 4]\r\n\tat com.fasterxml.jackson.core.JsonParser._constructError(JsonParser.java:2337)\r\n\tat com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(ParserMinimalBase.java:720)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportInvalidToken(UTF8StreamJsonParser.java:3593)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleUnexpectedValue(UTF8StreamJsonParser.java:2688)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._nextTokenNotInObject(UTF8StreamJsonParser.java:870)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextToken(UTF8StreamJsonParser.java:762)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._initForReading(ObjectReader.java:355)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._bindAndClose(ObjectReader.java:2023)\r\n\tat com.fasterxml.jackson.databind.ObjectReader.readValue(ObjectReader.java:1528)\r\n\tat org.springframework.kafka.support.serializer.JsonDeserializer.deserialize(JsonDeserializer.java:534)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.parseRecord(Fetcher.java:1387)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.access$3400(Fetcher.java:133)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.fetchRecords(Fetcher.java:1618)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.access$1700(Fetcher.java:1454)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchRecords(Fetcher.java:687)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchedRecords(Fetcher.java:638)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.pollForFetches(KafkaConsumer.java:1272)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1233)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1206)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doPoll(KafkaMessageListenerContainer.java:1410)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1249)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1161)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:46:41.045Z","appMessage":"Consumer exception","class":"org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"ERROR","exception":"java.lang.IllegalStateException: This error handler cannot process 'SerializationException's directly; please consider configuring an 'ErrorHandlingDeserializer' in the value and/or key deserializer\r\n\tat org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:194)\r\n\tat org.springframework.kafka.listener.SeekToCurrentErrorHandler.handle(SeekToCurrentErrorHandler.java:112)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.handleConsumerException(KafkaMessageListenerContainer.java:1599)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1210)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Error deserializing key/value for partition customer-topic-2-0 at offset 0. If needed, please seek past the record to continue consumption.\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Can't deserialize data [[104, 105, 32, 116, 104, 101, 114, 101]] from topic [customer-topic-2]\r\nCaused by: com.fasterxml.jackson.core.JsonParseException: Unrecognized token 'hi': was expecting (JSON String, Number, Array, Object or token 'null', 'true' or 'false')\n at [Source: (byte[])\"hi there\"; line: 1, column: 4]\r\n\tat com.fasterxml.jackson.core.JsonParser._constructError(JsonParser.java:2337)\r\n\tat com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(ParserMinimalBase.java:720)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportInvalidToken(UTF8StreamJsonParser.java:3593)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleUnexpectedValue(UTF8StreamJsonParser.java:2688)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._nextTokenNotInObject(UTF8StreamJsonParser.java:870)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextToken(UTF8StreamJsonParser.java:762)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._initForReading(ObjectReader.java:355)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._bindAndClose(ObjectReader.java:2023)\r\n\tat com.fasterxml.jackson.databind.ObjectReader.readValue(ObjectReader.java:1528)\r\n\tat org.springframework.kafka.support.serializer.JsonDeserializer.deserialize(JsonDeserializer.java:534)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.parseRecord(Fetcher.java:1387)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.access$3400(Fetcher.java:133)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.fetchRecords(Fetcher.java:1618)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.access$1700(Fetcher.java:1454)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchRecords(Fetcher.java:687)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchedRecords(Fetcher.java:638)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.pollForFetches(KafkaConsumer.java:1272)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1233)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1206)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doPoll(KafkaMessageListenerContainer.java:1410)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1249)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1161)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:46:41.050Z","appMessage":"Consumer exception","class":"org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"ERROR","exception":"java.lang.IllegalStateException: This error handler cannot process 'SerializationException's directly; please consider configuring an 'ErrorHandlingDeserializer' in the value and/or key deserializer\r\n\tat org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:194)\r\n\tat org.springframework.kafka.listener.SeekToCurrentErrorHandler.handle(SeekToCurrentErrorHandler.java:112)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.handleConsumerException(KafkaMessageListenerContainer.java:1599)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1210)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Error deserializing key/value for partition customer-topic-2-0 at offset 0. If needed, please seek past the record to continue consumption.\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Can't deserialize data [[104, 105, 32, 116, 104, 101, 114, 101]] from topic [customer-topic-2]\r\nCaused by: com.fasterxml.jackson.core.JsonParseException: Unrecognized token 'hi': was expecting (JSON String, Number, Array, Object or token 'null', 'true' or 'false')\n at [Source: (byte[])\"hi there\"; line: 1, column: 4]\r\n\tat com.fasterxml.jackson.core.JsonParser._constructError(JsonParser.java:2337)\r\n\tat com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(ParserMinimalBase.java:720)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportInvalidToken(UTF8StreamJsonParser.java:3593)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleUnexpectedValue(UTF8StreamJsonParser.java:2688)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._nextTokenNotInObject(UTF8StreamJsonParser.java:870)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextToken(UTF8StreamJsonParser.java:762)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._initForReading(ObjectReader.java:355)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._bindAndClose(ObjectReader.java:2023)\r\n\tat com.fasterxml.jackson.databind.ObjectReader.readValue(ObjectReader.java:1528)\r\n\tat org.springframework.kafka.support.serializer.JsonDeserializer.deserialize(JsonDeserializer.java:534)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.parseRecord(Fetcher.java:1387)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.access$3400(Fetcher.java:133)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.fetchRecords(Fetcher.java:1618)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.access$1700(Fetcher.java:1454)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchRecords(Fetcher.java:687)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchedRecords(Fetcher.java:638)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.pollForFetches(KafkaConsumer.java:1272)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1233)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1206)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doPoll(KafkaMessageListenerContainer.java:1410)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1249)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1161)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:46:41.054Z","appMessage":"Consumer exception","class":"org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"ERROR","exception":"java.lang.IllegalStateException: This error handler cannot process 'SerializationException's directly; please consider configuring an 'ErrorHandlingDeserializer' in the value and/or key deserializer\r\n\tat org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:194)\r\n\tat org.springframework.kafka.listener.SeekToCurrentErrorHandler.handle(SeekToCurrentErrorHandler.java:112)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.handleConsumerException(KafkaMessageListenerContainer.java:1599)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1210)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Error deserializing key/value for partition customer-topic-2-0 at offset 0. If needed, please seek past the record to continue consumption.\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Can't deserialize data [[104, 105, 32, 116, 104, 101, 114, 101]] from topic [customer-topic-2]\r\nCaused by: com.fasterxml.jackson.core.JsonParseException: Unrecognized token 'hi': was expecting (JSON String, Number, Array, Object or token 'null', 'true' or 'false')\n at [Source: (byte[])\"hi there\"; line: 1, column: 4]\r\n\tat com.fasterxml.jackson.core.JsonParser._constructError(JsonParser.java:2337)\r\n\tat com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(ParserMinimalBase.java:720)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportInvalidToken(UTF8StreamJsonParser.java:3593)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleUnexpectedValue(UTF8StreamJsonParser.java:2688)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._nextTokenNotInObject(UTF8StreamJsonParser.java:870)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextToken(UTF8StreamJsonParser.java:762)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._initForReading(ObjectReader.java:355)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._bindAndClose(ObjectReader.java:2023)\r\n\tat com.fasterxml.jackson.databind.ObjectReader.readValue(ObjectReader.java:1528)\r\n\tat org.springframework.kafka.support.serializer.JsonDeserializer.deserialize(JsonDeserializer.java:534)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.parseRecord(Fetcher.java:1387)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.access$3400(Fetcher.java:133)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.fetchRecords(Fetcher.java:1618)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.access$1700(Fetcher.java:1454)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchRecords(Fetcher.java:687)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchedRecords(Fetcher.java:638)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.pollForFetches(KafkaConsumer.java:1272)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1233)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1206)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doPoll(KafkaMessageListenerContainer.java:1410)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1249)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1161)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:46:41.059Z","appMessage":"Consumer exception","class":"org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"ERROR","exception":"java.lang.IllegalStateException: This error handler cannot process 'SerializationException's directly; please consider configuring an 'ErrorHandlingDeserializer' in the value and/or key deserializer\r\n\tat org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:194)\r\n\tat org.springframework.kafka.listener.SeekToCurrentErrorHandler.handle(SeekToCurrentErrorHandler.java:112)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.handleConsumerException(KafkaMessageListenerContainer.java:1599)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1210)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Error deserializing key/value for partition customer-topic-2-0 at offset 0. If needed, please seek past the record to continue consumption.\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Can't deserialize data [[104, 105, 32, 116, 104, 101, 114, 101]] from topic [customer-topic-2]\r\nCaused by: com.fasterxml.jackson.core.JsonParseException: Unrecognized token 'hi': was expecting (JSON String, Number, Array, Object or token 'null', 'true' or 'false')\n at [Source: (byte[])\"hi there\"; line: 1, column: 4]\r\n\tat com.fasterxml.jackson.core.JsonParser._constructError(JsonParser.java:2337)\r\n\tat com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(ParserMinimalBase.java:720)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportInvalidToken(UTF8StreamJsonParser.java:3593)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleUnexpectedValue(UTF8StreamJsonParser.java:2688)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._nextTokenNotInObject(UTF8StreamJsonParser.java:870)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextToken(UTF8StreamJsonParser.java:762)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._initForReading(ObjectReader.java:355)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._bindAndClose(ObjectReader.java:2023)\r\n\tat com.fasterxml.jackson.databind.ObjectReader.readValue(ObjectReader.java:1528)\r\n\tat org.springframework.kafka.support.serializer.JsonDeserializer.deserialize(JsonDeserializer.java:534)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.parseRecord(Fetcher.java:1387)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.access$3400(Fetcher.java:133)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.fetchRecords(Fetcher.java:1618)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.access$1700(Fetcher.java:1454)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchRecords(Fetcher.java:687)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchedRecords(Fetcher.java:638)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.pollForFetches(KafkaConsumer.java:1272)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1233)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1206)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doPoll(KafkaMessageListenerContainer.java:1410)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1249)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1161)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:46:41.063Z","appMessage":"Consumer exception","class":"org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"ERROR","exception":"java.lang.IllegalStateException: This error handler cannot process 'SerializationException's directly; please consider configuring an 'ErrorHandlingDeserializer' in the value and/or key deserializer\r\n\tat org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:194)\r\n\tat org.springframework.kafka.listener.SeekToCurrentErrorHandler.handle(SeekToCurrentErrorHandler.java:112)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.handleConsumerException(KafkaMessageListenerContainer.java:1599)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1210)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Error deserializing key/value for partition customer-topic-2-0 at offset 0. If needed, please seek past the record to continue consumption.\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Can't deserialize data [[104, 105, 32, 116, 104, 101, 114, 101]] from topic [customer-topic-2]\r\nCaused by: com.fasterxml.jackson.core.JsonParseException: Unrecognized token 'hi': was expecting (JSON String, Number, Array, Object or token 'null', 'true' or 'false')\n at [Source: (byte[])\"hi there\"; line: 1, column: 4]\r\n\tat com.fasterxml.jackson.core.JsonParser._constructError(JsonParser.java:2337)\r\n\tat com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(ParserMinimalBase.java:720)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportInvalidToken(UTF8StreamJsonParser.java:3593)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleUnexpectedValue(UTF8StreamJsonParser.java:2688)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._nextTokenNotInObject(UTF8StreamJsonParser.java:870)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextToken(UTF8StreamJsonParser.java:762)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._initForReading(ObjectReader.java:355)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._bindAndClose(ObjectReader.java:2023)\r\n\tat com.fasterxml.jackson.databind.ObjectReader.readValue(ObjectReader.java:1528)\r\n\tat org.springframework.kafka.support.serializer.JsonDeserializer.deserialize(JsonDeserializer.java:534)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.parseRecord(Fetcher.java:1387)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.access$3400(Fetcher.java:133)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.fetchRecords(Fetcher.java:1618)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.access$1700(Fetcher.java:1454)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchRecords(Fetcher.java:687)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchedRecords(Fetcher.java:638)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.pollForFetches(KafkaConsumer.java:1272)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1233)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1206)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doPoll(KafkaMessageListenerContainer.java:1410)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1249)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1161)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:46:41.068Z","appMessage":"Consumer exception","class":"org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"ERROR","exception":"java.lang.IllegalStateException: This error handler cannot process 'SerializationException's directly; please consider configuring an 'ErrorHandlingDeserializer' in the value and/or key deserializer\r\n\tat org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:194)\r\n\tat org.springframework.kafka.listener.SeekToCurrentErrorHandler.handle(SeekToCurrentErrorHandler.java:112)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.handleConsumerException(KafkaMessageListenerContainer.java:1599)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1210)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Error deserializing key/value for partition customer-topic-2-0 at offset 0. If needed, please seek past the record to continue consumption.\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Can't deserialize data [[104, 105, 32, 116, 104, 101, 114, 101]] from topic [customer-topic-2]\r\nCaused by: com.fasterxml.jackson.core.JsonParseException: Unrecognized token 'hi': was expecting (JSON String, Number, Array, Object or token 'null', 'true' or 'false')\n at [Source: (byte[])\"hi there\"; line: 1, column: 4]\r\n\tat com.fasterxml.jackson.core.JsonParser._constructError(JsonParser.java:2337)\r\n\tat com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(ParserMinimalBase.java:720)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportInvalidToken(UTF8StreamJsonParser.java:3593)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleUnexpectedValue(UTF8StreamJsonParser.java:2688)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._nextTokenNotInObject(UTF8StreamJsonParser.java:870)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextToken(UTF8StreamJsonParser.java:762)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._initForReading(ObjectReader.java:355)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._bindAndClose(ObjectReader.java:2023)\r\n\tat com.fasterxml.jackson.databind.ObjectReader.readValue(ObjectReader.java:1528)\r\n\tat org.springframework.kafka.support.serializer.JsonDeserializer.deserialize(JsonDeserializer.java:534)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.parseRecord(Fetcher.java:1387)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.access$3400(Fetcher.java:133)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.fetchRecords(Fetcher.java:1618)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.access$1700(Fetcher.java:1454)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchRecords(Fetcher.java:687)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchedRecords(Fetcher.java:638)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.pollForFetches(KafkaConsumer.java:1272)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1233)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1206)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doPoll(KafkaMessageListenerContainer.java:1410)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1249)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1161)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:46:41.073Z","appMessage":"Consumer exception","class":"org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"ERROR","exception":"java.lang.IllegalStateException: This error handler cannot process 'SerializationException's directly; please consider configuring an 'ErrorHandlingDeserializer' in the value and/or key deserializer\r\n\tat org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:194)\r\n\tat org.springframework.kafka.listener.SeekToCurrentErrorHandler.handle(SeekToCurrentErrorHandler.java:112)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.handleConsumerException(KafkaMessageListenerContainer.java:1599)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1210)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Error deserializing key/value for partition customer-topic-2-0 at offset 0. If needed, please seek past the record to continue consumption.\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Can't deserialize data [[104, 105, 32, 116, 104, 101, 114, 101]] from topic [customer-topic-2]\r\nCaused by: com.fasterxml.jackson.core.JsonParseException: Unrecognized token 'hi': was expecting (JSON String, Number, Array, Object or token 'null', 'true' or 'false')\n at [Source: (byte[])\"hi there\"; line: 1, column: 4]\r\n\tat com.fasterxml.jackson.core.JsonParser._constructError(JsonParser.java:2337)\r\n\tat com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(ParserMinimalBase.java:720)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportInvalidToken(UTF8StreamJsonParser.java:3593)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleUnexpectedValue(UTF8StreamJsonParser.java:2688)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._nextTokenNotInObject(UTF8StreamJsonParser.java:870)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextToken(UTF8StreamJsonParser.java:762)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._initForReading(ObjectReader.java:355)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._bindAndClose(ObjectReader.java:2023)\r\n\tat com.fasterxml.jackson.databind.ObjectReader.readValue(ObjectReader.java:1528)\r\n\tat org.springframework.kafka.support.serializer.JsonDeserializer.deserialize(JsonDeserializer.java:534)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.parseRecord(Fetcher.java:1387)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.access$3400(Fetcher.java:133)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.fetchRecords(Fetcher.java:1618)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.access$1700(Fetcher.java:1454)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchRecords(Fetcher.java:687)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchedRecords(Fetcher.java:638)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.pollForFetches(KafkaConsumer.java:1272)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1233)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1206)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doPoll(KafkaMessageListenerContainer.java:1410)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1249)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1161)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:46:41.078Z","appMessage":"Consumer exception","class":"org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"ERROR","exception":"java.lang.IllegalStateException: This error handler cannot process 'SerializationException's directly; please consider configuring an 'ErrorHandlingDeserializer' in the value and/or key deserializer\r\n\tat org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:194)\r\n\tat org.springframework.kafka.listener.SeekToCurrentErrorHandler.handle(SeekToCurrentErrorHandler.java:112)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.handleConsumerException(KafkaMessageListenerContainer.java:1599)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1210)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Error deserializing key/value for partition customer-topic-2-0 at offset 0. If needed, please seek past the record to continue consumption.\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Can't deserialize data [[104, 105, 32, 116, 104, 101, 114, 101]] from topic [customer-topic-2]\r\nCaused by: com.fasterxml.jackson.core.JsonParseException: Unrecognized token 'hi': was expecting (JSON String, Number, Array, Object or token 'null', 'true' or 'false')\n at [Source: (byte[])\"hi there\"; line: 1, column: 4]\r\n\tat com.fasterxml.jackson.core.JsonParser._constructError(JsonParser.java:2337)\r\n\tat com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(ParserMinimalBase.java:720)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportInvalidToken(UTF8StreamJsonParser.java:3593)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleUnexpectedValue(UTF8StreamJsonParser.java:2688)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._nextTokenNotInObject(UTF8StreamJsonParser.java:870)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextToken(UTF8StreamJsonParser.java:762)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._initForReading(ObjectReader.java:355)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._bindAndClose(ObjectReader.java:2023)\r\n\tat com.fasterxml.jackson.databind.ObjectReader.readValue(ObjectReader.java:1528)\r\n\tat org.springframework.kafka.support.serializer.JsonDeserializer.deserialize(JsonDeserializer.java:534)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.parseRecord(Fetcher.java:1387)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.access$3400(Fetcher.java:133)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.fetchRecords(Fetcher.java:1618)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.access$1700(Fetcher.java:1454)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchRecords(Fetcher.java:687)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchedRecords(Fetcher.java:638)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.pollForFetches(KafkaConsumer.java:1272)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1233)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1206)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doPoll(KafkaMessageListenerContainer.java:1410)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1249)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1161)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:46:41.083Z","appMessage":"Consumer exception","class":"org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"ERROR","exception":"java.lang.IllegalStateException: This error handler cannot process 'SerializationException's directly; please consider configuring an 'ErrorHandlingDeserializer' in the value and/or key deserializer\r\n\tat org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:194)\r\n\tat org.springframework.kafka.listener.SeekToCurrentErrorHandler.handle(SeekToCurrentErrorHandler.java:112)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.handleConsumerException(KafkaMessageListenerContainer.java:1599)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1210)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Error deserializing key/value for partition customer-topic-2-0 at offset 0. If needed, please seek past the record to continue consumption.\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Can't deserialize data [[104, 105, 32, 116, 104, 101, 114, 101]] from topic [customer-topic-2]\r\nCaused by: com.fasterxml.jackson.core.JsonParseException: Unrecognized token 'hi': was expecting (JSON String, Number, Array, Object or token 'null', 'true' or 'false')\n at [Source: (byte[])\"hi there\"; line: 1, column: 4]\r\n\tat com.fasterxml.jackson.core.JsonParser._constructError(JsonParser.java:2337)\r\n\tat com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(ParserMinimalBase.java:720)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportInvalidToken(UTF8StreamJsonParser.java:3593)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleUnexpectedValue(UTF8StreamJsonParser.java:2688)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._nextTokenNotInObject(UTF8StreamJsonParser.java:870)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextToken(UTF8StreamJsonParser.java:762)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._initForReading(ObjectReader.java:355)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._bindAndClose(ObjectReader.java:2023)\r\n\tat com.fasterxml.jackson.databind.ObjectReader.readValue(ObjectReader.java:1528)\r\n\tat org.springframework.kafka.support.serializer.JsonDeserializer.deserialize(JsonDeserializer.java:534)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.parseRecord(Fetcher.java:1387)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.access$3400(Fetcher.java:133)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.fetchRecords(Fetcher.java:1618)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.access$1700(Fetcher.java:1454)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchRecords(Fetcher.java:687)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchedRecords(Fetcher.java:638)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.pollForFetches(KafkaConsumer.java:1272)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1233)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1206)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doPoll(KafkaMessageListenerContainer.java:1410)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1249)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1161)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:46:41.088Z","appMessage":"Consumer exception","class":"org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"ERROR","exception":"java.lang.IllegalStateException: This error handler cannot process 'SerializationException's directly; please consider configuring an 'ErrorHandlingDeserializer' in the value and/or key deserializer\r\n\tat org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:194)\r\n\tat org.springframework.kafka.listener.SeekToCurrentErrorHandler.handle(SeekToCurrentErrorHandler.java:112)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.handleConsumerException(KafkaMessageListenerContainer.java:1599)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1210)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Error deserializing key/value for partition customer-topic-2-0 at offset 0. If needed, please seek past the record to continue consumption.\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Can't deserialize data [[104, 105, 32, 116, 104, 101, 114, 101]] from topic [customer-topic-2]\r\nCaused by: com.fasterxml.jackson.core.JsonParseException: Unrecognized token 'hi': was expecting (JSON String, Number, Array, Object or token 'null', 'true' or 'false')\n at [Source: (byte[])\"hi there\"; line: 1, column: 4]\r\n\tat com.fasterxml.jackson.core.JsonParser._constructError(JsonParser.java:2337)\r\n\tat com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(ParserMinimalBase.java:720)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportInvalidToken(UTF8StreamJsonParser.java:3593)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleUnexpectedValue(UTF8StreamJsonParser.java:2688)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._nextTokenNotInObject(UTF8StreamJsonParser.java:870)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextToken(UTF8StreamJsonParser.java:762)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._initForReading(ObjectReader.java:355)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._bindAndClose(ObjectReader.java:2023)\r\n\tat com.fasterxml.jackson.databind.ObjectReader.readValue(ObjectReader.java:1528)\r\n\tat org.springframework.kafka.support.serializer.JsonDeserializer.deserialize(JsonDeserializer.java:534)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.parseRecord(Fetcher.java:1387)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.access$3400(Fetcher.java:133)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.fetchRecords(Fetcher.java:1618)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.access$1700(Fetcher.java:1454)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchRecords(Fetcher.java:687)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchedRecords(Fetcher.java:638)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.pollForFetches(KafkaConsumer.java:1272)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1233)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1206)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doPoll(KafkaMessageListenerContainer.java:1410)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1249)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1161)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:46:41.093Z","appMessage":"Consumer exception","class":"org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"ERROR","exception":"java.lang.IllegalStateException: This error handler cannot process 'SerializationException's directly; please consider configuring an 'ErrorHandlingDeserializer' in the value and/or key deserializer\r\n\tat org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:194)\r\n\tat org.springframework.kafka.listener.SeekToCurrentErrorHandler.handle(SeekToCurrentErrorHandler.java:112)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.handleConsumerException(KafkaMessageListenerContainer.java:1599)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1210)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Error deserializing key/value for partition customer-topic-2-0 at offset 0. If needed, please seek past the record to continue consumption.\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Can't deserialize data [[104, 105, 32, 116, 104, 101, 114, 101]] from topic [customer-topic-2]\r\nCaused by: com.fasterxml.jackson.core.JsonParseException: Unrecognized token 'hi': was expecting (JSON String, Number, Array, Object or token 'null', 'true' or 'false')\n at [Source: (byte[])\"hi there\"; line: 1, column: 4]\r\n\tat com.fasterxml.jackson.core.JsonParser._constructError(JsonParser.java:2337)\r\n\tat com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(ParserMinimalBase.java:720)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportInvalidToken(UTF8StreamJsonParser.java:3593)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleUnexpectedValue(UTF8StreamJsonParser.java:2688)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._nextTokenNotInObject(UTF8StreamJsonParser.java:870)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextToken(UTF8StreamJsonParser.java:762)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._initForReading(ObjectReader.java:355)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._bindAndClose(ObjectReader.java:2023)\r\n\tat com.fasterxml.jackson.databind.ObjectReader.readValue(ObjectReader.java:1528)\r\n\tat org.springframework.kafka.support.serializer.JsonDeserializer.deserialize(JsonDeserializer.java:534)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.parseRecord(Fetcher.java:1387)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.access$3400(Fetcher.java:133)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.fetchRecords(Fetcher.java:1618)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.access$1700(Fetcher.java:1454)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchRecords(Fetcher.java:687)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchedRecords(Fetcher.java:638)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.pollForFetches(KafkaConsumer.java:1272)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1233)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1206)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doPoll(KafkaMessageListenerContainer.java:1410)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1249)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1161)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:46:41.097Z","appMessage":"Consumer exception","class":"org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"ERROR","exception":"java.lang.IllegalStateException: This error handler cannot process 'SerializationException's directly; please consider configuring an 'ErrorHandlingDeserializer' in the value and/or key deserializer\r\n\tat org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:194)\r\n\tat org.springframework.kafka.listener.SeekToCurrentErrorHandler.handle(SeekToCurrentErrorHandler.java:112)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.handleConsumerException(KafkaMessageListenerContainer.java:1599)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1210)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Error deserializing key/value for partition customer-topic-2-0 at offset 0. If needed, please seek past the record to continue consumption.\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Can't deserialize data [[104, 105, 32, 116, 104, 101, 114, 101]] from topic [customer-topic-2]\r\nCaused by: com.fasterxml.jackson.core.JsonParseException: Unrecognized token 'hi': was expecting (JSON String, Number, Array, Object or token 'null', 'true' or 'false')\n at [Source: (byte[])\"hi there\"; line: 1, column: 4]\r\n\tat com.fasterxml.jackson.core.JsonParser._constructError(JsonParser.java:2337)\r\n\tat com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(ParserMinimalBase.java:720)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportInvalidToken(UTF8StreamJsonParser.java:3593)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleUnexpectedValue(UTF8StreamJsonParser.java:2688)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._nextTokenNotInObject(UTF8StreamJsonParser.java:870)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextToken(UTF8StreamJsonParser.java:762)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._initForReading(ObjectReader.java:355)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._bindAndClose(ObjectReader.java:2023)\r\n\tat com.fasterxml.jackson.databind.ObjectReader.readValue(ObjectReader.java:1528)\r\n\tat org.springframework.kafka.support.serializer.JsonDeserializer.deserialize(JsonDeserializer.java:534)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.parseRecord(Fetcher.java:1387)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.access$3400(Fetcher.java:133)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.fetchRecords(Fetcher.java:1618)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.access$1700(Fetcher.java:1454)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchRecords(Fetcher.java:687)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchedRecords(Fetcher.java:638)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.pollForFetches(KafkaConsumer.java:1272)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1233)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1206)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doPoll(KafkaMessageListenerContainer.java:1410)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1249)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1161)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:46:41.102Z","appMessage":"Consumer exception","class":"org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"ERROR","exception":"java.lang.IllegalStateException: This error handler cannot process 'SerializationException's directly; please consider configuring an 'ErrorHandlingDeserializer' in the value and/or key deserializer\r\n\tat org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:194)\r\n\tat org.springframework.kafka.listener.SeekToCurrentErrorHandler.handle(SeekToCurrentErrorHandler.java:112)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.handleConsumerException(KafkaMessageListenerContainer.java:1599)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1210)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Error deserializing key/value for partition customer-topic-2-0 at offset 0. If needed, please seek past the record to continue consumption.\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Can't deserialize data [[104, 105, 32, 116, 104, 101, 114, 101]] from topic [customer-topic-2]\r\nCaused by: com.fasterxml.jackson.core.JsonParseException: Unrecognized token 'hi': was expecting (JSON String, Number, Array, Object or token 'null', 'true' or 'false')\n at [Source: (byte[])\"hi there\"; line: 1, column: 4]\r\n\tat com.fasterxml.jackson.core.JsonParser._constructError(JsonParser.java:2337)\r\n\tat com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(ParserMinimalBase.java:720)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportInvalidToken(UTF8StreamJsonParser.java:3593)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleUnexpectedValue(UTF8StreamJsonParser.java:2688)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._nextTokenNotInObject(UTF8StreamJsonParser.java:870)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextToken(UTF8StreamJsonParser.java:762)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._initForReading(ObjectReader.java:355)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._bindAndClose(ObjectReader.java:2023)\r\n\tat com.fasterxml.jackson.databind.ObjectReader.readValue(ObjectReader.java:1528)\r\n\tat org.springframework.kafka.support.serializer.JsonDeserializer.deserialize(JsonDeserializer.java:534)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.parseRecord(Fetcher.java:1387)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.access$3400(Fetcher.java:133)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.fetchRecords(Fetcher.java:1618)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.access$1700(Fetcher.java:1454)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchRecords(Fetcher.java:687)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchedRecords(Fetcher.java:638)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.pollForFetches(KafkaConsumer.java:1272)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1233)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1206)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doPoll(KafkaMessageListenerContainer.java:1410)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1249)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1161)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:46:41.106Z","appMessage":"Consumer exception","class":"org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"ERROR","exception":"java.lang.IllegalStateException: This error handler cannot process 'SerializationException's directly; please consider configuring an 'ErrorHandlingDeserializer' in the value and/or key deserializer\r\n\tat org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:194)\r\n\tat org.springframework.kafka.listener.SeekToCurrentErrorHandler.handle(SeekToCurrentErrorHandler.java:112)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.handleConsumerException(KafkaMessageListenerContainer.java:1599)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1210)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Error deserializing key/value for partition customer-topic-2-0 at offset 0. If needed, please seek past the record to continue consumption.\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Can't deserialize data [[104, 105, 32, 116, 104, 101, 114, 101]] from topic [customer-topic-2]\r\nCaused by: com.fasterxml.jackson.core.JsonParseException: Unrecognized token 'hi': was expecting (JSON String, Number, Array, Object or token 'null', 'true' or 'false')\n at [Source: (byte[])\"hi there\"; line: 1, column: 4]\r\n\tat com.fasterxml.jackson.core.JsonParser._constructError(JsonParser.java:2337)\r\n\tat com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(ParserMinimalBase.java:720)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportInvalidToken(UTF8StreamJsonParser.java:3593)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleUnexpectedValue(UTF8StreamJsonParser.java:2688)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._nextTokenNotInObject(UTF8StreamJsonParser.java:870)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextToken(UTF8StreamJsonParser.java:762)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._initForReading(ObjectReader.java:355)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._bindAndClose(ObjectReader.java:2023)\r\n\tat com.fasterxml.jackson.databind.ObjectReader.readValue(ObjectReader.java:1528)\r\n\tat org.springframework.kafka.support.serializer.JsonDeserializer.deserialize(JsonDeserializer.java:534)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.parseRecord(Fetcher.java:1387)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.access$3400(Fetcher.java:133)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.fetchRecords(Fetcher.java:1618)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.access$1700(Fetcher.java:1454)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchRecords(Fetcher.java:687)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchedRecords(Fetcher.java:638)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.pollForFetches(KafkaConsumer.java:1272)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1233)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1206)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doPoll(KafkaMessageListenerContainer.java:1410)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1249)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1161)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:46:41.110Z","appMessage":"Consumer exception","class":"org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"ERROR","exception":"java.lang.IllegalStateException: This error handler cannot process 'SerializationException's directly; please consider configuring an 'ErrorHandlingDeserializer' in the value and/or key deserializer\r\n\tat org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:194)\r\n\tat org.springframework.kafka.listener.SeekToCurrentErrorHandler.handle(SeekToCurrentErrorHandler.java:112)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.handleConsumerException(KafkaMessageListenerContainer.java:1599)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1210)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Error deserializing key/value for partition customer-topic-2-0 at offset 0. If needed, please seek past the record to continue consumption.\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Can't deserialize data [[104, 105, 32, 116, 104, 101, 114, 101]] from topic [customer-topic-2]\r\nCaused by: com.fasterxml.jackson.core.JsonParseException: Unrecognized token 'hi': was expecting (JSON String, Number, Array, Object or token 'null', 'true' or 'false')\n at [Source: (byte[])\"hi there\"; line: 1, column: 4]\r\n\tat com.fasterxml.jackson.core.JsonParser._constructError(JsonParser.java:2337)\r\n\tat com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(ParserMinimalBase.java:720)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportInvalidToken(UTF8StreamJsonParser.java:3593)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleUnexpectedValue(UTF8StreamJsonParser.java:2688)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._nextTokenNotInObject(UTF8StreamJsonParser.java:870)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextToken(UTF8StreamJsonParser.java:762)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._initForReading(ObjectReader.java:355)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._bindAndClose(ObjectReader.java:2023)\r\n\tat com.fasterxml.jackson.databind.ObjectReader.readValue(ObjectReader.java:1528)\r\n\tat org.springframework.kafka.support.serializer.JsonDeserializer.deserialize(JsonDeserializer.java:534)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.parseRecord(Fetcher.java:1387)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.access$3400(Fetcher.java:133)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.fetchRecords(Fetcher.java:1618)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.access$1700(Fetcher.java:1454)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchRecords(Fetcher.java:687)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchedRecords(Fetcher.java:638)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.pollForFetches(KafkaConsumer.java:1272)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1233)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1206)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doPoll(KafkaMessageListenerContainer.java:1410)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1249)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1161)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:46:41.115Z","appMessage":"Consumer exception","class":"org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"ERROR","exception":"java.lang.IllegalStateException: This error handler cannot process 'SerializationException's directly; please consider configuring an 'ErrorHandlingDeserializer' in the value and/or key deserializer\r\n\tat org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:194)\r\n\tat org.springframework.kafka.listener.SeekToCurrentErrorHandler.handle(SeekToCurrentErrorHandler.java:112)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.handleConsumerException(KafkaMessageListenerContainer.java:1599)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1210)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Error deserializing key/value for partition customer-topic-2-0 at offset 0. If needed, please seek past the record to continue consumption.\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Can't deserialize data [[104, 105, 32, 116, 104, 101, 114, 101]] from topic [customer-topic-2]\r\nCaused by: com.fasterxml.jackson.core.JsonParseException: Unrecognized token 'hi': was expecting (JSON String, Number, Array, Object or token 'null', 'true' or 'false')\n at [Source: (byte[])\"hi there\"; line: 1, column: 4]\r\n\tat com.fasterxml.jackson.core.JsonParser._constructError(JsonParser.java:2337)\r\n\tat com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(ParserMinimalBase.java:720)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportInvalidToken(UTF8StreamJsonParser.java:3593)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleUnexpectedValue(UTF8StreamJsonParser.java:2688)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._nextTokenNotInObject(UTF8StreamJsonParser.java:870)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextToken(UTF8StreamJsonParser.java:762)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._initForReading(ObjectReader.java:355)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._bindAndClose(ObjectReader.java:2023)\r\n\tat com.fasterxml.jackson.databind.ObjectReader.readValue(ObjectReader.java:1528)\r\n\tat org.springframework.kafka.support.serializer.JsonDeserializer.deserialize(JsonDeserializer.java:534)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.parseRecord(Fetcher.java:1387)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.access$3400(Fetcher.java:133)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.fetchRecords(Fetcher.java:1618)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.access$1700(Fetcher.java:1454)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchRecords(Fetcher.java:687)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchedRecords(Fetcher.java:638)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.pollForFetches(KafkaConsumer.java:1272)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1233)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1206)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doPoll(KafkaMessageListenerContainer.java:1410)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1249)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1161)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:46:41.119Z","appMessage":"Consumer exception","class":"org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"ERROR","exception":"java.lang.IllegalStateException: This error handler cannot process 'SerializationException's directly; please consider configuring an 'ErrorHandlingDeserializer' in the value and/or key deserializer\r\n\tat org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:194)\r\n\tat org.springframework.kafka.listener.SeekToCurrentErrorHandler.handle(SeekToCurrentErrorHandler.java:112)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.handleConsumerException(KafkaMessageListenerContainer.java:1599)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1210)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Error deserializing key/value for partition customer-topic-2-0 at offset 0. If needed, please seek past the record to continue consumption.\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Can't deserialize data [[104, 105, 32, 116, 104, 101, 114, 101]] from topic [customer-topic-2]\r\nCaused by: com.fasterxml.jackson.core.JsonParseException: Unrecognized token 'hi': was expecting (JSON String, Number, Array, Object or token 'null', 'true' or 'false')\n at [Source: (byte[])\"hi there\"; line: 1, column: 4]\r\n\tat com.fasterxml.jackson.core.JsonParser._constructError(JsonParser.java:2337)\r\n\tat com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(ParserMinimalBase.java:720)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportInvalidToken(UTF8StreamJsonParser.java:3593)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleUnexpectedValue(UTF8StreamJsonParser.java:2688)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._nextTokenNotInObject(UTF8StreamJsonParser.java:870)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextToken(UTF8StreamJsonParser.java:762)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._initForReading(ObjectReader.java:355)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._bindAndClose(ObjectReader.java:2023)\r\n\tat com.fasterxml.jackson.databind.ObjectReader.readValue(ObjectReader.java:1528)\r\n\tat org.springframework.kafka.support.serializer.JsonDeserializer.deserialize(JsonDeserializer.java:534)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.parseRecord(Fetcher.java:1387)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.access$3400(Fetcher.java:133)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.fetchRecords(Fetcher.java:1618)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.access$1700(Fetcher.java:1454)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchRecords(Fetcher.java:687)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchedRecords(Fetcher.java:638)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.pollForFetches(KafkaConsumer.java:1272)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1233)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1206)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doPoll(KafkaMessageListenerContainer.java:1410)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1249)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1161)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:46:41.124Z","appMessage":"Consumer exception","class":"org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"ERROR","exception":"java.lang.IllegalStateException: This error handler cannot process 'SerializationException's directly; please consider configuring an 'ErrorHandlingDeserializer' in the value and/or key deserializer\r\n\tat org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:194)\r\n\tat org.springframework.kafka.listener.SeekToCurrentErrorHandler.handle(SeekToCurrentErrorHandler.java:112)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.handleConsumerException(KafkaMessageListenerContainer.java:1599)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1210)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Error deserializing key/value for partition customer-topic-2-0 at offset 0. If needed, please seek past the record to continue consumption.\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Can't deserialize data [[104, 105, 32, 116, 104, 101, 114, 101]] from topic [customer-topic-2]\r\nCaused by: com.fasterxml.jackson.core.JsonParseException: Unrecognized token 'hi': was expecting (JSON String, Number, Array, Object or token 'null', 'true' or 'false')\n at [Source: (byte[])\"hi there\"; line: 1, column: 4]\r\n\tat com.fasterxml.jackson.core.JsonParser._constructError(JsonParser.java:2337)\r\n\tat com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(ParserMinimalBase.java:720)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportInvalidToken(UTF8StreamJsonParser.java:3593)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleUnexpectedValue(UTF8StreamJsonParser.java:2688)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._nextTokenNotInObject(UTF8StreamJsonParser.java:870)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextToken(UTF8StreamJsonParser.java:762)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._initForReading(ObjectReader.java:355)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._bindAndClose(ObjectReader.java:2023)\r\n\tat com.fasterxml.jackson.databind.ObjectReader.readValue(ObjectReader.java:1528)\r\n\tat org.springframework.kafka.support.serializer.JsonDeserializer.deserialize(JsonDeserializer.java:534)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.parseRecord(Fetcher.java:1387)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.access$3400(Fetcher.java:133)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.fetchRecords(Fetcher.java:1618)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.access$1700(Fetcher.java:1454)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchRecords(Fetcher.java:687)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchedRecords(Fetcher.java:638)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.pollForFetches(KafkaConsumer.java:1272)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1233)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1206)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doPoll(KafkaMessageListenerContainer.java:1410)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1249)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1161)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:46:41.128Z","appMessage":"Consumer exception","class":"org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"ERROR","exception":"java.lang.IllegalStateException: This error handler cannot process 'SerializationException's directly; please consider configuring an 'ErrorHandlingDeserializer' in the value and/or key deserializer\r\n\tat org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:194)\r\n\tat org.springframework.kafka.listener.SeekToCurrentErrorHandler.handle(SeekToCurrentErrorHandler.java:112)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.handleConsumerException(KafkaMessageListenerContainer.java:1599)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1210)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Error deserializing key/value for partition customer-topic-2-0 at offset 0. If needed, please seek past the record to continue consumption.\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Can't deserialize data [[104, 105, 32, 116, 104, 101, 114, 101]] from topic [customer-topic-2]\r\nCaused by: com.fasterxml.jackson.core.JsonParseException: Unrecognized token 'hi': was expecting (JSON String, Number, Array, Object or token 'null', 'true' or 'false')\n at [Source: (byte[])\"hi there\"; line: 1, column: 4]\r\n\tat com.fasterxml.jackson.core.JsonParser._constructError(JsonParser.java:2337)\r\n\tat com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(ParserMinimalBase.java:720)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportInvalidToken(UTF8StreamJsonParser.java:3593)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleUnexpectedValue(UTF8StreamJsonParser.java:2688)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._nextTokenNotInObject(UTF8StreamJsonParser.java:870)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextToken(UTF8StreamJsonParser.java:762)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._initForReading(ObjectReader.java:355)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._bindAndClose(ObjectReader.java:2023)\r\n\tat com.fasterxml.jackson.databind.ObjectReader.readValue(ObjectReader.java:1528)\r\n\tat org.springframework.kafka.support.serializer.JsonDeserializer.deserialize(JsonDeserializer.java:534)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.parseRecord(Fetcher.java:1387)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.access$3400(Fetcher.java:133)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.fetchRecords(Fetcher.java:1618)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.access$1700(Fetcher.java:1454)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchRecords(Fetcher.java:687)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchedRecords(Fetcher.java:638)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.pollForFetches(KafkaConsumer.java:1272)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1233)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1206)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doPoll(KafkaMessageListenerContainer.java:1410)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1249)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1161)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:46:41.133Z","appMessage":"Consumer exception","class":"org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"ERROR","exception":"java.lang.IllegalStateException: This error handler cannot process 'SerializationException's directly; please consider configuring an 'ErrorHandlingDeserializer' in the value and/or key deserializer\r\n\tat org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:194)\r\n\tat org.springframework.kafka.listener.SeekToCurrentErrorHandler.handle(SeekToCurrentErrorHandler.java:112)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.handleConsumerException(KafkaMessageListenerContainer.java:1599)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1210)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Error deserializing key/value for partition customer-topic-2-0 at offset 0. If needed, please seek past the record to continue consumption.\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Can't deserialize data [[104, 105, 32, 116, 104, 101, 114, 101]] from topic [customer-topic-2]\r\nCaused by: com.fasterxml.jackson.core.JsonParseException: Unrecognized token 'hi': was expecting (JSON String, Number, Array, Object or token 'null', 'true' or 'false')\n at [Source: (byte[])\"hi there\"; line: 1, column: 4]\r\n\tat com.fasterxml.jackson.core.JsonParser._constructError(JsonParser.java:2337)\r\n\tat com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(ParserMinimalBase.java:720)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportInvalidToken(UTF8StreamJsonParser.java:3593)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleUnexpectedValue(UTF8StreamJsonParser.java:2688)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._nextTokenNotInObject(UTF8StreamJsonParser.java:870)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextToken(UTF8StreamJsonParser.java:762)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._initForReading(ObjectReader.java:355)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._bindAndClose(ObjectReader.java:2023)\r\n\tat com.fasterxml.jackson.databind.ObjectReader.readValue(ObjectReader.java:1528)\r\n\tat org.springframework.kafka.support.serializer.JsonDeserializer.deserialize(JsonDeserializer.java:534)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.parseRecord(Fetcher.java:1387)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.access$3400(Fetcher.java:133)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.fetchRecords(Fetcher.java:1618)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.access$1700(Fetcher.java:1454)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchRecords(Fetcher.java:687)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchedRecords(Fetcher.java:638)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.pollForFetches(KafkaConsumer.java:1272)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1233)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1206)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doPoll(KafkaMessageListenerContainer.java:1410)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1249)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1161)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:46:41.137Z","appMessage":"Consumer exception","class":"org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"ERROR","exception":"java.lang.IllegalStateException: This error handler cannot process 'SerializationException's directly; please consider configuring an 'ErrorHandlingDeserializer' in the value and/or key deserializer\r\n\tat org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:194)\r\n\tat org.springframework.kafka.listener.SeekToCurrentErrorHandler.handle(SeekToCurrentErrorHandler.java:112)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.handleConsumerException(KafkaMessageListenerContainer.java:1599)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1210)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Error deserializing key/value for partition customer-topic-2-0 at offset 0. If needed, please seek past the record to continue consumption.\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Can't deserialize data [[104, 105, 32, 116, 104, 101, 114, 101]] from topic [customer-topic-2]\r\nCaused by: com.fasterxml.jackson.core.JsonParseException: Unrecognized token 'hi': was expecting (JSON String, Number, Array, Object or token 'null', 'true' or 'false')\n at [Source: (byte[])\"hi there\"; line: 1, column: 4]\r\n\tat com.fasterxml.jackson.core.JsonParser._constructError(JsonParser.java:2337)\r\n\tat com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(ParserMinimalBase.java:720)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportInvalidToken(UTF8StreamJsonParser.java:3593)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleUnexpectedValue(UTF8StreamJsonParser.java:2688)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._nextTokenNotInObject(UTF8StreamJsonParser.java:870)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextToken(UTF8StreamJsonParser.java:762)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._initForReading(ObjectReader.java:355)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._bindAndClose(ObjectReader.java:2023)\r\n\tat com.fasterxml.jackson.databind.ObjectReader.readValue(ObjectReader.java:1528)\r\n\tat org.springframework.kafka.support.serializer.JsonDeserializer.deserialize(JsonDeserializer.java:534)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.parseRecord(Fetcher.java:1387)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.access$3400(Fetcher.java:133)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.fetchRecords(Fetcher.java:1618)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.access$1700(Fetcher.java:1454)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchRecords(Fetcher.java:687)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchedRecords(Fetcher.java:638)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.pollForFetches(KafkaConsumer.java:1272)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1233)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1206)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doPoll(KafkaMessageListenerContainer.java:1410)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1249)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1161)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:46:41.142Z","appMessage":"Consumer exception","class":"org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"ERROR","exception":"java.lang.IllegalStateException: This error handler cannot process 'SerializationException's directly; please consider configuring an 'ErrorHandlingDeserializer' in the value and/or key deserializer\r\n\tat org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:194)\r\n\tat org.springframework.kafka.listener.SeekToCurrentErrorHandler.handle(SeekToCurrentErrorHandler.java:112)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.handleConsumerException(KafkaMessageListenerContainer.java:1599)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1210)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Error deserializing key/value for partition customer-topic-2-0 at offset 0. If needed, please seek past the record to continue consumption.\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Can't deserialize data [[104, 105, 32, 116, 104, 101, 114, 101]] from topic [customer-topic-2]\r\nCaused by: com.fasterxml.jackson.core.JsonParseException: Unrecognized token 'hi': was expecting (JSON String, Number, Array, Object or token 'null', 'true' or 'false')\n at [Source: (byte[])\"hi there\"; line: 1, column: 4]\r\n\tat com.fasterxml.jackson.core.JsonParser._constructError(JsonParser.java:2337)\r\n\tat com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(ParserMinimalBase.java:720)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportInvalidToken(UTF8StreamJsonParser.java:3593)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleUnexpectedValue(UTF8StreamJsonParser.java:2688)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._nextTokenNotInObject(UTF8StreamJsonParser.java:870)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextToken(UTF8StreamJsonParser.java:762)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._initForReading(ObjectReader.java:355)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._bindAndClose(ObjectReader.java:2023)\r\n\tat com.fasterxml.jackson.databind.ObjectReader.readValue(ObjectReader.java:1528)\r\n\tat org.springframework.kafka.support.serializer.JsonDeserializer.deserialize(JsonDeserializer.java:534)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.parseRecord(Fetcher.java:1387)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.access$3400(Fetcher.java:133)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.fetchRecords(Fetcher.java:1618)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.access$1700(Fetcher.java:1454)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchRecords(Fetcher.java:687)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchedRecords(Fetcher.java:638)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.pollForFetches(KafkaConsumer.java:1272)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1233)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1206)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doPoll(KafkaMessageListenerContainer.java:1410)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1249)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1161)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:46:41.146Z","appMessage":"Consumer exception","class":"org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"ERROR","exception":"java.lang.IllegalStateException: This error handler cannot process 'SerializationException's directly; please consider configuring an 'ErrorHandlingDeserializer' in the value and/or key deserializer\r\n\tat org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:194)\r\n\tat org.springframework.kafka.listener.SeekToCurrentErrorHandler.handle(SeekToCurrentErrorHandler.java:112)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.handleConsumerException(KafkaMessageListenerContainer.java:1599)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1210)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Error deserializing key/value for partition customer-topic-2-0 at offset 0. If needed, please seek past the record to continue consumption.\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Can't deserialize data [[104, 105, 32, 116, 104, 101, 114, 101]] from topic [customer-topic-2]\r\nCaused by: com.fasterxml.jackson.core.JsonParseException: Unrecognized token 'hi': was expecting (JSON String, Number, Array, Object or token 'null', 'true' or 'false')\n at [Source: (byte[])\"hi there\"; line: 1, column: 4]\r\n\tat com.fasterxml.jackson.core.JsonParser._constructError(JsonParser.java:2337)\r\n\tat com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(ParserMinimalBase.java:720)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportInvalidToken(UTF8StreamJsonParser.java:3593)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleUnexpectedValue(UTF8StreamJsonParser.java:2688)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._nextTokenNotInObject(UTF8StreamJsonParser.java:870)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextToken(UTF8StreamJsonParser.java:762)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._initForReading(ObjectReader.java:355)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._bindAndClose(ObjectReader.java:2023)\r\n\tat com.fasterxml.jackson.databind.ObjectReader.readValue(ObjectReader.java:1528)\r\n\tat org.springframework.kafka.support.serializer.JsonDeserializer.deserialize(JsonDeserializer.java:534)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.parseRecord(Fetcher.java:1387)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.access$3400(Fetcher.java:133)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.fetchRecords(Fetcher.java:1618)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.access$1700(Fetcher.java:1454)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchRecords(Fetcher.java:687)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchedRecords(Fetcher.java:638)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.pollForFetches(KafkaConsumer.java:1272)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1233)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1206)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doPoll(KafkaMessageListenerContainer.java:1410)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1249)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1161)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:46:41.152Z","appMessage":"Consumer exception","class":"org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"ERROR","exception":"java.lang.IllegalStateException: This error handler cannot process 'SerializationException's directly; please consider configuring an 'ErrorHandlingDeserializer' in the value and/or key deserializer\r\n\tat org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:194)\r\n\tat org.springframework.kafka.listener.SeekToCurrentErrorHandler.handle(SeekToCurrentErrorHandler.java:112)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.handleConsumerException(KafkaMessageListenerContainer.java:1599)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1210)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Error deserializing key/value for partition customer-topic-2-0 at offset 0. If needed, please seek past the record to continue consumption.\r\nCaused by: org.apache.kafka.common.errors.SerializationException: Can't deserialize data [[104, 105, 32, 116, 104, 101, 114, 101]] from topic [customer-topic-2]\r\nCaused by: com.fasterxml.jackson.core.JsonParseException: Unrecognized token 'hi': was expecting (JSON String, Number, Array, Object or token 'null', 'true' or 'false')\n at [Source: (byte[])\"hi there\"; line: 1, column: 4]\r\n\tat com.fasterxml.jackson.core.JsonParser._constructError(JsonParser.java:2337)\r\n\tat com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(ParserMinimalBase.java:720)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportInvalidToken(UTF8StreamJsonParser.java:3593)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleUnexpectedValue(UTF8StreamJsonParser.java:2688)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._nextTokenNotInObject(UTF8StreamJsonParser.java:870)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextToken(UTF8StreamJsonParser.java:762)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._initForReading(ObjectReader.java:355)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._bindAndClose(ObjectReader.java:2023)\r\n\tat com.fasterxml.jackson.databind.ObjectReader.readValue(ObjectReader.java:1528)\r\n\tat org.springframework.kafka.support.serializer.JsonDeserializer.deserialize(JsonDeserializer.java:534)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.parseRecord(Fetcher.java:1387)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.access$3400(Fetcher.java:133)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.fetchRecords(Fetcher.java:1618)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.access$1700(Fetcher.java:1454)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchRecords(Fetcher.java:687)\r\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchedRecords(Fetcher.java:638)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.pollForFetches(KafkaConsumer.java:1272)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1233)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1206)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doPoll(KafkaMessageListenerContainer.java:1410)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1249)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1161)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:46:41.153Z","appMessage":"[Consumer clientId=consumer-group_id-1, groupId=group_id] Revoke previously assigned partitions customer-topic-1-0, customer-topic-1-1, customer-topic-1-2, customer-topic-1-3, customer-topic-1-4, customer-topic-1-5, customer-topic-1-6, customer-topic-1-7, customer-topic-1-8, customer-topic-1-9","class":"org.apache.kafka.clients.consumer.internals.ConsumerCoordinator","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:46:41.156Z","appMessage":"[Consumer clientId=consumer-group_json-2, groupId=group_json] Revoke previously assigned partitions customer-topic-2-0","class":"org.apache.kafka.clients.consumer.internals.ConsumerCoordinator","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:46:41.157Z","appMessage":"group_id: partitions revoked: [customer-topic-1-0, customer-topic-1-1, customer-topic-1-2, customer-topic-1-3, customer-topic-1-4, customer-topic-1-5, customer-topic-1-6, customer-topic-1-7, customer-topic-1-8, customer-topic-1-9]","class":"org.springframework.kafka.listener.KafkaMessageListenerContainer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:46:41.157Z","appMessage":"group_json: partitions revoked: [customer-topic-2-0]","class":"org.springframework.kafka.listener.KafkaMessageListenerContainer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:46:41.158Z","appMessage":"[Consumer clientId=consumer-group_id-1, groupId=group_id] Member consumer-group_id-1-29f1a338-574a-47b7-b326-3302b9f15058 sending LeaveGroup request to coordinator Officeroom:9092 (id: 2147483647 rack: null) due to the consumer unsubscribed from all topics","class":"org.apache.kafka.clients.consumer.internals.AbstractCoordinator","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:46:41.158Z","appMessage":"[Consumer clientId=consumer-group_json-2, groupId=group_json] Member consumer-group_json-2-baad65ad-c2dd-4c64-a649-0320690cad08 sending LeaveGroup request to coordinator Officeroom:9092 (id: 2147483647 rack: null) due to the consumer unsubscribed from all topics","class":"org.apache.kafka.clients.consumer.internals.AbstractCoordinator","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:46:41.161Z","appMessage":"[Consumer clientId=consumer-group_json-2, groupId=group_json] Unsubscribed all topics or patterns and assigned partitions","class":"org.apache.kafka.clients.consumer.KafkaConsumer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:46:41.161Z","appMessage":"[Consumer clientId=consumer-group_id-1, groupId=group_id] Unsubscribed all topics or patterns and assigned partitions","class":"org.apache.kafka.clients.consumer.KafkaConsumer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:46:41.172Z","appMessage":"Metrics scheduler closed","class":"org.apache.kafka.common.metrics.Metrics","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:46:41.173Z","appMessage":"Closing reporter org.apache.kafka.common.metrics.JmxReporter","class":"org.apache.kafka.common.metrics.Metrics","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:46:41.173Z","appMessage":"Metrics reporters closed","class":"org.apache.kafka.common.metrics.Metrics","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:46:41.173Z","appMessage":"Metrics scheduler closed","class":"org.apache.kafka.common.metrics.Metrics","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:46:41.174Z","appMessage":"Closing reporter org.apache.kafka.common.metrics.JmxReporter","class":"org.apache.kafka.common.metrics.Metrics","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:46:41.175Z","appMessage":"Metrics reporters closed","class":"org.apache.kafka.common.metrics.Metrics","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:46:41.183Z","appMessage":"App info kafka.consumer for consumer-group_id-1 unregistered","class":"org.apache.kafka.common.utils.AppInfoParser","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:46:41.184Z","appMessage":"App info kafka.consumer for consumer-group_json-2 unregistered","class":"org.apache.kafka.common.utils.AppInfoParser","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:46:41.184Z","appMessage":"group_id: Consumer stopped","class":"org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:46:41.184Z","appMessage":"group_json: Consumer stopped","class":"org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:46:41.209Z","appMessage":"[Producer clientId=producer-1] Closing the Kafka producer with timeoutMillis = 30000 ms.","class":"org.apache.kafka.clients.producer.KafkaProducer","thread":"Thread-6","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:46:41.212Z","appMessage":"Metrics scheduler closed","class":"org.apache.kafka.common.metrics.Metrics","thread":"Thread-6","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:46:41.213Z","appMessage":"Closing reporter org.apache.kafka.common.metrics.JmxReporter","class":"org.apache.kafka.common.metrics.Metrics","thread":"Thread-6","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:46:41.213Z","appMessage":"Metrics reporters closed","class":"org.apache.kafka.common.metrics.Metrics","thread":"Thread-6","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:46:41.214Z","appMessage":"App info kafka.producer for producer-1 unregistered","class":"org.apache.kafka.common.utils.AppInfoParser","thread":"Thread-6","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:46:41.447Z","appMessage":"Starting Application using Java 1.8.0_202 on Officeroom with PID 55836 (C:\\Users\\Officeroom\\JavaProj\\sb-aslan-kafka-template\\target\\classes started by Officeroom in C:\\Users\\Officeroom\\JavaProj\\sb-aslan-kafka-template)","class":"com.aslan.kafka.Application","thread":"restartedMain","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:46:41.448Z","appMessage":"The following profiles are active: local","class":"com.aslan.kafka.Application","thread":"restartedMain","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:46:42.055Z","appMessage":"Tomcat initialized with port(s): 8080 (http)","class":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread":"restartedMain","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:46:42.056Z","appMessage":"Initializing ProtocolHandler [\"http-nio-8080\"]","class":"org.apache.coyote.http11.Http11NioProtocol","thread":"restartedMain","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:46:42.056Z","appMessage":"Starting service [Tomcat]","class":"org.apache.catalina.core.StandardService","thread":"restartedMain","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:46:42.057Z","appMessage":"Starting Servlet engine: [Apache Tomcat/9.0.48]","class":"org.apache.catalina.core.StandardEngine","thread":"restartedMain","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:46:42.095Z","appMessage":"Initializing Spring embedded WebApplicationContext","class":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]","thread":"restartedMain","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:46:42.095Z","appMessage":"Root WebApplicationContext: initialization completed in 643 ms","class":"org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext","thread":"restartedMain","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:46:42.268Z","appMessage":"Cannot find template location: classpath:/templates/ (please add some templates, check your Mustache configuration, or set spring.mustache.check-template-location=false)","class":"org.springframework.boot.autoconfigure.mustache.MustacheAutoConfiguration","thread":"restartedMain","level":"WARN","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:46:42.276Z","appMessage":"Cannot find template location: classpath:/templates/ (please add some templates or check your Thymeleaf configuration)","class":"org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$DefaultTemplateResolverConfiguration","thread":"restartedMain","level":"WARN","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:46:42.361Z","appMessage":"LiveReload server is running on port 35729","class":"org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer","thread":"restartedMain","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:46:42.366Z","appMessage":"Exposing 13 endpoint(s) beneath base path ''","class":"org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver","thread":"restartedMain","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:46:42.383Z","appMessage":"Starting ProtocolHandler [\"http-nio-8080\"]","class":"org.apache.coyote.http11.Http11NioProtocol","thread":"restartedMain","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:46:42.386Z","appMessage":"Tomcat started on port(s): 8080 (http) with context path ''","class":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread":"restartedMain","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:46:42.399Z","appMessage":"Started Application in 1.041 seconds (JVM running for 472.182)","class":"com.aslan.kafka.Application","thread":"restartedMain","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:46:42.402Z","appMessage":"Condition evaluation unchanged","class":"org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener","thread":"restartedMain","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:46:55.409Z","appMessage":"Starting Application using Java 1.8.0_202 on Officeroom with PID 55836 (C:\\Users\\Officeroom\\JavaProj\\sb-aslan-kafka-template\\target\\classes started by Officeroom in C:\\Users\\Officeroom\\JavaProj\\sb-aslan-kafka-template)","class":"com.aslan.kafka.Application","thread":"restartedMain","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:46:55.410Z","appMessage":"The following profiles are active: local","class":"com.aslan.kafka.Application","thread":"restartedMain","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:46:55.863Z","appMessage":"Tomcat initialized with port(s): 8080 (http)","class":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread":"restartedMain","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:46:55.864Z","appMessage":"Initializing ProtocolHandler [\"http-nio-8080\"]","class":"org.apache.coyote.http11.Http11NioProtocol","thread":"restartedMain","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:46:55.865Z","appMessage":"Starting service [Tomcat]","class":"org.apache.catalina.core.StandardService","thread":"restartedMain","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:46:55.865Z","appMessage":"Starting Servlet engine: [Apache Tomcat/9.0.48]","class":"org.apache.catalina.core.StandardEngine","thread":"restartedMain","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:46:55.900Z","appMessage":"Initializing Spring embedded WebApplicationContext","class":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]","thread":"restartedMain","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:46:55.900Z","appMessage":"Root WebApplicationContext: initialization completed in 486 ms","class":"org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext","thread":"restartedMain","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:46:56.062Z","appMessage":"Cannot find template location: classpath:/templates/ (please add some templates, check your Mustache configuration, or set spring.mustache.check-template-location=false)","class":"org.springframework.boot.autoconfigure.mustache.MustacheAutoConfiguration","thread":"restartedMain","level":"WARN","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:46:56.069Z","appMessage":"Cannot find template location: classpath:/templates/ (please add some templates or check your Thymeleaf configuration)","class":"org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$DefaultTemplateResolverConfiguration","thread":"restartedMain","level":"WARN","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:46:56.148Z","appMessage":"LiveReload server is running on port 35729","class":"org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer","thread":"restartedMain","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:46:56.154Z","appMessage":"Exposing 13 endpoint(s) beneath base path ''","class":"org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver","thread":"restartedMain","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:46:56.174Z","appMessage":"ConsumerConfig values: \r\n\tallow.auto.create.topics = true\r\n\tauto.commit.interval.ms = 5000\r\n\tauto.offset.reset = latest\r\n\tbootstrap.servers = [127.0.0.1:9092]\r\n\tcheck.crcs = true\r\n\tclient.dns.lookup = use_all_dns_ips\r\n\tclient.id = consumer-group_id-3\r\n\tclient.rack = \r\n\tconnections.max.idle.ms = 540000\r\n\tdefault.api.timeout.ms = 60000\r\n\tenable.auto.commit = false\r\n\texclude.internal.topics = true\r\n\tfetch.max.bytes = 52428800\r\n\tfetch.max.wait.ms = 500\r\n\tfetch.min.bytes = 1\r\n\tgroup.id = group_id\r\n\tgroup.instance.id = null\r\n\theartbeat.interval.ms = 3000\r\n\tinterceptor.classes = []\r\n\tinternal.leave.group.on.close = true\r\n\tinternal.throw.on.fetch.stable.offset.unsupported = false\r\n\tisolation.level = read_uncommitted\r\n\tkey.deserializer = class org.apache.kafka.common.serialization.StringDeserializer\r\n\tmax.partition.fetch.bytes = 1048576\r\n\tmax.poll.interval.ms = 300000\r\n\tmax.poll.records = 500\r\n\tmetadata.max.age.ms = 300000\r\n\tmetric.reporters = []\r\n\tmetrics.num.samples = 2\r\n\tmetrics.recording.level = INFO\r\n\tmetrics.sample.window.ms = 30000\r\n\tpartition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor]\r\n\treceive.buffer.bytes = 65536\r\n\treconnect.backoff.max.ms = 1000\r\n\treconnect.backoff.ms = 50\r\n\trequest.timeout.ms = 30000\r\n\tretry.backoff.ms = 100\r\n\tsasl.client.callback.handler.class = null\r\n\tsasl.jaas.config = null\r\n\tsasl.kerberos.kinit.cmd = /usr/bin/kinit\r\n\tsasl.kerberos.min.time.before.relogin = 60000\r\n\tsasl.kerberos.service.name = null\r\n\tsasl.kerberos.ticket.renew.jitter = 0.05\r\n\tsasl.kerberos.ticket.renew.window.factor = 0.8\r\n\tsasl.login.callback.handler.class = null\r\n\tsasl.login.class = null\r\n\tsasl.login.refresh.buffer.seconds = 300\r\n\tsasl.login.refresh.min.period.seconds = 60\r\n\tsasl.login.refresh.window.factor = 0.8\r\n\tsasl.login.refresh.window.jitter = 0.05\r\n\tsasl.mechanism = GSSAPI\r\n\tsecurity.protocol = PLAINTEXT\r\n\tsecurity.providers = null\r\n\tsend.buffer.bytes = 131072\r\n\tsession.timeout.ms = 10000\r\n\tsocket.connection.setup.timeout.max.ms = 127000\r\n\tsocket.connection.setup.timeout.ms = 10000\r\n\tssl.cipher.suites = null\r\n\tssl.enabled.protocols = [TLSv1.2]\r\n\tssl.endpoint.identification.algorithm = https\r\n\tssl.engine.factory.class = null\r\n\tssl.key.password = null\r\n\tssl.keymanager.algorithm = SunX509\r\n\tssl.keystore.certificate.chain = null\r\n\tssl.keystore.key = null\r\n\tssl.keystore.location = null\r\n\tssl.keystore.password = null\r\n\tssl.keystore.type = JKS\r\n\tssl.protocol = TLSv1.2\r\n\tssl.provider = null\r\n\tssl.secure.random.implementation = null\r\n\tssl.trustmanager.algorithm = PKIX\r\n\tssl.truststore.certificates = null\r\n\tssl.truststore.location = null\r\n\tssl.truststore.password = null\r\n\tssl.truststore.type = JKS\r\n\tvalue.deserializer = class org.apache.kafka.common.serialization.StringDeserializer\r\n","class":"org.apache.kafka.clients.consumer.ConsumerConfig","thread":"restartedMain","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:46:56.187Z","appMessage":"Kafka version: 2.7.1","class":"org.apache.kafka.common.utils.AppInfoParser","thread":"restartedMain","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:46:56.187Z","appMessage":"Kafka commitId: 61dbce85d0d41457","class":"org.apache.kafka.common.utils.AppInfoParser","thread":"restartedMain","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:46:56.188Z","appMessage":"Kafka startTimeMs: 1627019216187","class":"org.apache.kafka.common.utils.AppInfoParser","thread":"restartedMain","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:46:56.188Z","appMessage":"[Consumer clientId=consumer-group_id-3, groupId=group_id] Subscribed to topic(s): customer-topic-1","class":"org.apache.kafka.clients.consumer.KafkaConsumer","thread":"restartedMain","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:46:56.190Z","appMessage":"Starting ProtocolHandler [\"http-nio-8080\"]","class":"org.apache.coyote.http11.Http11NioProtocol","thread":"restartedMain","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:46:56.194Z","appMessage":"Tomcat started on port(s): 8080 (http) with context path ''","class":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread":"restartedMain","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:46:56.196Z","appMessage":"[Consumer clientId=consumer-group_id-3, groupId=group_id] Cluster ID: Iu9DHTQ6SReFUqKIFFqxlQ","class":"org.apache.kafka.clients.Metadata","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:46:56.197Z","appMessage":"[Consumer clientId=consumer-group_id-3, groupId=group_id] Discovered group coordinator Officeroom:9092 (id: 2147483647 rack: null)","class":"org.apache.kafka.clients.consumer.internals.AbstractCoordinator","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:46:56.199Z","appMessage":"[Consumer clientId=consumer-group_id-3, groupId=group_id] (Re-)joining group","class":"org.apache.kafka.clients.consumer.internals.AbstractCoordinator","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:46:56.202Z","appMessage":"[Consumer clientId=consumer-group_id-3, groupId=group_id] (Re-)joining group","class":"org.apache.kafka.clients.consumer.internals.AbstractCoordinator","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:46:56.206Z","appMessage":"[Consumer clientId=consumer-group_id-3, groupId=group_id] Successfully joined group with generation Generation{generationId=3, memberId='consumer-group_id-3-19034846-344e-4411-815f-eaee819a001d', protocol='range'}","class":"org.apache.kafka.clients.consumer.internals.AbstractCoordinator","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:46:56.206Z","appMessage":"[Consumer clientId=consumer-group_id-3, groupId=group_id] Finished assignment for group at generation 3: {consumer-group_id-3-19034846-344e-4411-815f-eaee819a001d=Assignment(partitions=[customer-topic-1-0, customer-topic-1-1, customer-topic-1-2, customer-topic-1-3, customer-topic-1-4, customer-topic-1-5, customer-topic-1-6, customer-topic-1-7, customer-topic-1-8, customer-topic-1-9])}","class":"org.apache.kafka.clients.consumer.internals.ConsumerCoordinator","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:46:56.207Z","appMessage":"Started Application in 0.867 seconds (JVM running for 485.99)","class":"com.aslan.kafka.Application","thread":"restartedMain","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:46:56.210Z","appMessage":"[Consumer clientId=consumer-group_id-3, groupId=group_id] Successfully synced group in generation Generation{generationId=3, memberId='consumer-group_id-3-19034846-344e-4411-815f-eaee819a001d', protocol='range'}","class":"org.apache.kafka.clients.consumer.internals.AbstractCoordinator","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:46:56.211Z","appMessage":"Condition evaluation unchanged","class":"org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener","thread":"restartedMain","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:46:56.211Z","appMessage":"[Consumer clientId=consumer-group_id-3, groupId=group_id] Notifying assignor about the new Assignment(partitions=[customer-topic-1-0, customer-topic-1-1, customer-topic-1-2, customer-topic-1-3, customer-topic-1-4, customer-topic-1-5, customer-topic-1-6, customer-topic-1-7, customer-topic-1-8, customer-topic-1-9])","class":"org.apache.kafka.clients.consumer.internals.ConsumerCoordinator","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:46:56.212Z","appMessage":"[Consumer clientId=consumer-group_id-3, groupId=group_id] Adding newly assigned partitions: customer-topic-1-0, customer-topic-1-1, customer-topic-1-2, customer-topic-1-3, customer-topic-1-4, customer-topic-1-5, customer-topic-1-6, customer-topic-1-7, customer-topic-1-8, customer-topic-1-9","class":"org.apache.kafka.clients.consumer.internals.ConsumerCoordinator","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:46:56.215Z","appMessage":"[Consumer clientId=consumer-group_id-3, groupId=group_id] Setting offset for partition customer-topic-1-0 to the committed offset FetchPosition{offset=5, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[Officeroom:9092 (id: 0 rack: null)], epoch=absent}}","class":"org.apache.kafka.clients.consumer.internals.ConsumerCoordinator","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:46:56.215Z","appMessage":"[Consumer clientId=consumer-group_id-3, groupId=group_id] Setting offset for partition customer-topic-1-1 to the committed offset FetchPosition{offset=5, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[Officeroom:9092 (id: 0 rack: null)], epoch=absent}}","class":"org.apache.kafka.clients.consumer.internals.ConsumerCoordinator","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:46:56.216Z","appMessage":"[Consumer clientId=consumer-group_id-3, groupId=group_id] Setting offset for partition customer-topic-1-2 to the committed offset FetchPosition{offset=5, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[Officeroom:9092 (id: 0 rack: null)], epoch=absent}}","class":"org.apache.kafka.clients.consumer.internals.ConsumerCoordinator","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:46:56.216Z","appMessage":"[Consumer clientId=consumer-group_id-3, groupId=group_id] Setting offset for partition customer-topic-1-3 to the committed offset FetchPosition{offset=5, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[Officeroom:9092 (id: 0 rack: null)], epoch=absent}}","class":"org.apache.kafka.clients.consumer.internals.ConsumerCoordinator","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:46:56.217Z","appMessage":"[Consumer clientId=consumer-group_id-3, groupId=group_id] Setting offset for partition customer-topic-1-4 to the committed offset FetchPosition{offset=5, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[Officeroom:9092 (id: 0 rack: null)], epoch=absent}}","class":"org.apache.kafka.clients.consumer.internals.ConsumerCoordinator","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:46:56.217Z","appMessage":"[Consumer clientId=consumer-group_id-3, groupId=group_id] Setting offset for partition customer-topic-1-5 to the committed offset FetchPosition{offset=5, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[Officeroom:9092 (id: 0 rack: null)], epoch=absent}}","class":"org.apache.kafka.clients.consumer.internals.ConsumerCoordinator","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:46:56.218Z","appMessage":"[Consumer clientId=consumer-group_id-3, groupId=group_id] Setting offset for partition customer-topic-1-6 to the committed offset FetchPosition{offset=5, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[Officeroom:9092 (id: 0 rack: null)], epoch=absent}}","class":"org.apache.kafka.clients.consumer.internals.ConsumerCoordinator","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:46:56.219Z","appMessage":"[Consumer clientId=consumer-group_id-3, groupId=group_id] Setting offset for partition customer-topic-1-7 to the committed offset FetchPosition{offset=5, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[Officeroom:9092 (id: 0 rack: null)], epoch=absent}}","class":"org.apache.kafka.clients.consumer.internals.ConsumerCoordinator","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:46:56.219Z","appMessage":"[Consumer clientId=consumer-group_id-3, groupId=group_id] Setting offset for partition customer-topic-1-8 to the committed offset FetchPosition{offset=5, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[Officeroom:9092 (id: 0 rack: null)], epoch=absent}}","class":"org.apache.kafka.clients.consumer.internals.ConsumerCoordinator","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:46:56.220Z","appMessage":"[Consumer clientId=consumer-group_id-3, groupId=group_id] Setting offset for partition customer-topic-1-9 to the committed offset FetchPosition{offset=5, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[Officeroom:9092 (id: 0 rack: null)], epoch=absent}}","class":"org.apache.kafka.clients.consumer.internals.ConsumerCoordinator","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:46:56.220Z","appMessage":"group_id: partitions assigned: [customer-topic-1-0, customer-topic-1-1, customer-topic-1-2, customer-topic-1-3, customer-topic-1-4, customer-topic-1-5, customer-topic-1-6, customer-topic-1-7, customer-topic-1-8, customer-topic-1-9]","class":"org.springframework.kafka.listener.KafkaMessageListenerContainer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:48:16.552Z","appMessage":"[Consumer clientId=consumer-group_id-3, groupId=group_id] Revoke previously assigned partitions customer-topic-1-0, customer-topic-1-1, customer-topic-1-2, customer-topic-1-3, customer-topic-1-4, customer-topic-1-5, customer-topic-1-6, customer-topic-1-7, customer-topic-1-8, customer-topic-1-9","class":"org.apache.kafka.clients.consumer.internals.ConsumerCoordinator","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:48:16.553Z","appMessage":"group_id: partitions revoked: [customer-topic-1-0, customer-topic-1-1, customer-topic-1-2, customer-topic-1-3, customer-topic-1-4, customer-topic-1-5, customer-topic-1-6, customer-topic-1-7, customer-topic-1-8, customer-topic-1-9]","class":"org.springframework.kafka.listener.KafkaMessageListenerContainer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:48:16.553Z","appMessage":"[Consumer clientId=consumer-group_id-3, groupId=group_id] Member consumer-group_id-3-19034846-344e-4411-815f-eaee819a001d sending LeaveGroup request to coordinator Officeroom:9092 (id: 2147483647 rack: null) due to the consumer unsubscribed from all topics","class":"org.apache.kafka.clients.consumer.internals.AbstractCoordinator","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:48:16.554Z","appMessage":"[Consumer clientId=consumer-group_id-3, groupId=group_id] Unsubscribed all topics or patterns and assigned partitions","class":"org.apache.kafka.clients.consumer.KafkaConsumer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:48:16.558Z","appMessage":"Metrics scheduler closed","class":"org.apache.kafka.common.metrics.Metrics","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:48:16.559Z","appMessage":"Closing reporter org.apache.kafka.common.metrics.JmxReporter","class":"org.apache.kafka.common.metrics.Metrics","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:48:16.559Z","appMessage":"Metrics reporters closed","class":"org.apache.kafka.common.metrics.Metrics","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:48:16.563Z","appMessage":"App info kafka.consumer for consumer-group_id-3 unregistered","class":"org.apache.kafka.common.utils.AppInfoParser","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:48:16.564Z","appMessage":"group_id: Consumer stopped","class":"org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:48:16.862Z","appMessage":"Starting Application using Java 1.8.0_202 on Officeroom with PID 55836 (C:\\Users\\Officeroom\\JavaProj\\sb-aslan-kafka-template\\target\\classes started by Officeroom in C:\\Users\\Officeroom\\JavaProj\\sb-aslan-kafka-template)","class":"com.aslan.kafka.Application","thread":"restartedMain","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:48:16.863Z","appMessage":"The following profiles are active: local","class":"com.aslan.kafka.Application","thread":"restartedMain","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:48:17.452Z","appMessage":"Tomcat initialized with port(s): 8080 (http)","class":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread":"restartedMain","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:48:17.453Z","appMessage":"Initializing ProtocolHandler [\"http-nio-8080\"]","class":"org.apache.coyote.http11.Http11NioProtocol","thread":"restartedMain","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:48:17.453Z","appMessage":"Starting service [Tomcat]","class":"org.apache.catalina.core.StandardService","thread":"restartedMain","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:48:17.454Z","appMessage":"Starting Servlet engine: [Apache Tomcat/9.0.48]","class":"org.apache.catalina.core.StandardEngine","thread":"restartedMain","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:48:17.492Z","appMessage":"Initializing Spring embedded WebApplicationContext","class":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]","thread":"restartedMain","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:48:17.493Z","appMessage":"Root WebApplicationContext: initialization completed in 626 ms","class":"org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext","thread":"restartedMain","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:48:17.643Z","appMessage":"Cannot find template location: classpath:/templates/ (please add some templates, check your Mustache configuration, or set spring.mustache.check-template-location=false)","class":"org.springframework.boot.autoconfigure.mustache.MustacheAutoConfiguration","thread":"restartedMain","level":"WARN","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:48:17.650Z","appMessage":"Cannot find template location: classpath:/templates/ (please add some templates or check your Thymeleaf configuration)","class":"org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$DefaultTemplateResolverConfiguration","thread":"restartedMain","level":"WARN","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:48:17.737Z","appMessage":"LiveReload server is running on port 35729","class":"org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer","thread":"restartedMain","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:48:17.743Z","appMessage":"Exposing 13 endpoint(s) beneath base path ''","class":"org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver","thread":"restartedMain","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:48:17.768Z","appMessage":"ConsumerConfig values: \r\n\tallow.auto.create.topics = true\r\n\tauto.commit.interval.ms = 5000\r\n\tauto.offset.reset = latest\r\n\tbootstrap.servers = [127.0.0.1:9092]\r\n\tcheck.crcs = true\r\n\tclient.dns.lookup = use_all_dns_ips\r\n\tclient.id = consumer-group_json-4\r\n\tclient.rack = \r\n\tconnections.max.idle.ms = 540000\r\n\tdefault.api.timeout.ms = 60000\r\n\tenable.auto.commit = false\r\n\texclude.internal.topics = true\r\n\tfetch.max.bytes = 52428800\r\n\tfetch.max.wait.ms = 500\r\n\tfetch.min.bytes = 1\r\n\tgroup.id = group_json\r\n\tgroup.instance.id = null\r\n\theartbeat.interval.ms = 3000\r\n\tinterceptor.classes = []\r\n\tinternal.leave.group.on.close = true\r\n\tinternal.throw.on.fetch.stable.offset.unsupported = false\r\n\tisolation.level = read_uncommitted\r\n\tkey.deserializer = class org.apache.kafka.common.serialization.StringDeserializer\r\n\tmax.partition.fetch.bytes = 1048576\r\n\tmax.poll.interval.ms = 300000\r\n\tmax.poll.records = 500\r\n\tmetadata.max.age.ms = 300000\r\n\tmetric.reporters = []\r\n\tmetrics.num.samples = 2\r\n\tmetrics.recording.level = INFO\r\n\tmetrics.sample.window.ms = 30000\r\n\tpartition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor]\r\n\treceive.buffer.bytes = 65536\r\n\treconnect.backoff.max.ms = 1000\r\n\treconnect.backoff.ms = 50\r\n\trequest.timeout.ms = 30000\r\n\tretry.backoff.ms = 100\r\n\tsasl.client.callback.handler.class = null\r\n\tsasl.jaas.config = null\r\n\tsasl.kerberos.kinit.cmd = /usr/bin/kinit\r\n\tsasl.kerberos.min.time.before.relogin = 60000\r\n\tsasl.kerberos.service.name = null\r\n\tsasl.kerberos.ticket.renew.jitter = 0.05\r\n\tsasl.kerberos.ticket.renew.window.factor = 0.8\r\n\tsasl.login.callback.handler.class = null\r\n\tsasl.login.class = null\r\n\tsasl.login.refresh.buffer.seconds = 300\r\n\tsasl.login.refresh.min.period.seconds = 60\r\n\tsasl.login.refresh.window.factor = 0.8\r\n\tsasl.login.refresh.window.jitter = 0.05\r\n\tsasl.mechanism = GSSAPI\r\n\tsecurity.protocol = PLAINTEXT\r\n\tsecurity.providers = null\r\n\tsend.buffer.bytes = 131072\r\n\tsession.timeout.ms = 10000\r\n\tsocket.connection.setup.timeout.max.ms = 127000\r\n\tsocket.connection.setup.timeout.ms = 10000\r\n\tssl.cipher.suites = null\r\n\tssl.enabled.protocols = [TLSv1.2]\r\n\tssl.endpoint.identification.algorithm = https\r\n\tssl.engine.factory.class = null\r\n\tssl.key.password = null\r\n\tssl.keymanager.algorithm = SunX509\r\n\tssl.keystore.certificate.chain = null\r\n\tssl.keystore.key = null\r\n\tssl.keystore.location = null\r\n\tssl.keystore.password = null\r\n\tssl.keystore.type = JKS\r\n\tssl.protocol = TLSv1.2\r\n\tssl.provider = null\r\n\tssl.secure.random.implementation = null\r\n\tssl.trustmanager.algorithm = PKIX\r\n\tssl.truststore.certificates = null\r\n\tssl.truststore.location = null\r\n\tssl.truststore.password = null\r\n\tssl.truststore.type = JKS\r\n\tvalue.deserializer = class org.springframework.kafka.support.serializer.JsonDeserializer\r\n","class":"org.apache.kafka.clients.consumer.ConsumerConfig","thread":"restartedMain","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:48:17.781Z","appMessage":"Kafka version: 2.7.1","class":"org.apache.kafka.common.utils.AppInfoParser","thread":"restartedMain","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:48:17.781Z","appMessage":"Kafka commitId: 61dbce85d0d41457","class":"org.apache.kafka.common.utils.AppInfoParser","thread":"restartedMain","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:48:17.782Z","appMessage":"Kafka startTimeMs: 1627019297781","class":"org.apache.kafka.common.utils.AppInfoParser","thread":"restartedMain","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:48:17.783Z","appMessage":"[Consumer clientId=consumer-group_json-4, groupId=group_json] Subscribed to topic(s): customer-topic-1","class":"org.apache.kafka.clients.consumer.KafkaConsumer","thread":"restartedMain","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:48:17.786Z","appMessage":"ConsumerConfig values: \r\n\tallow.auto.create.topics = true\r\n\tauto.commit.interval.ms = 5000\r\n\tauto.offset.reset = latest\r\n\tbootstrap.servers = [127.0.0.1:9092]\r\n\tcheck.crcs = true\r\n\tclient.dns.lookup = use_all_dns_ips\r\n\tclient.id = consumer-group_id-5\r\n\tclient.rack = \r\n\tconnections.max.idle.ms = 540000\r\n\tdefault.api.timeout.ms = 60000\r\n\tenable.auto.commit = false\r\n\texclude.internal.topics = true\r\n\tfetch.max.bytes = 52428800\r\n\tfetch.max.wait.ms = 500\r\n\tfetch.min.bytes = 1\r\n\tgroup.id = group_id\r\n\tgroup.instance.id = null\r\n\theartbeat.interval.ms = 3000\r\n\tinterceptor.classes = []\r\n\tinternal.leave.group.on.close = true\r\n\tinternal.throw.on.fetch.stable.offset.unsupported = false\r\n\tisolation.level = read_uncommitted\r\n\tkey.deserializer = class org.apache.kafka.common.serialization.StringDeserializer\r\n\tmax.partition.fetch.bytes = 1048576\r\n\tmax.poll.interval.ms = 300000\r\n\tmax.poll.records = 500\r\n\tmetadata.max.age.ms = 300000\r\n\tmetric.reporters = []\r\n\tmetrics.num.samples = 2\r\n\tmetrics.recording.level = INFO\r\n\tmetrics.sample.window.ms = 30000\r\n\tpartition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor]\r\n\treceive.buffer.bytes = 65536\r\n\treconnect.backoff.max.ms = 1000\r\n\treconnect.backoff.ms = 50\r\n\trequest.timeout.ms = 30000\r\n\tretry.backoff.ms = 100\r\n\tsasl.client.callback.handler.class = null\r\n\tsasl.jaas.config = null\r\n\tsasl.kerberos.kinit.cmd = /usr/bin/kinit\r\n\tsasl.kerberos.min.time.before.relogin = 60000\r\n\tsasl.kerberos.service.name = null\r\n\tsasl.kerberos.ticket.renew.jitter = 0.05\r\n\tsasl.kerberos.ticket.renew.window.factor = 0.8\r\n\tsasl.login.callback.handler.class = null\r\n\tsasl.login.class = null\r\n\tsasl.login.refresh.buffer.seconds = 300\r\n\tsasl.login.refresh.min.period.seconds = 60\r\n\tsasl.login.refresh.window.factor = 0.8\r\n\tsasl.login.refresh.window.jitter = 0.05\r\n\tsasl.mechanism = GSSAPI\r\n\tsecurity.protocol = PLAINTEXT\r\n\tsecurity.providers = null\r\n\tsend.buffer.bytes = 131072\r\n\tsession.timeout.ms = 10000\r\n\tsocket.connection.setup.timeout.max.ms = 127000\r\n\tsocket.connection.setup.timeout.ms = 10000\r\n\tssl.cipher.suites = null\r\n\tssl.enabled.protocols = [TLSv1.2]\r\n\tssl.endpoint.identification.algorithm = https\r\n\tssl.engine.factory.class = null\r\n\tssl.key.password = null\r\n\tssl.keymanager.algorithm = SunX509\r\n\tssl.keystore.certificate.chain = null\r\n\tssl.keystore.key = null\r\n\tssl.keystore.location = null\r\n\tssl.keystore.password = null\r\n\tssl.keystore.type = JKS\r\n\tssl.protocol = TLSv1.2\r\n\tssl.provider = null\r\n\tssl.secure.random.implementation = null\r\n\tssl.trustmanager.algorithm = PKIX\r\n\tssl.truststore.certificates = null\r\n\tssl.truststore.location = null\r\n\tssl.truststore.password = null\r\n\tssl.truststore.type = JKS\r\n\tvalue.deserializer = class org.apache.kafka.common.serialization.StringDeserializer\r\n","class":"org.apache.kafka.clients.consumer.ConsumerConfig","thread":"restartedMain","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:48:17.791Z","appMessage":"[Consumer clientId=consumer-group_json-4, groupId=group_json] Cluster ID: Iu9DHTQ6SReFUqKIFFqxlQ","class":"org.apache.kafka.clients.Metadata","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:48:17.797Z","appMessage":"[Consumer clientId=consumer-group_json-4, groupId=group_json] Discovered group coordinator Officeroom:9092 (id: 2147483647 rack: null)","class":"org.apache.kafka.clients.consumer.internals.AbstractCoordinator","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:48:17.799Z","appMessage":"[Consumer clientId=consumer-group_json-4, groupId=group_json] (Re-)joining group","class":"org.apache.kafka.clients.consumer.internals.AbstractCoordinator","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:48:17.802Z","appMessage":"Kafka version: 2.7.1","class":"org.apache.kafka.common.utils.AppInfoParser","thread":"restartedMain","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:48:17.803Z","appMessage":"Kafka commitId: 61dbce85d0d41457","class":"org.apache.kafka.common.utils.AppInfoParser","thread":"restartedMain","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:48:17.803Z","appMessage":"[Consumer clientId=consumer-group_json-4, groupId=group_json] (Re-)joining group","class":"org.apache.kafka.clients.consumer.internals.AbstractCoordinator","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:48:17.803Z","appMessage":"Kafka startTimeMs: 1627019297802","class":"org.apache.kafka.common.utils.AppInfoParser","thread":"restartedMain","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:48:17.805Z","appMessage":"[Consumer clientId=consumer-group_id-5, groupId=group_id] Subscribed to topic(s): customer-topic-2","class":"org.apache.kafka.clients.consumer.KafkaConsumer","thread":"restartedMain","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:48:17.808Z","appMessage":"Starting ProtocolHandler [\"http-nio-8080\"]","class":"org.apache.coyote.http11.Http11NioProtocol","thread":"restartedMain","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:48:17.809Z","appMessage":"[Consumer clientId=consumer-group_json-4, groupId=group_json] Successfully joined group with generation Generation{generationId=3, memberId='consumer-group_json-4-79ebac57-cce8-4ee6-9e44-9aaf2d4bbef7', protocol='range'}","class":"org.apache.kafka.clients.consumer.internals.AbstractCoordinator","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:48:17.811Z","appMessage":"[Consumer clientId=consumer-group_json-4, groupId=group_json] Finished assignment for group at generation 3: {consumer-group_json-4-79ebac57-cce8-4ee6-9e44-9aaf2d4bbef7=Assignment(partitions=[customer-topic-1-0, customer-topic-1-1, customer-topic-1-2, customer-topic-1-3, customer-topic-1-4, customer-topic-1-5, customer-topic-1-6, customer-topic-1-7, customer-topic-1-8, customer-topic-1-9])}","class":"org.apache.kafka.clients.consumer.internals.ConsumerCoordinator","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:48:17.814Z","appMessage":"Tomcat started on port(s): 8080 (http) with context path ''","class":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread":"restartedMain","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:48:17.815Z","appMessage":"[Consumer clientId=consumer-group_id-5, groupId=group_id] Cluster ID: Iu9DHTQ6SReFUqKIFFqxlQ","class":"org.apache.kafka.clients.Metadata","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:48:17.816Z","appMessage":"[Consumer clientId=consumer-group_json-4, groupId=group_json] Successfully synced group in generation Generation{generationId=3, memberId='consumer-group_json-4-79ebac57-cce8-4ee6-9e44-9aaf2d4bbef7', protocol='range'}","class":"org.apache.kafka.clients.consumer.internals.AbstractCoordinator","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:48:17.816Z","appMessage":"[Consumer clientId=consumer-group_id-5, groupId=group_id] Discovered group coordinator Officeroom:9092 (id: 2147483647 rack: null)","class":"org.apache.kafka.clients.consumer.internals.AbstractCoordinator","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:48:17.818Z","appMessage":"[Consumer clientId=consumer-group_json-4, groupId=group_json] Notifying assignor about the new Assignment(partitions=[customer-topic-1-0, customer-topic-1-1, customer-topic-1-2, customer-topic-1-3, customer-topic-1-4, customer-topic-1-5, customer-topic-1-6, customer-topic-1-7, customer-topic-1-8, customer-topic-1-9])","class":"org.apache.kafka.clients.consumer.internals.ConsumerCoordinator","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:48:17.818Z","appMessage":"[Consumer clientId=consumer-group_id-5, groupId=group_id] (Re-)joining group","class":"org.apache.kafka.clients.consumer.internals.AbstractCoordinator","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:48:17.819Z","appMessage":"[Consumer clientId=consumer-group_json-4, groupId=group_json] Adding newly assigned partitions: customer-topic-1-0, customer-topic-1-1, customer-topic-1-2, customer-topic-1-3, customer-topic-1-4, customer-topic-1-5, customer-topic-1-6, customer-topic-1-7, customer-topic-1-8, customer-topic-1-9","class":"org.apache.kafka.clients.consumer.internals.ConsumerCoordinator","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:48:17.821Z","appMessage":"[Consumer clientId=consumer-group_json-4, groupId=group_json] Found no committed offset for partition customer-topic-1-0","class":"org.apache.kafka.clients.consumer.internals.ConsumerCoordinator","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:48:17.822Z","appMessage":"[Consumer clientId=consumer-group_json-4, groupId=group_json] Found no committed offset for partition customer-topic-1-1","class":"org.apache.kafka.clients.consumer.internals.ConsumerCoordinator","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:48:17.822Z","appMessage":"[Consumer clientId=consumer-group_id-5, groupId=group_id] (Re-)joining group","class":"org.apache.kafka.clients.consumer.internals.AbstractCoordinator","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:48:17.823Z","appMessage":"[Consumer clientId=consumer-group_json-4, groupId=group_json] Found no committed offset for partition customer-topic-1-2","class":"org.apache.kafka.clients.consumer.internals.ConsumerCoordinator","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:48:17.824Z","appMessage":"[Consumer clientId=consumer-group_json-4, groupId=group_json] Found no committed offset for partition customer-topic-1-3","class":"org.apache.kafka.clients.consumer.internals.ConsumerCoordinator","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:48:17.824Z","appMessage":"[Consumer clientId=consumer-group_json-4, groupId=group_json] Found no committed offset for partition customer-topic-1-4","class":"org.apache.kafka.clients.consumer.internals.ConsumerCoordinator","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:48:17.825Z","appMessage":"[Consumer clientId=consumer-group_json-4, groupId=group_json] Found no committed offset for partition customer-topic-1-5","class":"org.apache.kafka.clients.consumer.internals.ConsumerCoordinator","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:48:17.826Z","appMessage":"[Consumer clientId=consumer-group_json-4, groupId=group_json] Found no committed offset for partition customer-topic-1-6","class":"org.apache.kafka.clients.consumer.internals.ConsumerCoordinator","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:48:17.826Z","appMessage":"[Consumer clientId=consumer-group_json-4, groupId=group_json] Found no committed offset for partition customer-topic-1-7","class":"org.apache.kafka.clients.consumer.internals.ConsumerCoordinator","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:48:17.827Z","appMessage":"[Consumer clientId=consumer-group_id-5, groupId=group_id] Successfully joined group with generation Generation{generationId=5, memberId='consumer-group_id-5-ef6e300a-aa14-4534-b705-496d4561109f', protocol='range'}","class":"org.apache.kafka.clients.consumer.internals.AbstractCoordinator","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:48:17.827Z","appMessage":"[Consumer clientId=consumer-group_json-4, groupId=group_json] Found no committed offset for partition customer-topic-1-8","class":"org.apache.kafka.clients.consumer.internals.ConsumerCoordinator","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:48:17.828Z","appMessage":"[Consumer clientId=consumer-group_id-5, groupId=group_id] Finished assignment for group at generation 5: {consumer-group_id-5-ef6e300a-aa14-4534-b705-496d4561109f=Assignment(partitions=[customer-topic-2-0])}","class":"org.apache.kafka.clients.consumer.internals.ConsumerCoordinator","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:48:17.828Z","appMessage":"[Consumer clientId=consumer-group_json-4, groupId=group_json] Found no committed offset for partition customer-topic-1-9","class":"org.apache.kafka.clients.consumer.internals.ConsumerCoordinator","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:48:17.832Z","appMessage":"[Consumer clientId=consumer-group_json-4, groupId=group_json] Found no committed offset for partition customer-topic-1-0","class":"org.apache.kafka.clients.consumer.internals.ConsumerCoordinator","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:48:17.832Z","appMessage":"Started Application in 1.047 seconds (JVM running for 567.615)","class":"com.aslan.kafka.Application","thread":"restartedMain","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:48:17.832Z","appMessage":"[Consumer clientId=consumer-group_json-4, groupId=group_json] Found no committed offset for partition customer-topic-1-1","class":"org.apache.kafka.clients.consumer.internals.ConsumerCoordinator","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:48:17.833Z","appMessage":"[Consumer clientId=consumer-group_id-5, groupId=group_id] Successfully synced group in generation Generation{generationId=5, memberId='consumer-group_id-5-ef6e300a-aa14-4534-b705-496d4561109f', protocol='range'}","class":"org.apache.kafka.clients.consumer.internals.AbstractCoordinator","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:48:17.833Z","appMessage":"[Consumer clientId=consumer-group_json-4, groupId=group_json] Found no committed offset for partition customer-topic-1-2","class":"org.apache.kafka.clients.consumer.internals.ConsumerCoordinator","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:48:17.834Z","appMessage":"[Consumer clientId=consumer-group_id-5, groupId=group_id] Notifying assignor about the new Assignment(partitions=[customer-topic-2-0])","class":"org.apache.kafka.clients.consumer.internals.ConsumerCoordinator","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:48:17.834Z","appMessage":"[Consumer clientId=consumer-group_json-4, groupId=group_json] Found no committed offset for partition customer-topic-1-3","class":"org.apache.kafka.clients.consumer.internals.ConsumerCoordinator","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:48:17.835Z","appMessage":"[Consumer clientId=consumer-group_id-5, groupId=group_id] Adding newly assigned partitions: customer-topic-2-0","class":"org.apache.kafka.clients.consumer.internals.ConsumerCoordinator","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:48:17.836Z","appMessage":"Condition evaluation unchanged","class":"org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener","thread":"restartedMain","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:48:17.836Z","appMessage":"[Consumer clientId=consumer-group_json-4, groupId=group_json] Found no committed offset for partition customer-topic-1-4","class":"org.apache.kafka.clients.consumer.internals.ConsumerCoordinator","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:48:17.838Z","appMessage":"[Consumer clientId=consumer-group_json-4, groupId=group_json] Found no committed offset for partition customer-topic-1-5","class":"org.apache.kafka.clients.consumer.internals.ConsumerCoordinator","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:48:17.838Z","appMessage":"[Consumer clientId=consumer-group_id-5, groupId=group_id] Found no committed offset for partition customer-topic-2-0","class":"org.apache.kafka.clients.consumer.internals.ConsumerCoordinator","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:48:17.839Z","appMessage":"[Consumer clientId=consumer-group_json-4, groupId=group_json] Found no committed offset for partition customer-topic-1-6","class":"org.apache.kafka.clients.consumer.internals.ConsumerCoordinator","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:48:17.840Z","appMessage":"[Consumer clientId=consumer-group_json-4, groupId=group_json] Found no committed offset for partition customer-topic-1-7","class":"org.apache.kafka.clients.consumer.internals.ConsumerCoordinator","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:48:17.841Z","appMessage":"[Consumer clientId=consumer-group_json-4, groupId=group_json] Found no committed offset for partition customer-topic-1-8","class":"org.apache.kafka.clients.consumer.internals.ConsumerCoordinator","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:48:17.841Z","appMessage":"[Consumer clientId=consumer-group_id-5, groupId=group_id] Found no committed offset for partition customer-topic-2-0","class":"org.apache.kafka.clients.consumer.internals.ConsumerCoordinator","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:48:17.841Z","appMessage":"[Consumer clientId=consumer-group_json-4, groupId=group_json] Found no committed offset for partition customer-topic-1-9","class":"org.apache.kafka.clients.consumer.internals.ConsumerCoordinator","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:48:17.846Z","appMessage":"[Consumer clientId=consumer-group_id-5, groupId=group_id] Resetting offset for partition customer-topic-2-0 to position FetchPosition{offset=2, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[Officeroom:9092 (id: 0 rack: null)], epoch=absent}}.","class":"org.apache.kafka.clients.consumer.internals.SubscriptionState","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:48:17.847Z","appMessage":"[Consumer clientId=consumer-group_json-4, groupId=group_json] Resetting offset for partition customer-topic-1-0 to position FetchPosition{offset=5, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[Officeroom:9092 (id: 0 rack: null)], epoch=absent}}.","class":"org.apache.kafka.clients.consumer.internals.SubscriptionState","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:48:17.848Z","appMessage":"[Consumer clientId=consumer-group_json-4, groupId=group_json] Resetting offset for partition customer-topic-1-1 to position FetchPosition{offset=5, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[Officeroom:9092 (id: 0 rack: null)], epoch=absent}}.","class":"org.apache.kafka.clients.consumer.internals.SubscriptionState","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:48:17.848Z","appMessage":"[Consumer clientId=consumer-group_json-4, groupId=group_json] Resetting offset for partition customer-topic-1-2 to position FetchPosition{offset=5, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[Officeroom:9092 (id: 0 rack: null)], epoch=absent}}.","class":"org.apache.kafka.clients.consumer.internals.SubscriptionState","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:48:17.849Z","appMessage":"[Consumer clientId=consumer-group_json-4, groupId=group_json] Resetting offset for partition customer-topic-1-3 to position FetchPosition{offset=5, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[Officeroom:9092 (id: 0 rack: null)], epoch=absent}}.","class":"org.apache.kafka.clients.consumer.internals.SubscriptionState","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:48:17.849Z","appMessage":"group_id: partitions assigned: [customer-topic-2-0]","class":"org.springframework.kafka.listener.KafkaMessageListenerContainer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:48:17.850Z","appMessage":"[Consumer clientId=consumer-group_json-4, groupId=group_json] Resetting offset for partition customer-topic-1-4 to position FetchPosition{offset=5, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[Officeroom:9092 (id: 0 rack: null)], epoch=absent}}.","class":"org.apache.kafka.clients.consumer.internals.SubscriptionState","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:48:17.851Z","appMessage":"[Consumer clientId=consumer-group_json-4, groupId=group_json] Resetting offset for partition customer-topic-1-5 to position FetchPosition{offset=5, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[Officeroom:9092 (id: 0 rack: null)], epoch=absent}}.","class":"org.apache.kafka.clients.consumer.internals.SubscriptionState","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:48:17.851Z","appMessage":"[Consumer clientId=consumer-group_json-4, groupId=group_json] Resetting offset for partition customer-topic-1-6 to position FetchPosition{offset=5, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[Officeroom:9092 (id: 0 rack: null)], epoch=absent}}.","class":"org.apache.kafka.clients.consumer.internals.SubscriptionState","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:48:17.852Z","appMessage":"[Consumer clientId=consumer-group_json-4, groupId=group_json] Resetting offset for partition customer-topic-1-7 to position FetchPosition{offset=5, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[Officeroom:9092 (id: 0 rack: null)], epoch=absent}}.","class":"org.apache.kafka.clients.consumer.internals.SubscriptionState","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:48:17.852Z","appMessage":"[Consumer clientId=consumer-group_json-4, groupId=group_json] Resetting offset for partition customer-topic-1-8 to position FetchPosition{offset=5, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[Officeroom:9092 (id: 0 rack: null)], epoch=absent}}.","class":"org.apache.kafka.clients.consumer.internals.SubscriptionState","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:48:17.853Z","appMessage":"[Consumer clientId=consumer-group_json-4, groupId=group_json] Resetting offset for partition customer-topic-1-9 to position FetchPosition{offset=5, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[Officeroom:9092 (id: 0 rack: null)], epoch=absent}}.","class":"org.apache.kafka.clients.consumer.internals.SubscriptionState","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:48:17.857Z","appMessage":"group_json: partitions assigned: [customer-topic-1-0, customer-topic-1-1, customer-topic-1-2, customer-topic-1-3, customer-topic-1-4, customer-topic-1-5, customer-topic-1-6, customer-topic-1-7, customer-topic-1-8, customer-topic-1-9]","class":"org.springframework.kafka.listener.KafkaMessageListenerContainer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:48:34.484Z","appMessage":"[Consumer clientId=consumer-group_id-5, groupId=group_id] Revoke previously assigned partitions customer-topic-2-0","class":"org.apache.kafka.clients.consumer.internals.ConsumerCoordinator","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:48:34.484Z","appMessage":"[Consumer clientId=consumer-group_json-4, groupId=group_json] Revoke previously assigned partitions customer-topic-1-0, customer-topic-1-1, customer-topic-1-2, customer-topic-1-3, customer-topic-1-4, customer-topic-1-5, customer-topic-1-6, customer-topic-1-7, customer-topic-1-8, customer-topic-1-9","class":"org.apache.kafka.clients.consumer.internals.ConsumerCoordinator","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:48:34.485Z","appMessage":"group_id: partitions revoked: [customer-topic-2-0]","class":"org.springframework.kafka.listener.KafkaMessageListenerContainer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:48:34.485Z","appMessage":"group_json: partitions revoked: [customer-topic-1-0, customer-topic-1-1, customer-topic-1-2, customer-topic-1-3, customer-topic-1-4, customer-topic-1-5, customer-topic-1-6, customer-topic-1-7, customer-topic-1-8, customer-topic-1-9]","class":"org.springframework.kafka.listener.KafkaMessageListenerContainer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:48:34.486Z","appMessage":"[Consumer clientId=consumer-group_id-5, groupId=group_id] Member consumer-group_id-5-ef6e300a-aa14-4534-b705-496d4561109f sending LeaveGroup request to coordinator Officeroom:9092 (id: 2147483647 rack: null) due to the consumer unsubscribed from all topics","class":"org.apache.kafka.clients.consumer.internals.AbstractCoordinator","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:48:34.486Z","appMessage":"[Consumer clientId=consumer-group_json-4, groupId=group_json] Member consumer-group_json-4-79ebac57-cce8-4ee6-9e44-9aaf2d4bbef7 sending LeaveGroup request to coordinator Officeroom:9092 (id: 2147483647 rack: null) due to the consumer unsubscribed from all topics","class":"org.apache.kafka.clients.consumer.internals.AbstractCoordinator","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:48:34.487Z","appMessage":"[Consumer clientId=consumer-group_id-5, groupId=group_id] Unsubscribed all topics or patterns and assigned partitions","class":"org.apache.kafka.clients.consumer.KafkaConsumer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:48:34.487Z","appMessage":"[Consumer clientId=consumer-group_json-4, groupId=group_json] Unsubscribed all topics or patterns and assigned partitions","class":"org.apache.kafka.clients.consumer.KafkaConsumer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:48:34.492Z","appMessage":"Metrics scheduler closed","class":"org.apache.kafka.common.metrics.Metrics","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:48:34.492Z","appMessage":"Metrics scheduler closed","class":"org.apache.kafka.common.metrics.Metrics","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:48:34.493Z","appMessage":"Closing reporter org.apache.kafka.common.metrics.JmxReporter","class":"org.apache.kafka.common.metrics.Metrics","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:48:34.493Z","appMessage":"Closing reporter org.apache.kafka.common.metrics.JmxReporter","class":"org.apache.kafka.common.metrics.Metrics","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:48:34.494Z","appMessage":"Metrics reporters closed","class":"org.apache.kafka.common.metrics.Metrics","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:48:34.494Z","appMessage":"Metrics reporters closed","class":"org.apache.kafka.common.metrics.Metrics","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:48:34.500Z","appMessage":"App info kafka.consumer for consumer-group_id-5 unregistered","class":"org.apache.kafka.common.utils.AppInfoParser","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:48:34.500Z","appMessage":"group_id: Consumer stopped","class":"org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:48:34.500Z","appMessage":"App info kafka.consumer for consumer-group_json-4 unregistered","class":"org.apache.kafka.common.utils.AppInfoParser","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:48:34.501Z","appMessage":"group_json: Consumer stopped","class":"org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:48:34.729Z","appMessage":"Starting Application using Java 1.8.0_202 on Officeroom with PID 55836 (C:\\Users\\Officeroom\\JavaProj\\sb-aslan-kafka-template\\target\\classes started by Officeroom in C:\\Users\\Officeroom\\JavaProj\\sb-aslan-kafka-template)","class":"com.aslan.kafka.Application","thread":"restartedMain","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:48:34.730Z","appMessage":"The following profiles are active: local","class":"com.aslan.kafka.Application","thread":"restartedMain","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:48:35.210Z","appMessage":"Tomcat initialized with port(s): 8080 (http)","class":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread":"restartedMain","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:48:35.211Z","appMessage":"Initializing ProtocolHandler [\"http-nio-8080\"]","class":"org.apache.coyote.http11.Http11NioProtocol","thread":"restartedMain","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:48:35.212Z","appMessage":"Starting service [Tomcat]","class":"org.apache.catalina.core.StandardService","thread":"restartedMain","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:48:35.212Z","appMessage":"Starting Servlet engine: [Apache Tomcat/9.0.48]","class":"org.apache.catalina.core.StandardEngine","thread":"restartedMain","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:48:35.246Z","appMessage":"Initializing Spring embedded WebApplicationContext","class":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]","thread":"restartedMain","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:48:35.247Z","appMessage":"Root WebApplicationContext: initialization completed in 513 ms","class":"org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext","thread":"restartedMain","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:48:35.416Z","appMessage":"Cannot find template location: classpath:/templates/ (please add some templates, check your Mustache configuration, or set spring.mustache.check-template-location=false)","class":"org.springframework.boot.autoconfigure.mustache.MustacheAutoConfiguration","thread":"restartedMain","level":"WARN","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:48:35.423Z","appMessage":"Cannot find template location: classpath:/templates/ (please add some templates or check your Thymeleaf configuration)","class":"org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$DefaultTemplateResolverConfiguration","thread":"restartedMain","level":"WARN","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:48:35.512Z","appMessage":"LiveReload server is running on port 35729","class":"org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer","thread":"restartedMain","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:48:35.517Z","appMessage":"Exposing 13 endpoint(s) beneath base path ''","class":"org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver","thread":"restartedMain","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:48:35.551Z","appMessage":"ConsumerConfig values: \r\n\tallow.auto.create.topics = true\r\n\tauto.commit.interval.ms = 5000\r\n\tauto.offset.reset = latest\r\n\tbootstrap.servers = [127.0.0.1:9092]\r\n\tcheck.crcs = true\r\n\tclient.dns.lookup = use_all_dns_ips\r\n\tclient.id = consumer-group_id-6\r\n\tclient.rack = \r\n\tconnections.max.idle.ms = 540000\r\n\tdefault.api.timeout.ms = 60000\r\n\tenable.auto.commit = false\r\n\texclude.internal.topics = true\r\n\tfetch.max.bytes = 52428800\r\n\tfetch.max.wait.ms = 500\r\n\tfetch.min.bytes = 1\r\n\tgroup.id = group_id\r\n\tgroup.instance.id = null\r\n\theartbeat.interval.ms = 3000\r\n\tinterceptor.classes = []\r\n\tinternal.leave.group.on.close = true\r\n\tinternal.throw.on.fetch.stable.offset.unsupported = false\r\n\tisolation.level = read_uncommitted\r\n\tkey.deserializer = class org.apache.kafka.common.serialization.StringDeserializer\r\n\tmax.partition.fetch.bytes = 1048576\r\n\tmax.poll.interval.ms = 300000\r\n\tmax.poll.records = 500\r\n\tmetadata.max.age.ms = 300000\r\n\tmetric.reporters = []\r\n\tmetrics.num.samples = 2\r\n\tmetrics.recording.level = INFO\r\n\tmetrics.sample.window.ms = 30000\r\n\tpartition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor]\r\n\treceive.buffer.bytes = 65536\r\n\treconnect.backoff.max.ms = 1000\r\n\treconnect.backoff.ms = 50\r\n\trequest.timeout.ms = 30000\r\n\tretry.backoff.ms = 100\r\n\tsasl.client.callback.handler.class = null\r\n\tsasl.jaas.config = null\r\n\tsasl.kerberos.kinit.cmd = /usr/bin/kinit\r\n\tsasl.kerberos.min.time.before.relogin = 60000\r\n\tsasl.kerberos.service.name = null\r\n\tsasl.kerberos.ticket.renew.jitter = 0.05\r\n\tsasl.kerberos.ticket.renew.window.factor = 0.8\r\n\tsasl.login.callback.handler.class = null\r\n\tsasl.login.class = null\r\n\tsasl.login.refresh.buffer.seconds = 300\r\n\tsasl.login.refresh.min.period.seconds = 60\r\n\tsasl.login.refresh.window.factor = 0.8\r\n\tsasl.login.refresh.window.jitter = 0.05\r\n\tsasl.mechanism = GSSAPI\r\n\tsecurity.protocol = PLAINTEXT\r\n\tsecurity.providers = null\r\n\tsend.buffer.bytes = 131072\r\n\tsession.timeout.ms = 10000\r\n\tsocket.connection.setup.timeout.max.ms = 127000\r\n\tsocket.connection.setup.timeout.ms = 10000\r\n\tssl.cipher.suites = null\r\n\tssl.enabled.protocols = [TLSv1.2]\r\n\tssl.endpoint.identification.algorithm = https\r\n\tssl.engine.factory.class = null\r\n\tssl.key.password = null\r\n\tssl.keymanager.algorithm = SunX509\r\n\tssl.keystore.certificate.chain = null\r\n\tssl.keystore.key = null\r\n\tssl.keystore.location = null\r\n\tssl.keystore.password = null\r\n\tssl.keystore.type = JKS\r\n\tssl.protocol = TLSv1.2\r\n\tssl.provider = null\r\n\tssl.secure.random.implementation = null\r\n\tssl.trustmanager.algorithm = PKIX\r\n\tssl.truststore.certificates = null\r\n\tssl.truststore.location = null\r\n\tssl.truststore.password = null\r\n\tssl.truststore.type = JKS\r\n\tvalue.deserializer = class org.apache.kafka.common.serialization.StringDeserializer\r\n","class":"org.apache.kafka.clients.consumer.ConsumerConfig","thread":"restartedMain","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:48:35.563Z","appMessage":"Kafka version: 2.7.1","class":"org.apache.kafka.common.utils.AppInfoParser","thread":"restartedMain","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:48:35.564Z","appMessage":"Kafka commitId: 61dbce85d0d41457","class":"org.apache.kafka.common.utils.AppInfoParser","thread":"restartedMain","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:48:35.564Z","appMessage":"Kafka startTimeMs: 1627019315563","class":"org.apache.kafka.common.utils.AppInfoParser","thread":"restartedMain","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:48:35.565Z","appMessage":"[Consumer clientId=consumer-group_id-6, groupId=group_id] Subscribed to topic(s): customer-topic-2","class":"org.apache.kafka.clients.consumer.KafkaConsumer","thread":"restartedMain","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:48:35.567Z","appMessage":"Starting ProtocolHandler [\"http-nio-8080\"]","class":"org.apache.coyote.http11.Http11NioProtocol","thread":"restartedMain","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:48:35.570Z","appMessage":"Tomcat started on port(s): 8080 (http) with context path ''","class":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread":"restartedMain","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:48:35.572Z","appMessage":"[Consumer clientId=consumer-group_id-6, groupId=group_id] Cluster ID: Iu9DHTQ6SReFUqKIFFqxlQ","class":"org.apache.kafka.clients.Metadata","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:48:35.573Z","appMessage":"[Consumer clientId=consumer-group_id-6, groupId=group_id] Discovered group coordinator Officeroom:9092 (id: 2147483647 rack: null)","class":"org.apache.kafka.clients.consumer.internals.AbstractCoordinator","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:48:35.575Z","appMessage":"[Consumer clientId=consumer-group_id-6, groupId=group_id] (Re-)joining group","class":"org.apache.kafka.clients.consumer.internals.AbstractCoordinator","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:48:35.577Z","appMessage":"[Consumer clientId=consumer-group_id-6, groupId=group_id] (Re-)joining group","class":"org.apache.kafka.clients.consumer.internals.AbstractCoordinator","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:48:35.580Z","appMessage":"[Consumer clientId=consumer-group_id-6, groupId=group_id] Successfully joined group with generation Generation{generationId=7, memberId='consumer-group_id-6-11c94dd3-922b-41ce-b67d-633f7e698d74', protocol='range'}","class":"org.apache.kafka.clients.consumer.internals.AbstractCoordinator","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:48:35.581Z","appMessage":"[Consumer clientId=consumer-group_id-6, groupId=group_id] Finished assignment for group at generation 7: {consumer-group_id-6-11c94dd3-922b-41ce-b67d-633f7e698d74=Assignment(partitions=[customer-topic-2-0])}","class":"org.apache.kafka.clients.consumer.internals.ConsumerCoordinator","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:48:35.586Z","appMessage":"[Consumer clientId=consumer-group_id-6, groupId=group_id] Successfully synced group in generation Generation{generationId=7, memberId='consumer-group_id-6-11c94dd3-922b-41ce-b67d-633f7e698d74', protocol='range'}","class":"org.apache.kafka.clients.consumer.internals.AbstractCoordinator","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:48:35.586Z","appMessage":"Started Application in 0.921 seconds (JVM running for 585.368)","class":"com.aslan.kafka.Application","thread":"restartedMain","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:48:35.586Z","appMessage":"[Consumer clientId=consumer-group_id-6, groupId=group_id] Notifying assignor about the new Assignment(partitions=[customer-topic-2-0])","class":"org.apache.kafka.clients.consumer.internals.ConsumerCoordinator","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:48:35.587Z","appMessage":"[Consumer clientId=consumer-group_id-6, groupId=group_id] Adding newly assigned partitions: customer-topic-2-0","class":"org.apache.kafka.clients.consumer.internals.ConsumerCoordinator","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:48:35.589Z","appMessage":"Condition evaluation unchanged","class":"org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener","thread":"restartedMain","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:48:35.590Z","appMessage":"[Consumer clientId=consumer-group_id-6, groupId=group_id] Setting offset for partition customer-topic-2-0 to the committed offset FetchPosition{offset=2, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[Officeroom:9092 (id: 0 rack: null)], epoch=absent}}","class":"org.apache.kafka.clients.consumer.internals.ConsumerCoordinator","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:48:35.591Z","appMessage":"group_id: partitions assigned: [customer-topic-2-0]","class":"org.springframework.kafka.listener.KafkaMessageListenerContainer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:48:51.166Z","appMessage":"Backoff none exhausted for customer-topic-2-0@2","class":"org.springframework.kafka.listener.SeekToCurrentErrorHandler","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"ERROR","exception":"org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method could not be invoked with the incoming message\nEndpoint handler details:\nMethod [public void com.aslan.kafka.service.KafkaConsumer.consumeJson(com.aslan.kafka.model.User)]\nBean [com.aslan.kafka.service.KafkaConsumer@3d0e984b]; nested exception is org.springframework.messaging.converter.MessageConversionException: Cannot handle message; nested exception is org.springframework.messaging.converter.MessageConversionException: Cannot convert from [java.lang.String] to [com.aslan.kafka.model.User] for GenericMessage [payload=are you there, headers={kafka_offset=2, kafka_consumer=org.apache.kafka.clients.consumer.KafkaConsumer@30b5ebf5, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=0, kafka_receivedTopic=customer-topic-2, kafka_receivedTimestamp=1627019330160, kafka_groupId=group_id}], failedMessage=GenericMessage [payload=are you there, headers={kafka_offset=2, kafka_consumer=org.apache.kafka.clients.consumer.KafkaConsumer@30b5ebf5, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=0, kafka_receivedTopic=customer-topic-2, kafka_receivedTimestamp=1627019330160, kafka_groupId=group_id}]; nested exception is org.springframework.messaging.converter.MessageConversionException: Cannot handle message; nested exception is org.springframework.messaging.converter.MessageConversionException: Cannot convert from [java.lang.String] to [com.aslan.kafka.model.User] for GenericMessage [payload=are you there, headers={kafka_offset=2, kafka_consumer=org.apache.kafka.clients.consumer.KafkaConsumer@30b5ebf5, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=0, kafka_receivedTopic=customer-topic-2, kafka_receivedTimestamp=1627019330160, kafka_groupId=group_id}], failedMessage=GenericMessage [payload=are you there, headers={kafka_offset=2, kafka_consumer=org.apache.kafka.clients.consumer.KafkaConsumer@30b5ebf5, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=0, kafka_receivedTopic=customer-topic-2, kafka_receivedTimestamp=1627019330160, kafka_groupId=group_id}]\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2368)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2339)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2300)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2214)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2139)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2021)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1703)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1272)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1264)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1161)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.springframework.messaging.converter.MessageConversionException: Cannot handle message; nested exception is org.springframework.messaging.converter.MessageConversionException: Cannot convert from [java.lang.String] to [com.aslan.kafka.model.User] for GenericMessage [payload=are you there, headers={kafka_offset=2, kafka_consumer=org.apache.kafka.clients.consumer.KafkaConsumer@30b5ebf5, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=0, kafka_receivedTopic=customer-topic-2, kafka_receivedTimestamp=1627019330160, kafka_groupId=group_id}], failedMessage=GenericMessage [payload=are you there, headers={kafka_offset=2, kafka_consumer=org.apache.kafka.clients.consumer.KafkaConsumer@30b5ebf5, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=0, kafka_receivedTopic=customer-topic-2, kafka_receivedTimestamp=1627019330160, kafka_groupId=group_id}]\r\n\tat org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:352)\r\n\tat org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)\r\n\tat org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2319)\r\n\t... 11 common frames omitted\r\nCaused by: org.springframework.messaging.converter.MessageConversionException: Cannot convert from [java.lang.String] to [com.aslan.kafka.model.User] for GenericMessage [payload=are you there, headers={kafka_offset=2, kafka_consumer=org.apache.kafka.clients.consumer.KafkaConsumer@30b5ebf5, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=0, kafka_receivedTopic=customer-topic-2, kafka_receivedTimestamp=1627019330160, kafka_groupId=group_id}]\r\n\tat org.springframework.messaging.handler.annotation.support.PayloadMethodArgumentResolver.resolveArgument(PayloadMethodArgumentResolver.java:145)\r\n\tat org.springframework.kafka.annotation.KafkaListenerAnnotationBeanPostProcessor$KafkaNullAwarePayloadArgumentResolver.resolveArgument(KafkaListenerAnnotationBeanPostProcessor.java:1123)\r\n\tat org.springframework.messaging.handler.invocation.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:117)\r\n\tat org.springframework.messaging.handler.invocation.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:148)\r\n\tat org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:116)\r\n\tat org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)\r\n\tat org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:347)\r\n\t... 14 common frames omitted\r\n","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:50:21.167Z","appMessage":"[Consumer clientId=consumer-group_id-6, groupId=group_id] Revoke previously assigned partitions customer-topic-2-0","class":"org.apache.kafka.clients.consumer.internals.ConsumerCoordinator","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:50:21.168Z","appMessage":"group_id: partitions revoked: [customer-topic-2-0]","class":"org.springframework.kafka.listener.KafkaMessageListenerContainer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:50:21.168Z","appMessage":"[Consumer clientId=consumer-group_id-6, groupId=group_id] Member consumer-group_id-6-11c94dd3-922b-41ce-b67d-633f7e698d74 sending LeaveGroup request to coordinator Officeroom:9092 (id: 2147483647 rack: null) due to the consumer unsubscribed from all topics","class":"org.apache.kafka.clients.consumer.internals.AbstractCoordinator","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:50:21.169Z","appMessage":"[Consumer clientId=consumer-group_id-6, groupId=group_id] Unsubscribed all topics or patterns and assigned partitions","class":"org.apache.kafka.clients.consumer.KafkaConsumer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:50:21.173Z","appMessage":"Metrics scheduler closed","class":"org.apache.kafka.common.metrics.Metrics","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:50:21.173Z","appMessage":"Closing reporter org.apache.kafka.common.metrics.JmxReporter","class":"org.apache.kafka.common.metrics.Metrics","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:50:21.174Z","appMessage":"Metrics reporters closed","class":"org.apache.kafka.common.metrics.Metrics","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:50:21.176Z","appMessage":"App info kafka.consumer for consumer-group_id-6 unregistered","class":"org.apache.kafka.common.utils.AppInfoParser","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:50:21.177Z","appMessage":"group_id: Consumer stopped","class":"org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:50:21.435Z","appMessage":"Starting Application using Java 1.8.0_202 on Officeroom with PID 55836 (C:\\Users\\Officeroom\\JavaProj\\sb-aslan-kafka-template\\target\\classes started by Officeroom in C:\\Users\\Officeroom\\JavaProj\\sb-aslan-kafka-template)","class":"com.aslan.kafka.Application","thread":"restartedMain","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:50:21.436Z","appMessage":"The following profiles are active: local","class":"com.aslan.kafka.Application","thread":"restartedMain","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:50:22.007Z","appMessage":"Tomcat initialized with port(s): 8080 (http)","class":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread":"restartedMain","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:50:22.008Z","appMessage":"Initializing ProtocolHandler [\"http-nio-8080\"]","class":"org.apache.coyote.http11.Http11NioProtocol","thread":"restartedMain","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:50:22.009Z","appMessage":"Starting service [Tomcat]","class":"org.apache.catalina.core.StandardService","thread":"restartedMain","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:50:22.009Z","appMessage":"Starting Servlet engine: [Apache Tomcat/9.0.48]","class":"org.apache.catalina.core.StandardEngine","thread":"restartedMain","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:50:22.050Z","appMessage":"Initializing Spring embedded WebApplicationContext","class":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]","thread":"restartedMain","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:50:22.050Z","appMessage":"Root WebApplicationContext: initialization completed in 610 ms","class":"org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext","thread":"restartedMain","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:50:22.203Z","appMessage":"Cannot find template location: classpath:/templates/ (please add some templates, check your Mustache configuration, or set spring.mustache.check-template-location=false)","class":"org.springframework.boot.autoconfigure.mustache.MustacheAutoConfiguration","thread":"restartedMain","level":"WARN","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:50:22.210Z","appMessage":"Cannot find template location: classpath:/templates/ (please add some templates or check your Thymeleaf configuration)","class":"org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$DefaultTemplateResolverConfiguration","thread":"restartedMain","level":"WARN","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:50:22.292Z","appMessage":"LiveReload server is running on port 35729","class":"org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer","thread":"restartedMain","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:50:22.296Z","appMessage":"Exposing 13 endpoint(s) beneath base path ''","class":"org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver","thread":"restartedMain","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:50:22.319Z","appMessage":"ConsumerConfig values: \r\n\tallow.auto.create.topics = true\r\n\tauto.commit.interval.ms = 5000\r\n\tauto.offset.reset = latest\r\n\tbootstrap.servers = [127.0.0.1:9092]\r\n\tcheck.crcs = true\r\n\tclient.dns.lookup = use_all_dns_ips\r\n\tclient.id = consumer-group_id-7\r\n\tclient.rack = \r\n\tconnections.max.idle.ms = 540000\r\n\tdefault.api.timeout.ms = 60000\r\n\tenable.auto.commit = false\r\n\texclude.internal.topics = true\r\n\tfetch.max.bytes = 52428800\r\n\tfetch.max.wait.ms = 500\r\n\tfetch.min.bytes = 1\r\n\tgroup.id = group_id\r\n\tgroup.instance.id = null\r\n\theartbeat.interval.ms = 3000\r\n\tinterceptor.classes = []\r\n\tinternal.leave.group.on.close = true\r\n\tinternal.throw.on.fetch.stable.offset.unsupported = false\r\n\tisolation.level = read_uncommitted\r\n\tkey.deserializer = class org.apache.kafka.common.serialization.StringDeserializer\r\n\tmax.partition.fetch.bytes = 1048576\r\n\tmax.poll.interval.ms = 300000\r\n\tmax.poll.records = 500\r\n\tmetadata.max.age.ms = 300000\r\n\tmetric.reporters = []\r\n\tmetrics.num.samples = 2\r\n\tmetrics.recording.level = INFO\r\n\tmetrics.sample.window.ms = 30000\r\n\tpartition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor]\r\n\treceive.buffer.bytes = 65536\r\n\treconnect.backoff.max.ms = 1000\r\n\treconnect.backoff.ms = 50\r\n\trequest.timeout.ms = 30000\r\n\tretry.backoff.ms = 100\r\n\tsasl.client.callback.handler.class = null\r\n\tsasl.jaas.config = null\r\n\tsasl.kerberos.kinit.cmd = /usr/bin/kinit\r\n\tsasl.kerberos.min.time.before.relogin = 60000\r\n\tsasl.kerberos.service.name = null\r\n\tsasl.kerberos.ticket.renew.jitter = 0.05\r\n\tsasl.kerberos.ticket.renew.window.factor = 0.8\r\n\tsasl.login.callback.handler.class = null\r\n\tsasl.login.class = null\r\n\tsasl.login.refresh.buffer.seconds = 300\r\n\tsasl.login.refresh.min.period.seconds = 60\r\n\tsasl.login.refresh.window.factor = 0.8\r\n\tsasl.login.refresh.window.jitter = 0.05\r\n\tsasl.mechanism = GSSAPI\r\n\tsecurity.protocol = PLAINTEXT\r\n\tsecurity.providers = null\r\n\tsend.buffer.bytes = 131072\r\n\tsession.timeout.ms = 10000\r\n\tsocket.connection.setup.timeout.max.ms = 127000\r\n\tsocket.connection.setup.timeout.ms = 10000\r\n\tssl.cipher.suites = null\r\n\tssl.enabled.protocols = [TLSv1.2]\r\n\tssl.endpoint.identification.algorithm = https\r\n\tssl.engine.factory.class = null\r\n\tssl.key.password = null\r\n\tssl.keymanager.algorithm = SunX509\r\n\tssl.keystore.certificate.chain = null\r\n\tssl.keystore.key = null\r\n\tssl.keystore.location = null\r\n\tssl.keystore.password = null\r\n\tssl.keystore.type = JKS\r\n\tssl.protocol = TLSv1.2\r\n\tssl.provider = null\r\n\tssl.secure.random.implementation = null\r\n\tssl.trustmanager.algorithm = PKIX\r\n\tssl.truststore.certificates = null\r\n\tssl.truststore.location = null\r\n\tssl.truststore.password = null\r\n\tssl.truststore.type = JKS\r\n\tvalue.deserializer = class org.apache.kafka.common.serialization.StringDeserializer\r\n","class":"org.apache.kafka.clients.consumer.ConsumerConfig","thread":"restartedMain","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:50:22.332Z","appMessage":"Kafka version: 2.7.1","class":"org.apache.kafka.common.utils.AppInfoParser","thread":"restartedMain","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:50:22.332Z","appMessage":"Kafka commitId: 61dbce85d0d41457","class":"org.apache.kafka.common.utils.AppInfoParser","thread":"restartedMain","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:50:22.332Z","appMessage":"Kafka startTimeMs: 1627019422332","class":"org.apache.kafka.common.utils.AppInfoParser","thread":"restartedMain","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:50:22.333Z","appMessage":"[Consumer clientId=consumer-group_id-7, groupId=group_id] Subscribed to topic(s): customer-topic-2","class":"org.apache.kafka.clients.consumer.KafkaConsumer","thread":"restartedMain","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:50:22.335Z","appMessage":"Starting ProtocolHandler [\"http-nio-8080\"]","class":"org.apache.coyote.http11.Http11NioProtocol","thread":"restartedMain","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:50:22.339Z","appMessage":"Tomcat started on port(s): 8080 (http) with context path ''","class":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread":"restartedMain","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:50:22.340Z","appMessage":"[Consumer clientId=consumer-group_id-7, groupId=group_id] Cluster ID: Iu9DHTQ6SReFUqKIFFqxlQ","class":"org.apache.kafka.clients.Metadata","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:50:22.342Z","appMessage":"[Consumer clientId=consumer-group_id-7, groupId=group_id] Discovered group coordinator Officeroom:9092 (id: 2147483647 rack: null)","class":"org.apache.kafka.clients.consumer.internals.AbstractCoordinator","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:50:22.344Z","appMessage":"[Consumer clientId=consumer-group_id-7, groupId=group_id] (Re-)joining group","class":"org.apache.kafka.clients.consumer.internals.AbstractCoordinator","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:50:22.347Z","appMessage":"[Consumer clientId=consumer-group_id-7, groupId=group_id] (Re-)joining group","class":"org.apache.kafka.clients.consumer.internals.AbstractCoordinator","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:50:22.351Z","appMessage":"[Consumer clientId=consumer-group_id-7, groupId=group_id] Successfully joined group with generation Generation{generationId=9, memberId='consumer-group_id-7-b3af21ff-e7a2-47e3-bc11-2ce3767970fb', protocol='range'}","class":"org.apache.kafka.clients.consumer.internals.AbstractCoordinator","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:50:22.352Z","appMessage":"[Consumer clientId=consumer-group_id-7, groupId=group_id] Finished assignment for group at generation 9: {consumer-group_id-7-b3af21ff-e7a2-47e3-bc11-2ce3767970fb=Assignment(partitions=[customer-topic-2-0])}","class":"org.apache.kafka.clients.consumer.internals.ConsumerCoordinator","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:50:22.354Z","appMessage":"Started Application in 1.001 seconds (JVM running for 692.137)","class":"com.aslan.kafka.Application","thread":"restartedMain","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:50:22.356Z","appMessage":"[Consumer clientId=consumer-group_id-7, groupId=group_id] Successfully synced group in generation Generation{generationId=9, memberId='consumer-group_id-7-b3af21ff-e7a2-47e3-bc11-2ce3767970fb', protocol='range'}","class":"org.apache.kafka.clients.consumer.internals.AbstractCoordinator","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:50:22.357Z","appMessage":"[Consumer clientId=consumer-group_id-7, groupId=group_id] Notifying assignor about the new Assignment(partitions=[customer-topic-2-0])","class":"org.apache.kafka.clients.consumer.internals.ConsumerCoordinator","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:50:22.358Z","appMessage":"[Consumer clientId=consumer-group_id-7, groupId=group_id] Adding newly assigned partitions: customer-topic-2-0","class":"org.apache.kafka.clients.consumer.internals.ConsumerCoordinator","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:50:22.359Z","appMessage":"Condition evaluation unchanged","class":"org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener","thread":"restartedMain","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:50:22.360Z","appMessage":"[Consumer clientId=consumer-group_id-7, groupId=group_id] Setting offset for partition customer-topic-2-0 to the committed offset FetchPosition{offset=3, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[Officeroom:9092 (id: 0 rack: null)], epoch=absent}}","class":"org.apache.kafka.clients.consumer.internals.ConsumerCoordinator","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:50:22.361Z","appMessage":"group_id: partitions assigned: [customer-topic-2-0]","class":"org.springframework.kafka.listener.KafkaMessageListenerContainer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:51:41.659Z","appMessage":"[Consumer clientId=consumer-group_id-7, groupId=group_id] Revoke previously assigned partitions customer-topic-2-0","class":"org.apache.kafka.clients.consumer.internals.ConsumerCoordinator","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:51:41.660Z","appMessage":"group_id: partitions revoked: [customer-topic-2-0]","class":"org.springframework.kafka.listener.KafkaMessageListenerContainer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:51:41.660Z","appMessage":"[Consumer clientId=consumer-group_id-7, groupId=group_id] Member consumer-group_id-7-b3af21ff-e7a2-47e3-bc11-2ce3767970fb sending LeaveGroup request to coordinator Officeroom:9092 (id: 2147483647 rack: null) due to the consumer unsubscribed from all topics","class":"org.apache.kafka.clients.consumer.internals.AbstractCoordinator","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:51:41.661Z","appMessage":"[Consumer clientId=consumer-group_id-7, groupId=group_id] Unsubscribed all topics or patterns and assigned partitions","class":"org.apache.kafka.clients.consumer.KafkaConsumer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:51:41.665Z","appMessage":"Metrics scheduler closed","class":"org.apache.kafka.common.metrics.Metrics","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:51:41.665Z","appMessage":"Closing reporter org.apache.kafka.common.metrics.JmxReporter","class":"org.apache.kafka.common.metrics.Metrics","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:51:41.665Z","appMessage":"Metrics reporters closed","class":"org.apache.kafka.common.metrics.Metrics","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:51:41.668Z","appMessage":"App info kafka.consumer for consumer-group_id-7 unregistered","class":"org.apache.kafka.common.utils.AppInfoParser","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:51:41.669Z","appMessage":"group_id: Consumer stopped","class":"org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:51:41.967Z","appMessage":"Starting Application using Java 1.8.0_202 on Officeroom with PID 55836 (C:\\Users\\Officeroom\\JavaProj\\sb-aslan-kafka-template\\target\\classes started by Officeroom in C:\\Users\\Officeroom\\JavaProj\\sb-aslan-kafka-template)","class":"com.aslan.kafka.Application","thread":"restartedMain","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:51:41.968Z","appMessage":"The following profiles are active: local","class":"com.aslan.kafka.Application","thread":"restartedMain","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:51:42.540Z","appMessage":"Tomcat initialized with port(s): 8080 (http)","class":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread":"restartedMain","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:51:42.541Z","appMessage":"Initializing ProtocolHandler [\"http-nio-8080\"]","class":"org.apache.coyote.http11.Http11NioProtocol","thread":"restartedMain","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:51:42.542Z","appMessage":"Starting service [Tomcat]","class":"org.apache.catalina.core.StandardService","thread":"restartedMain","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:51:42.542Z","appMessage":"Starting Servlet engine: [Apache Tomcat/9.0.48]","class":"org.apache.catalina.core.StandardEngine","thread":"restartedMain","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:51:42.580Z","appMessage":"Initializing Spring embedded WebApplicationContext","class":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]","thread":"restartedMain","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:51:42.580Z","appMessage":"Root WebApplicationContext: initialization completed in 608 ms","class":"org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext","thread":"restartedMain","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:51:42.725Z","appMessage":"Cannot find template location: classpath:/templates/ (please add some templates, check your Mustache configuration, or set spring.mustache.check-template-location=false)","class":"org.springframework.boot.autoconfigure.mustache.MustacheAutoConfiguration","thread":"restartedMain","level":"WARN","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:51:42.732Z","appMessage":"Cannot find template location: classpath:/templates/ (please add some templates or check your Thymeleaf configuration)","class":"org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$DefaultTemplateResolverConfiguration","thread":"restartedMain","level":"WARN","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:51:42.808Z","appMessage":"LiveReload server is running on port 35729","class":"org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer","thread":"restartedMain","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:51:42.814Z","appMessage":"Exposing 13 endpoint(s) beneath base path ''","class":"org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver","thread":"restartedMain","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:51:42.839Z","appMessage":"ConsumerConfig values: \r\n\tallow.auto.create.topics = true\r\n\tauto.commit.interval.ms = 5000\r\n\tauto.offset.reset = latest\r\n\tbootstrap.servers = [127.0.0.1:9092]\r\n\tcheck.crcs = true\r\n\tclient.dns.lookup = use_all_dns_ips\r\n\tclient.id = consumer-group_id-8\r\n\tclient.rack = \r\n\tconnections.max.idle.ms = 540000\r\n\tdefault.api.timeout.ms = 60000\r\n\tenable.auto.commit = false\r\n\texclude.internal.topics = true\r\n\tfetch.max.bytes = 52428800\r\n\tfetch.max.wait.ms = 500\r\n\tfetch.min.bytes = 1\r\n\tgroup.id = group_id\r\n\tgroup.instance.id = null\r\n\theartbeat.interval.ms = 3000\r\n\tinterceptor.classes = []\r\n\tinternal.leave.group.on.close = true\r\n\tinternal.throw.on.fetch.stable.offset.unsupported = false\r\n\tisolation.level = read_uncommitted\r\n\tkey.deserializer = class org.apache.kafka.common.serialization.StringDeserializer\r\n\tmax.partition.fetch.bytes = 1048576\r\n\tmax.poll.interval.ms = 300000\r\n\tmax.poll.records = 500\r\n\tmetadata.max.age.ms = 300000\r\n\tmetric.reporters = []\r\n\tmetrics.num.samples = 2\r\n\tmetrics.recording.level = INFO\r\n\tmetrics.sample.window.ms = 30000\r\n\tpartition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor]\r\n\treceive.buffer.bytes = 65536\r\n\treconnect.backoff.max.ms = 1000\r\n\treconnect.backoff.ms = 50\r\n\trequest.timeout.ms = 30000\r\n\tretry.backoff.ms = 100\r\n\tsasl.client.callback.handler.class = null\r\n\tsasl.jaas.config = null\r\n\tsasl.kerberos.kinit.cmd = /usr/bin/kinit\r\n\tsasl.kerberos.min.time.before.relogin = 60000\r\n\tsasl.kerberos.service.name = null\r\n\tsasl.kerberos.ticket.renew.jitter = 0.05\r\n\tsasl.kerberos.ticket.renew.window.factor = 0.8\r\n\tsasl.login.callback.handler.class = null\r\n\tsasl.login.class = null\r\n\tsasl.login.refresh.buffer.seconds = 300\r\n\tsasl.login.refresh.min.period.seconds = 60\r\n\tsasl.login.refresh.window.factor = 0.8\r\n\tsasl.login.refresh.window.jitter = 0.05\r\n\tsasl.mechanism = GSSAPI\r\n\tsecurity.protocol = PLAINTEXT\r\n\tsecurity.providers = null\r\n\tsend.buffer.bytes = 131072\r\n\tsession.timeout.ms = 10000\r\n\tsocket.connection.setup.timeout.max.ms = 127000\r\n\tsocket.connection.setup.timeout.ms = 10000\r\n\tssl.cipher.suites = null\r\n\tssl.enabled.protocols = [TLSv1.2]\r\n\tssl.endpoint.identification.algorithm = https\r\n\tssl.engine.factory.class = null\r\n\tssl.key.password = null\r\n\tssl.keymanager.algorithm = SunX509\r\n\tssl.keystore.certificate.chain = null\r\n\tssl.keystore.key = null\r\n\tssl.keystore.location = null\r\n\tssl.keystore.password = null\r\n\tssl.keystore.type = JKS\r\n\tssl.protocol = TLSv1.2\r\n\tssl.provider = null\r\n\tssl.secure.random.implementation = null\r\n\tssl.trustmanager.algorithm = PKIX\r\n\tssl.truststore.certificates = null\r\n\tssl.truststore.location = null\r\n\tssl.truststore.password = null\r\n\tssl.truststore.type = JKS\r\n\tvalue.deserializer = class org.apache.kafka.common.serialization.StringDeserializer\r\n","class":"org.apache.kafka.clients.consumer.ConsumerConfig","thread":"restartedMain","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:51:42.850Z","appMessage":"Kafka version: 2.7.1","class":"org.apache.kafka.common.utils.AppInfoParser","thread":"restartedMain","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:51:42.851Z","appMessage":"Kafka commitId: 61dbce85d0d41457","class":"org.apache.kafka.common.utils.AppInfoParser","thread":"restartedMain","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:51:42.851Z","appMessage":"Kafka startTimeMs: 1627019502850","class":"org.apache.kafka.common.utils.AppInfoParser","thread":"restartedMain","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:51:42.852Z","appMessage":"[Consumer clientId=consumer-group_id-8, groupId=group_id] Subscribed to topic(s): customer-topic-2","class":"org.apache.kafka.clients.consumer.KafkaConsumer","thread":"restartedMain","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:51:42.855Z","appMessage":"ConsumerConfig values: \r\n\tallow.auto.create.topics = true\r\n\tauto.commit.interval.ms = 5000\r\n\tauto.offset.reset = latest\r\n\tbootstrap.servers = [127.0.0.1:9092]\r\n\tcheck.crcs = true\r\n\tclient.dns.lookup = use_all_dns_ips\r\n\tclient.id = consumer-group_json-9\r\n\tclient.rack = \r\n\tconnections.max.idle.ms = 540000\r\n\tdefault.api.timeout.ms = 60000\r\n\tenable.auto.commit = false\r\n\texclude.internal.topics = true\r\n\tfetch.max.bytes = 52428800\r\n\tfetch.max.wait.ms = 500\r\n\tfetch.min.bytes = 1\r\n\tgroup.id = group_json\r\n\tgroup.instance.id = null\r\n\theartbeat.interval.ms = 3000\r\n\tinterceptor.classes = []\r\n\tinternal.leave.group.on.close = true\r\n\tinternal.throw.on.fetch.stable.offset.unsupported = false\r\n\tisolation.level = read_uncommitted\r\n\tkey.deserializer = class org.apache.kafka.common.serialization.StringDeserializer\r\n\tmax.partition.fetch.bytes = 1048576\r\n\tmax.poll.interval.ms = 300000\r\n\tmax.poll.records = 500\r\n\tmetadata.max.age.ms = 300000\r\n\tmetric.reporters = []\r\n\tmetrics.num.samples = 2\r\n\tmetrics.recording.level = INFO\r\n\tmetrics.sample.window.ms = 30000\r\n\tpartition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor]\r\n\treceive.buffer.bytes = 65536\r\n\treconnect.backoff.max.ms = 1000\r\n\treconnect.backoff.ms = 50\r\n\trequest.timeout.ms = 30000\r\n\tretry.backoff.ms = 100\r\n\tsasl.client.callback.handler.class = null\r\n\tsasl.jaas.config = null\r\n\tsasl.kerberos.kinit.cmd = /usr/bin/kinit\r\n\tsasl.kerberos.min.time.before.relogin = 60000\r\n\tsasl.kerberos.service.name = null\r\n\tsasl.kerberos.ticket.renew.jitter = 0.05\r\n\tsasl.kerberos.ticket.renew.window.factor = 0.8\r\n\tsasl.login.callback.handler.class = null\r\n\tsasl.login.class = null\r\n\tsasl.login.refresh.buffer.seconds = 300\r\n\tsasl.login.refresh.min.period.seconds = 60\r\n\tsasl.login.refresh.window.factor = 0.8\r\n\tsasl.login.refresh.window.jitter = 0.05\r\n\tsasl.mechanism = GSSAPI\r\n\tsecurity.protocol = PLAINTEXT\r\n\tsecurity.providers = null\r\n\tsend.buffer.bytes = 131072\r\n\tsession.timeout.ms = 10000\r\n\tsocket.connection.setup.timeout.max.ms = 127000\r\n\tsocket.connection.setup.timeout.ms = 10000\r\n\tssl.cipher.suites = null\r\n\tssl.enabled.protocols = [TLSv1.2]\r\n\tssl.endpoint.identification.algorithm = https\r\n\tssl.engine.factory.class = null\r\n\tssl.key.password = null\r\n\tssl.keymanager.algorithm = SunX509\r\n\tssl.keystore.certificate.chain = null\r\n\tssl.keystore.key = null\r\n\tssl.keystore.location = null\r\n\tssl.keystore.password = null\r\n\tssl.keystore.type = JKS\r\n\tssl.protocol = TLSv1.2\r\n\tssl.provider = null\r\n\tssl.secure.random.implementation = null\r\n\tssl.trustmanager.algorithm = PKIX\r\n\tssl.truststore.certificates = null\r\n\tssl.truststore.location = null\r\n\tssl.truststore.password = null\r\n\tssl.truststore.type = JKS\r\n\tvalue.deserializer = class org.springframework.kafka.support.serializer.JsonDeserializer\r\n","class":"org.apache.kafka.clients.consumer.ConsumerConfig","thread":"restartedMain","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:51:42.858Z","appMessage":"[Consumer clientId=consumer-group_id-8, groupId=group_id] Cluster ID: Iu9DHTQ6SReFUqKIFFqxlQ","class":"org.apache.kafka.clients.Metadata","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:51:42.863Z","appMessage":"[Consumer clientId=consumer-group_id-8, groupId=group_id] Discovered group coordinator Officeroom:9092 (id: 2147483647 rack: null)","class":"org.apache.kafka.clients.consumer.internals.AbstractCoordinator","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:51:42.865Z","appMessage":"[Consumer clientId=consumer-group_id-8, groupId=group_id] (Re-)joining group","class":"org.apache.kafka.clients.consumer.internals.AbstractCoordinator","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:51:42.867Z","appMessage":"Kafka version: 2.7.1","class":"org.apache.kafka.common.utils.AppInfoParser","thread":"restartedMain","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:51:42.867Z","appMessage":"Kafka commitId: 61dbce85d0d41457","class":"org.apache.kafka.common.utils.AppInfoParser","thread":"restartedMain","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:51:42.868Z","appMessage":"Kafka startTimeMs: 1627019502867","class":"org.apache.kafka.common.utils.AppInfoParser","thread":"restartedMain","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:51:42.868Z","appMessage":"[Consumer clientId=consumer-group_id-8, groupId=group_id] (Re-)joining group","class":"org.apache.kafka.clients.consumer.internals.AbstractCoordinator","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:51:42.868Z","appMessage":"[Consumer clientId=consumer-group_json-9, groupId=group_json] Subscribed to topic(s): customer-topic-1","class":"org.apache.kafka.clients.consumer.KafkaConsumer","thread":"restartedMain","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:51:42.870Z","appMessage":"Starting ProtocolHandler [\"http-nio-8080\"]","class":"org.apache.coyote.http11.Http11NioProtocol","thread":"restartedMain","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:51:42.871Z","appMessage":"[Consumer clientId=consumer-group_id-8, groupId=group_id] Successfully joined group with generation Generation{generationId=11, memberId='consumer-group_id-8-ba438338-2929-4262-a9ae-0ba59685548e', protocol='range'}","class":"org.apache.kafka.clients.consumer.internals.AbstractCoordinator","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:51:42.872Z","appMessage":"[Consumer clientId=consumer-group_id-8, groupId=group_id] Finished assignment for group at generation 11: {consumer-group_id-8-ba438338-2929-4262-a9ae-0ba59685548e=Assignment(partitions=[customer-topic-2-0])}","class":"org.apache.kafka.clients.consumer.internals.ConsumerCoordinator","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:51:42.875Z","appMessage":"Tomcat started on port(s): 8080 (http) with context path ''","class":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread":"restartedMain","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:51:42.876Z","appMessage":"[Consumer clientId=consumer-group_id-8, groupId=group_id] Successfully synced group in generation Generation{generationId=11, memberId='consumer-group_id-8-ba438338-2929-4262-a9ae-0ba59685548e', protocol='range'}","class":"org.apache.kafka.clients.consumer.internals.AbstractCoordinator","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:51:42.877Z","appMessage":"[Consumer clientId=consumer-group_json-9, groupId=group_json] Cluster ID: Iu9DHTQ6SReFUqKIFFqxlQ","class":"org.apache.kafka.clients.Metadata","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:51:42.878Z","appMessage":"[Consumer clientId=consumer-group_id-8, groupId=group_id] Notifying assignor about the new Assignment(partitions=[customer-topic-2-0])","class":"org.apache.kafka.clients.consumer.internals.ConsumerCoordinator","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:51:42.878Z","appMessage":"[Consumer clientId=consumer-group_json-9, groupId=group_json] Discovered group coordinator Officeroom:9092 (id: 2147483647 rack: null)","class":"org.apache.kafka.clients.consumer.internals.AbstractCoordinator","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:51:42.878Z","appMessage":"[Consumer clientId=consumer-group_id-8, groupId=group_id] Adding newly assigned partitions: customer-topic-2-0","class":"org.apache.kafka.clients.consumer.internals.ConsumerCoordinator","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:51:42.880Z","appMessage":"[Consumer clientId=consumer-group_json-9, groupId=group_json] (Re-)joining group","class":"org.apache.kafka.clients.consumer.internals.AbstractCoordinator","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:51:42.881Z","appMessage":"[Consumer clientId=consumer-group_id-8, groupId=group_id] Setting offset for partition customer-topic-2-0 to the committed offset FetchPosition{offset=5, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[Officeroom:9092 (id: 0 rack: null)], epoch=absent}}","class":"org.apache.kafka.clients.consumer.internals.ConsumerCoordinator","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:51:42.882Z","appMessage":"group_id: partitions assigned: [customer-topic-2-0]","class":"org.springframework.kafka.listener.KafkaMessageListenerContainer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:51:42.883Z","appMessage":"[Consumer clientId=consumer-group_json-9, groupId=group_json] (Re-)joining group","class":"org.apache.kafka.clients.consumer.internals.AbstractCoordinator","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:51:42.886Z","appMessage":"[Consumer clientId=consumer-group_json-9, groupId=group_json] Successfully joined group with generation Generation{generationId=5, memberId='consumer-group_json-9-080864b2-36cb-4ef5-a88a-86be8d683ee1', protocol='range'}","class":"org.apache.kafka.clients.consumer.internals.AbstractCoordinator","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:51:42.887Z","appMessage":"[Consumer clientId=consumer-group_json-9, groupId=group_json] Finished assignment for group at generation 5: {consumer-group_json-9-080864b2-36cb-4ef5-a88a-86be8d683ee1=Assignment(partitions=[customer-topic-1-0, customer-topic-1-1, customer-topic-1-2, customer-topic-1-3, customer-topic-1-4, customer-topic-1-5, customer-topic-1-6, customer-topic-1-7, customer-topic-1-8, customer-topic-1-9])}","class":"org.apache.kafka.clients.consumer.internals.ConsumerCoordinator","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:51:42.890Z","appMessage":"Started Application in 0.994 seconds (JVM running for 772.673)","class":"com.aslan.kafka.Application","thread":"restartedMain","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:51:42.890Z","appMessage":"[Consumer clientId=consumer-group_json-9, groupId=group_json] Successfully synced group in generation Generation{generationId=5, memberId='consumer-group_json-9-080864b2-36cb-4ef5-a88a-86be8d683ee1', protocol='range'}","class":"org.apache.kafka.clients.consumer.internals.AbstractCoordinator","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:51:42.891Z","appMessage":"[Consumer clientId=consumer-group_json-9, groupId=group_json] Notifying assignor about the new Assignment(partitions=[customer-topic-1-0, customer-topic-1-1, customer-topic-1-2, customer-topic-1-3, customer-topic-1-4, customer-topic-1-5, customer-topic-1-6, customer-topic-1-7, customer-topic-1-8, customer-topic-1-9])","class":"org.apache.kafka.clients.consumer.internals.ConsumerCoordinator","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:51:42.892Z","appMessage":"[Consumer clientId=consumer-group_json-9, groupId=group_json] Adding newly assigned partitions: customer-topic-1-0, customer-topic-1-1, customer-topic-1-2, customer-topic-1-3, customer-topic-1-4, customer-topic-1-5, customer-topic-1-6, customer-topic-1-7, customer-topic-1-8, customer-topic-1-9","class":"org.apache.kafka.clients.consumer.internals.ConsumerCoordinator","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:51:42.893Z","appMessage":"Condition evaluation unchanged","class":"org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener","thread":"restartedMain","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:51:42.894Z","appMessage":"[Consumer clientId=consumer-group_json-9, groupId=group_json] Setting offset for partition customer-topic-1-0 to the committed offset FetchPosition{offset=5, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[Officeroom:9092 (id: 0 rack: null)], epoch=absent}}","class":"org.apache.kafka.clients.consumer.internals.ConsumerCoordinator","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:51:42.895Z","appMessage":"[Consumer clientId=consumer-group_json-9, groupId=group_json] Setting offset for partition customer-topic-1-1 to the committed offset FetchPosition{offset=5, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[Officeroom:9092 (id: 0 rack: null)], epoch=absent}}","class":"org.apache.kafka.clients.consumer.internals.ConsumerCoordinator","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:51:42.895Z","appMessage":"[Consumer clientId=consumer-group_json-9, groupId=group_json] Setting offset for partition customer-topic-1-2 to the committed offset FetchPosition{offset=5, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[Officeroom:9092 (id: 0 rack: null)], epoch=absent}}","class":"org.apache.kafka.clients.consumer.internals.ConsumerCoordinator","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:51:42.896Z","appMessage":"[Consumer clientId=consumer-group_json-9, groupId=group_json] Setting offset for partition customer-topic-1-3 to the committed offset FetchPosition{offset=5, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[Officeroom:9092 (id: 0 rack: null)], epoch=absent}}","class":"org.apache.kafka.clients.consumer.internals.ConsumerCoordinator","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:51:42.897Z","appMessage":"[Consumer clientId=consumer-group_json-9, groupId=group_json] Setting offset for partition customer-topic-1-4 to the committed offset FetchPosition{offset=5, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[Officeroom:9092 (id: 0 rack: null)], epoch=absent}}","class":"org.apache.kafka.clients.consumer.internals.ConsumerCoordinator","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:51:42.897Z","appMessage":"[Consumer clientId=consumer-group_json-9, groupId=group_json] Setting offset for partition customer-topic-1-5 to the committed offset FetchPosition{offset=5, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[Officeroom:9092 (id: 0 rack: null)], epoch=absent}}","class":"org.apache.kafka.clients.consumer.internals.ConsumerCoordinator","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:51:42.898Z","appMessage":"[Consumer clientId=consumer-group_json-9, groupId=group_json] Setting offset for partition customer-topic-1-6 to the committed offset FetchPosition{offset=5, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[Officeroom:9092 (id: 0 rack: null)], epoch=absent}}","class":"org.apache.kafka.clients.consumer.internals.ConsumerCoordinator","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:51:42.898Z","appMessage":"[Consumer clientId=consumer-group_json-9, groupId=group_json] Setting offset for partition customer-topic-1-7 to the committed offset FetchPosition{offset=5, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[Officeroom:9092 (id: 0 rack: null)], epoch=absent}}","class":"org.apache.kafka.clients.consumer.internals.ConsumerCoordinator","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:51:42.899Z","appMessage":"[Consumer clientId=consumer-group_json-9, groupId=group_json] Setting offset for partition customer-topic-1-8 to the committed offset FetchPosition{offset=5, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[Officeroom:9092 (id: 0 rack: null)], epoch=absent}}","class":"org.apache.kafka.clients.consumer.internals.ConsumerCoordinator","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:51:42.899Z","appMessage":"[Consumer clientId=consumer-group_json-9, groupId=group_json] Setting offset for partition customer-topic-1-9 to the committed offset FetchPosition{offset=5, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[Officeroom:9092 (id: 0 rack: null)], epoch=absent}}","class":"org.apache.kafka.clients.consumer.internals.ConsumerCoordinator","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:51:42.900Z","appMessage":"group_json: partitions assigned: [customer-topic-1-0, customer-topic-1-1, customer-topic-1-2, customer-topic-1-3, customer-topic-1-4, customer-topic-1-5, customer-topic-1-6, customer-topic-1-7, customer-topic-1-8, customer-topic-1-9]","class":"org.springframework.kafka.listener.KafkaMessageListenerContainer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:52:22.380Z","appMessage":"Initializing Spring DispatcherServlet 'dispatcherServlet'","class":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]","thread":"http-nio-8080-exec-2","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:52:22.382Z","appMessage":"Initializing Servlet 'dispatcherServlet'","class":"org.springframework.web.servlet.DispatcherServlet","thread":"http-nio-8080-exec-2","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:52:22.383Z","appMessage":"Completed initialization in 1 ms","class":"org.springframework.web.servlet.DispatcherServlet","thread":"http-nio-8080-exec-2","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:52:22.386Z","appMessage":"ApiController::producer(): Start","class":"com.aslan.kafka.controller.ApiController","thread":"http-nio-8080-exec-2","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:52:22.387Z","appMessage":"ApiController::producer(): Key: id_0","class":"com.aslan.kafka.controller.ApiController","thread":"http-nio-8080-exec-2","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:52:22.388Z","appMessage":"ProducerConfig values: \r\n\tacks = -1\r\n\tbatch.size = 16384\r\n\tbootstrap.servers = [127.0.0.1:9092]\r\n\tbuffer.memory = 33554432\r\n\tclient.dns.lookup = use_all_dns_ips\r\n\tclient.id = producer-2\r\n\tcompression.type = none\r\n\tconnections.max.idle.ms = 540000\r\n\tdelivery.timeout.ms = 120000\r\n\tenable.idempotence = false\r\n\tinterceptor.classes = []\r\n\tinternal.auto.downgrade.txn.commit = true\r\n\tkey.serializer = class org.springframework.kafka.support.serializer.JsonSerializer\r\n\tlinger.ms = 0\r\n\tmax.block.ms = 60000\r\n\tmax.in.flight.requests.per.connection = 5\r\n\tmax.request.size = 1048576\r\n\tmetadata.max.age.ms = 300000\r\n\tmetadata.max.idle.ms = 300000\r\n\tmetric.reporters = []\r\n\tmetrics.num.samples = 2\r\n\tmetrics.recording.level = INFO\r\n\tmetrics.sample.window.ms = 30000\r\n\tpartitioner.class = class org.apache.kafka.clients.producer.internals.DefaultPartitioner\r\n\treceive.buffer.bytes = 32768\r\n\treconnect.backoff.max.ms = 1000\r\n\treconnect.backoff.ms = 50\r\n\trequest.timeout.ms = 30000\r\n\tretries = 10\r\n\tretry.backoff.ms = 100\r\n\tsasl.client.callback.handler.class = null\r\n\tsasl.jaas.config = null\r\n\tsasl.kerberos.kinit.cmd = /usr/bin/kinit\r\n\tsasl.kerberos.min.time.before.relogin = 60000\r\n\tsasl.kerberos.service.name = null\r\n\tsasl.kerberos.ticket.renew.jitter = 0.05\r\n\tsasl.kerberos.ticket.renew.window.factor = 0.8\r\n\tsasl.login.callback.handler.class = null\r\n\tsasl.login.class = null\r\n\tsasl.login.refresh.buffer.seconds = 300\r\n\tsasl.login.refresh.min.period.seconds = 60\r\n\tsasl.login.refresh.window.factor = 0.8\r\n\tsasl.login.refresh.window.jitter = 0.05\r\n\tsasl.mechanism = GSSAPI\r\n\tsecurity.protocol = PLAINTEXT\r\n\tsecurity.providers = null\r\n\tsend.buffer.bytes = 131072\r\n\tsocket.connection.setup.timeout.max.ms = 127000\r\n\tsocket.connection.setup.timeout.ms = 10000\r\n\tssl.cipher.suites = null\r\n\tssl.enabled.protocols = [TLSv1.2]\r\n\tssl.endpoint.identification.algorithm = https\r\n\tssl.engine.factory.class = null\r\n\tssl.key.password = null\r\n\tssl.keymanager.algorithm = SunX509\r\n\tssl.keystore.certificate.chain = null\r\n\tssl.keystore.key = null\r\n\tssl.keystore.location = null\r\n\tssl.keystore.password = null\r\n\tssl.keystore.type = JKS\r\n\tssl.protocol = TLSv1.2\r\n\tssl.provider = null\r\n\tssl.secure.random.implementation = null\r\n\tssl.trustmanager.algorithm = PKIX\r\n\tssl.truststore.certificates = null\r\n\tssl.truststore.location = null\r\n\tssl.truststore.password = null\r\n\tssl.truststore.type = JKS\r\n\ttransaction.timeout.ms = 60000\r\n\ttransactional.id = null\r\n\tvalue.serializer = class org.springframework.kafka.support.serializer.JsonSerializer\r\n","class":"org.apache.kafka.clients.producer.ProducerConfig","thread":"http-nio-8080-exec-2","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:52:22.408Z","appMessage":"Kafka version: 2.7.1","class":"org.apache.kafka.common.utils.AppInfoParser","thread":"http-nio-8080-exec-2","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:52:22.409Z","appMessage":"Kafka commitId: 61dbce85d0d41457","class":"org.apache.kafka.common.utils.AppInfoParser","thread":"http-nio-8080-exec-2","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:52:22.409Z","appMessage":"Kafka startTimeMs: 1627019542408","class":"org.apache.kafka.common.utils.AppInfoParser","thread":"http-nio-8080-exec-2","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:52:22.413Z","appMessage":"[Producer clientId=producer-2] Cluster ID: Iu9DHTQ6SReFUqKIFFqxlQ","class":"org.apache.kafka.clients.Metadata","thread":"kafka-producer-network-thread | producer-2","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:52:22.416Z","appMessage":"ApiController::producer(): Key: id_1","class":"com.aslan.kafka.controller.ApiController","thread":"http-nio-8080-exec-2","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:52:22.417Z","appMessage":"ApiController::producer(): Key: id_2","class":"com.aslan.kafka.controller.ApiController","thread":"http-nio-8080-exec-2","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:52:22.418Z","appMessage":"ApiController::producer(): Key: id_3","class":"com.aslan.kafka.controller.ApiController","thread":"http-nio-8080-exec-2","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:52:22.419Z","appMessage":"ApiController::producer(): Key: id_4","class":"com.aslan.kafka.controller.ApiController","thread":"http-nio-8080-exec-2","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:52:22.420Z","appMessage":"ApiController::producer(): Key: id_5","class":"com.aslan.kafka.controller.ApiController","thread":"http-nio-8080-exec-2","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:52:22.420Z","appMessage":"ApiController::producer(): Key: id_6","class":"com.aslan.kafka.controller.ApiController","thread":"http-nio-8080-exec-2","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:52:22.421Z","appMessage":"ApiController::producer(): Key: id_7","class":"com.aslan.kafka.controller.ApiController","thread":"http-nio-8080-exec-2","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:52:22.422Z","appMessage":"ApiController::producer(): Key: id_8","class":"com.aslan.kafka.controller.ApiController","thread":"http-nio-8080-exec-2","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:52:22.423Z","appMessage":"ApiController::producer(): Key: id_9","class":"com.aslan.kafka.controller.ApiController","thread":"http-nio-8080-exec-2","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:52:22.424Z","appMessage":"ApiController::producer(): End","class":"com.aslan.kafka.controller.ApiController","thread":"http-nio-8080-exec-2","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:52:22.424Z","appMessage":"Sent message=[com.aslan.kafka.model.DataModel@6cee01c8] with offset=[5]","class":"com.aslan.kafka.controller.ApiController","thread":"kafka-producer-network-thread | producer-2","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:52:22.426Z","appMessage":"Sent message=[com.aslan.kafka.model.DataModel@6cee01c8] with offset=[5]","class":"com.aslan.kafka.controller.ApiController","thread":"kafka-producer-network-thread | producer-2","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:52:22.426Z","appMessage":"Sent message=[com.aslan.kafka.model.DataModel@6cee01c8] with offset=[5]","class":"com.aslan.kafka.controller.ApiController","thread":"kafka-producer-network-thread | producer-2","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:52:22.426Z","appMessage":"Backoff none exhausted for customer-topic-1-3@5","class":"org.springframework.kafka.listener.SeekToCurrentErrorHandler","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"ERROR","exception":"org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method could not be invoked with the incoming message\nEndpoint handler details:\nMethod [public void com.aslan.kafka.service.KafkaConsumer.consumeJson(com.aslan.kafka.model.User)]\nBean [com.aslan.kafka.service.KafkaConsumer@9658959]; nested exception is org.springframework.messaging.converter.MessageConversionException: Cannot handle message; nested exception is org.springframework.messaging.converter.MessageConversionException: Cannot convert from [com.aslan.kafka.model.DataModel] to [com.aslan.kafka.model.User] for GenericMessage [payload=com.aslan.kafka.model.DataModel@48d1a8e, headers={__Key_TypeId__=[B@cc1a5cd, kafka_offset=5, kafka_consumer=org.apache.kafka.clients.consumer.KafkaConsumer@3c939f68, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=3, kafka_receivedMessageKey=\"id_3\", kafka_receivedTopic=customer-topic-1, kafka_receivedTimestamp=1627019602418, kafka_groupId=group_json}], failedMessage=GenericMessage [payload=com.aslan.kafka.model.DataModel@48d1a8e, headers={__Key_TypeId__=[B@cc1a5cd, kafka_offset=5, kafka_consumer=org.apache.kafka.clients.consumer.KafkaConsumer@3c939f68, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=3, kafka_receivedMessageKey=\"id_3\", kafka_receivedTopic=customer-topic-1, kafka_receivedTimestamp=1627019602418, kafka_groupId=group_json}]; nested exception is org.springframework.messaging.converter.MessageConversionException: Cannot handle message; nested exception is org.springframework.messaging.converter.MessageConversionException: Cannot convert from [com.aslan.kafka.model.DataModel] to [com.aslan.kafka.model.User] for GenericMessage [payload=com.aslan.kafka.model.DataModel@48d1a8e, headers={__Key_TypeId__=[B@cc1a5cd, kafka_offset=5, kafka_consumer=org.apache.kafka.clients.consumer.KafkaConsumer@3c939f68, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=3, kafka_receivedMessageKey=\"id_3\", kafka_receivedTopic=customer-topic-1, kafka_receivedTimestamp=1627019602418, kafka_groupId=group_json}], failedMessage=GenericMessage [payload=com.aslan.kafka.model.DataModel@48d1a8e, headers={__Key_TypeId__=[B@cc1a5cd, kafka_offset=5, kafka_consumer=org.apache.kafka.clients.consumer.KafkaConsumer@3c939f68, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=3, kafka_receivedMessageKey=\"id_3\", kafka_receivedTopic=customer-topic-1, kafka_receivedTimestamp=1627019602418, kafka_groupId=group_json}]\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2368)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2339)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2300)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2214)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2139)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2021)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1703)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1272)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1264)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1161)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.springframework.messaging.converter.MessageConversionException: Cannot handle message; nested exception is org.springframework.messaging.converter.MessageConversionException: Cannot convert from [com.aslan.kafka.model.DataModel] to [com.aslan.kafka.model.User] for GenericMessage [payload=com.aslan.kafka.model.DataModel@48d1a8e, headers={__Key_TypeId__=[B@cc1a5cd, kafka_offset=5, kafka_consumer=org.apache.kafka.clients.consumer.KafkaConsumer@3c939f68, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=3, kafka_receivedMessageKey=\"id_3\", kafka_receivedTopic=customer-topic-1, kafka_receivedTimestamp=1627019602418, kafka_groupId=group_json}], failedMessage=GenericMessage [payload=com.aslan.kafka.model.DataModel@48d1a8e, headers={__Key_TypeId__=[B@cc1a5cd, kafka_offset=5, kafka_consumer=org.apache.kafka.clients.consumer.KafkaConsumer@3c939f68, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=3, kafka_receivedMessageKey=\"id_3\", kafka_receivedTopic=customer-topic-1, kafka_receivedTimestamp=1627019602418, kafka_groupId=group_json}]\r\n\tat org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:352)\r\n\tat org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)\r\n\tat org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2319)\r\n\t... 11 common frames omitted\r\nCaused by: org.springframework.messaging.converter.MessageConversionException: Cannot convert from [com.aslan.kafka.model.DataModel] to [com.aslan.kafka.model.User] for GenericMessage [payload=com.aslan.kafka.model.DataModel@48d1a8e, headers={__Key_TypeId__=[B@cc1a5cd, kafka_offset=5, kafka_consumer=org.apache.kafka.clients.consumer.KafkaConsumer@3c939f68, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=3, kafka_receivedMessageKey=\"id_3\", kafka_receivedTopic=customer-topic-1, kafka_receivedTimestamp=1627019602418, kafka_groupId=group_json}]\r\n\tat org.springframework.messaging.handler.annotation.support.PayloadMethodArgumentResolver.resolveArgument(PayloadMethodArgumentResolver.java:145)\r\n\tat org.springframework.kafka.annotation.KafkaListenerAnnotationBeanPostProcessor$KafkaNullAwarePayloadArgumentResolver.resolveArgument(KafkaListenerAnnotationBeanPostProcessor.java:1123)\r\n\tat org.springframework.messaging.handler.invocation.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:117)\r\n\tat org.springframework.messaging.handler.invocation.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:148)\r\n\tat org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:116)\r\n\tat org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)\r\n\tat org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:347)\r\n\t... 14 common frames omitted\r\n","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:52:22.427Z","appMessage":"Sent message=[com.aslan.kafka.model.DataModel@6cee01c8] with offset=[5]","class":"com.aslan.kafka.controller.ApiController","thread":"kafka-producer-network-thread | producer-2","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:52:22.435Z","appMessage":"Sent message=[com.aslan.kafka.model.DataModel@6cee01c8] with offset=[5]","class":"com.aslan.kafka.controller.ApiController","thread":"kafka-producer-network-thread | producer-2","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:52:22.436Z","appMessage":"Sent message=[com.aslan.kafka.model.DataModel@6cee01c8] with offset=[5]","class":"com.aslan.kafka.controller.ApiController","thread":"kafka-producer-network-thread | producer-2","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:52:22.438Z","appMessage":"Sent message=[com.aslan.kafka.model.DataModel@6cee01c8] with offset=[5]","class":"com.aslan.kafka.controller.ApiController","thread":"kafka-producer-network-thread | producer-2","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:52:22.438Z","appMessage":"Sent message=[com.aslan.kafka.model.DataModel@6cee01c8] with offset=[5]","class":"com.aslan.kafka.controller.ApiController","thread":"kafka-producer-network-thread | producer-2","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:52:22.439Z","appMessage":"Sent message=[com.aslan.kafka.model.DataModel@6cee01c8] with offset=[5]","class":"com.aslan.kafka.controller.ApiController","thread":"kafka-producer-network-thread | producer-2","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:52:22.439Z","appMessage":"Sent message=[com.aslan.kafka.model.DataModel@6cee01c8] with offset=[5]","class":"com.aslan.kafka.controller.ApiController","thread":"kafka-producer-network-thread | producer-2","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:52:22.445Z","appMessage":"Backoff none exhausted for customer-topic-1-0@5","class":"org.springframework.kafka.listener.SeekToCurrentErrorHandler","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"ERROR","exception":"org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method could not be invoked with the incoming message\nEndpoint handler details:\nMethod [public void com.aslan.kafka.service.KafkaConsumer.consumeJson(com.aslan.kafka.model.User)]\nBean [com.aslan.kafka.service.KafkaConsumer@9658959]; nested exception is org.springframework.messaging.converter.MessageConversionException: Cannot handle message; nested exception is org.springframework.messaging.converter.MessageConversionException: Cannot convert from [com.aslan.kafka.model.DataModel] to [com.aslan.kafka.model.User] for GenericMessage [payload=com.aslan.kafka.model.DataModel@6550bb91, headers={__Key_TypeId__=[B@64be953b, kafka_offset=5, kafka_consumer=org.apache.kafka.clients.consumer.KafkaConsumer@3c939f68, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=0, kafka_receivedMessageKey=\"id_0\", kafka_receivedTopic=customer-topic-1, kafka_receivedTimestamp=1627019602387, kafka_groupId=group_json}], failedMessage=GenericMessage [payload=com.aslan.kafka.model.DataModel@6550bb91, headers={__Key_TypeId__=[B@64be953b, kafka_offset=5, kafka_consumer=org.apache.kafka.clients.consumer.KafkaConsumer@3c939f68, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=0, kafka_receivedMessageKey=\"id_0\", kafka_receivedTopic=customer-topic-1, kafka_receivedTimestamp=1627019602387, kafka_groupId=group_json}]; nested exception is org.springframework.messaging.converter.MessageConversionException: Cannot handle message; nested exception is org.springframework.messaging.converter.MessageConversionException: Cannot convert from [com.aslan.kafka.model.DataModel] to [com.aslan.kafka.model.User] for GenericMessage [payload=com.aslan.kafka.model.DataModel@6550bb91, headers={__Key_TypeId__=[B@64be953b, kafka_offset=5, kafka_consumer=org.apache.kafka.clients.consumer.KafkaConsumer@3c939f68, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=0, kafka_receivedMessageKey=\"id_0\", kafka_receivedTopic=customer-topic-1, kafka_receivedTimestamp=1627019602387, kafka_groupId=group_json}], failedMessage=GenericMessage [payload=com.aslan.kafka.model.DataModel@6550bb91, headers={__Key_TypeId__=[B@64be953b, kafka_offset=5, kafka_consumer=org.apache.kafka.clients.consumer.KafkaConsumer@3c939f68, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=0, kafka_receivedMessageKey=\"id_0\", kafka_receivedTopic=customer-topic-1, kafka_receivedTimestamp=1627019602387, kafka_groupId=group_json}]\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2368)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2339)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2300)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2214)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2139)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2021)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1703)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1272)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1264)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1161)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.springframework.messaging.converter.MessageConversionException: Cannot handle message; nested exception is org.springframework.messaging.converter.MessageConversionException: Cannot convert from [com.aslan.kafka.model.DataModel] to [com.aslan.kafka.model.User] for GenericMessage [payload=com.aslan.kafka.model.DataModel@6550bb91, headers={__Key_TypeId__=[B@64be953b, kafka_offset=5, kafka_consumer=org.apache.kafka.clients.consumer.KafkaConsumer@3c939f68, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=0, kafka_receivedMessageKey=\"id_0\", kafka_receivedTopic=customer-topic-1, kafka_receivedTimestamp=1627019602387, kafka_groupId=group_json}], failedMessage=GenericMessage [payload=com.aslan.kafka.model.DataModel@6550bb91, headers={__Key_TypeId__=[B@64be953b, kafka_offset=5, kafka_consumer=org.apache.kafka.clients.consumer.KafkaConsumer@3c939f68, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=0, kafka_receivedMessageKey=\"id_0\", kafka_receivedTopic=customer-topic-1, kafka_receivedTimestamp=1627019602387, kafka_groupId=group_json}]\r\n\tat org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:352)\r\n\tat org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)\r\n\tat org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2319)\r\n\t... 11 common frames omitted\r\nCaused by: org.springframework.messaging.converter.MessageConversionException: Cannot convert from [com.aslan.kafka.model.DataModel] to [com.aslan.kafka.model.User] for GenericMessage [payload=com.aslan.kafka.model.DataModel@6550bb91, headers={__Key_TypeId__=[B@64be953b, kafka_offset=5, kafka_consumer=org.apache.kafka.clients.consumer.KafkaConsumer@3c939f68, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=0, kafka_receivedMessageKey=\"id_0\", kafka_receivedTopic=customer-topic-1, kafka_receivedTimestamp=1627019602387, kafka_groupId=group_json}]\r\n\tat org.springframework.messaging.handler.annotation.support.PayloadMethodArgumentResolver.resolveArgument(PayloadMethodArgumentResolver.java:145)\r\n\tat org.springframework.kafka.annotation.KafkaListenerAnnotationBeanPostProcessor$KafkaNullAwarePayloadArgumentResolver.resolveArgument(KafkaListenerAnnotationBeanPostProcessor.java:1123)\r\n\tat org.springframework.messaging.handler.invocation.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:117)\r\n\tat org.springframework.messaging.handler.invocation.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:148)\r\n\tat org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:116)\r\n\tat org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)\r\n\tat org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:347)\r\n\t... 14 common frames omitted\r\n","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:52:22.451Z","appMessage":"[Consumer clientId=consumer-group_json-9, groupId=group_json] Seeking to offset 5 for partition customer-topic-1-1","class":"org.apache.kafka.clients.consumer.KafkaConsumer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:52:22.452Z","appMessage":"[Consumer clientId=consumer-group_json-9, groupId=group_json] Seeking to offset 5 for partition customer-topic-1-2","class":"org.apache.kafka.clients.consumer.KafkaConsumer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:52:22.452Z","appMessage":"[Consumer clientId=consumer-group_json-9, groupId=group_json] Seeking to offset 5 for partition customer-topic-1-4","class":"org.apache.kafka.clients.consumer.KafkaConsumer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:52:22.453Z","appMessage":"[Consumer clientId=consumer-group_json-9, groupId=group_json] Seeking to offset 5 for partition customer-topic-1-5","class":"org.apache.kafka.clients.consumer.KafkaConsumer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:52:22.453Z","appMessage":"[Consumer clientId=consumer-group_json-9, groupId=group_json] Seeking to offset 5 for partition customer-topic-1-6","class":"org.apache.kafka.clients.consumer.KafkaConsumer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:52:22.454Z","appMessage":"[Consumer clientId=consumer-group_json-9, groupId=group_json] Seeking to offset 5 for partition customer-topic-1-7","class":"org.apache.kafka.clients.consumer.KafkaConsumer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:52:22.454Z","appMessage":"[Consumer clientId=consumer-group_json-9, groupId=group_json] Seeking to offset 5 for partition customer-topic-1-8","class":"org.apache.kafka.clients.consumer.KafkaConsumer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:52:22.455Z","appMessage":"[Consumer clientId=consumer-group_json-9, groupId=group_json] Seeking to offset 5 for partition customer-topic-1-9","class":"org.apache.kafka.clients.consumer.KafkaConsumer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:52:22.967Z","appMessage":"Backoff none exhausted for customer-topic-1-1@5","class":"org.springframework.kafka.listener.SeekToCurrentErrorHandler","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"ERROR","exception":"org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method could not be invoked with the incoming message\nEndpoint handler details:\nMethod [public void com.aslan.kafka.service.KafkaConsumer.consumeJson(com.aslan.kafka.model.User)]\nBean [com.aslan.kafka.service.KafkaConsumer@9658959]; nested exception is org.springframework.messaging.converter.MessageConversionException: Cannot handle message; nested exception is org.springframework.messaging.converter.MessageConversionException: Cannot convert from [com.aslan.kafka.model.DataModel] to [com.aslan.kafka.model.User] for GenericMessage [payload=com.aslan.kafka.model.DataModel@675fd7aa, headers={__Key_TypeId__=[B@6111f8ba, kafka_offset=5, kafka_consumer=org.apache.kafka.clients.consumer.KafkaConsumer@3c939f68, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=1, kafka_receivedMessageKey=\"id_1\", kafka_receivedTopic=customer-topic-1, kafka_receivedTimestamp=1627019602416, kafka_groupId=group_json}], failedMessage=GenericMessage [payload=com.aslan.kafka.model.DataModel@675fd7aa, headers={__Key_TypeId__=[B@6111f8ba, kafka_offset=5, kafka_consumer=org.apache.kafka.clients.consumer.KafkaConsumer@3c939f68, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=1, kafka_receivedMessageKey=\"id_1\", kafka_receivedTopic=customer-topic-1, kafka_receivedTimestamp=1627019602416, kafka_groupId=group_json}]; nested exception is org.springframework.messaging.converter.MessageConversionException: Cannot handle message; nested exception is org.springframework.messaging.converter.MessageConversionException: Cannot convert from [com.aslan.kafka.model.DataModel] to [com.aslan.kafka.model.User] for GenericMessage [payload=com.aslan.kafka.model.DataModel@675fd7aa, headers={__Key_TypeId__=[B@6111f8ba, kafka_offset=5, kafka_consumer=org.apache.kafka.clients.consumer.KafkaConsumer@3c939f68, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=1, kafka_receivedMessageKey=\"id_1\", kafka_receivedTopic=customer-topic-1, kafka_receivedTimestamp=1627019602416, kafka_groupId=group_json}], failedMessage=GenericMessage [payload=com.aslan.kafka.model.DataModel@675fd7aa, headers={__Key_TypeId__=[B@6111f8ba, kafka_offset=5, kafka_consumer=org.apache.kafka.clients.consumer.KafkaConsumer@3c939f68, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=1, kafka_receivedMessageKey=\"id_1\", kafka_receivedTopic=customer-topic-1, kafka_receivedTimestamp=1627019602416, kafka_groupId=group_json}]\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2368)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2339)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2300)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2214)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2139)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2021)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1703)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1272)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1264)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1161)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.springframework.messaging.converter.MessageConversionException: Cannot handle message; nested exception is org.springframework.messaging.converter.MessageConversionException: Cannot convert from [com.aslan.kafka.model.DataModel] to [com.aslan.kafka.model.User] for GenericMessage [payload=com.aslan.kafka.model.DataModel@675fd7aa, headers={__Key_TypeId__=[B@6111f8ba, kafka_offset=5, kafka_consumer=org.apache.kafka.clients.consumer.KafkaConsumer@3c939f68, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=1, kafka_receivedMessageKey=\"id_1\", kafka_receivedTopic=customer-topic-1, kafka_receivedTimestamp=1627019602416, kafka_groupId=group_json}], failedMessage=GenericMessage [payload=com.aslan.kafka.model.DataModel@675fd7aa, headers={__Key_TypeId__=[B@6111f8ba, kafka_offset=5, kafka_consumer=org.apache.kafka.clients.consumer.KafkaConsumer@3c939f68, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=1, kafka_receivedMessageKey=\"id_1\", kafka_receivedTopic=customer-topic-1, kafka_receivedTimestamp=1627019602416, kafka_groupId=group_json}]\r\n\tat org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:352)\r\n\tat org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)\r\n\tat org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2319)\r\n\t... 11 common frames omitted\r\nCaused by: org.springframework.messaging.converter.MessageConversionException: Cannot convert from [com.aslan.kafka.model.DataModel] to [com.aslan.kafka.model.User] for GenericMessage [payload=com.aslan.kafka.model.DataModel@675fd7aa, headers={__Key_TypeId__=[B@6111f8ba, kafka_offset=5, kafka_consumer=org.apache.kafka.clients.consumer.KafkaConsumer@3c939f68, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=1, kafka_receivedMessageKey=\"id_1\", kafka_receivedTopic=customer-topic-1, kafka_receivedTimestamp=1627019602416, kafka_groupId=group_json}]\r\n\tat org.springframework.messaging.handler.annotation.support.PayloadMethodArgumentResolver.resolveArgument(PayloadMethodArgumentResolver.java:145)\r\n\tat org.springframework.kafka.annotation.KafkaListenerAnnotationBeanPostProcessor$KafkaNullAwarePayloadArgumentResolver.resolveArgument(KafkaListenerAnnotationBeanPostProcessor.java:1123)\r\n\tat org.springframework.messaging.handler.invocation.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:117)\r\n\tat org.springframework.messaging.handler.invocation.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:148)\r\n\tat org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:116)\r\n\tat org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)\r\n\tat org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:347)\r\n\t... 14 common frames omitted\r\n","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:52:22.972Z","appMessage":"[Consumer clientId=consumer-group_json-9, groupId=group_json] Seeking to offset 5 for partition customer-topic-1-2","class":"org.apache.kafka.clients.consumer.KafkaConsumer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:52:22.973Z","appMessage":"[Consumer clientId=consumer-group_json-9, groupId=group_json] Seeking to offset 5 for partition customer-topic-1-4","class":"org.apache.kafka.clients.consumer.KafkaConsumer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:52:22.973Z","appMessage":"[Consumer clientId=consumer-group_json-9, groupId=group_json] Seeking to offset 5 for partition customer-topic-1-5","class":"org.apache.kafka.clients.consumer.KafkaConsumer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:52:22.974Z","appMessage":"[Consumer clientId=consumer-group_json-9, groupId=group_json] Seeking to offset 5 for partition customer-topic-1-6","class":"org.apache.kafka.clients.consumer.KafkaConsumer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:52:22.974Z","appMessage":"[Consumer clientId=consumer-group_json-9, groupId=group_json] Seeking to offset 5 for partition customer-topic-1-7","class":"org.apache.kafka.clients.consumer.KafkaConsumer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:52:22.975Z","appMessage":"[Consumer clientId=consumer-group_json-9, groupId=group_json] Seeking to offset 5 for partition customer-topic-1-8","class":"org.apache.kafka.clients.consumer.KafkaConsumer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:52:22.975Z","appMessage":"[Consumer clientId=consumer-group_json-9, groupId=group_json] Seeking to offset 5 for partition customer-topic-1-9","class":"org.apache.kafka.clients.consumer.KafkaConsumer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:52:23.485Z","appMessage":"Backoff none exhausted for customer-topic-1-2@5","class":"org.springframework.kafka.listener.SeekToCurrentErrorHandler","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"ERROR","exception":"org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method could not be invoked with the incoming message\nEndpoint handler details:\nMethod [public void com.aslan.kafka.service.KafkaConsumer.consumeJson(com.aslan.kafka.model.User)]\nBean [com.aslan.kafka.service.KafkaConsumer@9658959]; nested exception is org.springframework.messaging.converter.MessageConversionException: Cannot handle message; nested exception is org.springframework.messaging.converter.MessageConversionException: Cannot convert from [com.aslan.kafka.model.DataModel] to [com.aslan.kafka.model.User] for GenericMessage [payload=com.aslan.kafka.model.DataModel@4da068cd, headers={__Key_TypeId__=[B@b9e82e9, kafka_offset=5, kafka_consumer=org.apache.kafka.clients.consumer.KafkaConsumer@3c939f68, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=2, kafka_receivedMessageKey=\"id_2\", kafka_receivedTopic=customer-topic-1, kafka_receivedTimestamp=1627019602417, kafka_groupId=group_json}], failedMessage=GenericMessage [payload=com.aslan.kafka.model.DataModel@4da068cd, headers={__Key_TypeId__=[B@b9e82e9, kafka_offset=5, kafka_consumer=org.apache.kafka.clients.consumer.KafkaConsumer@3c939f68, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=2, kafka_receivedMessageKey=\"id_2\", kafka_receivedTopic=customer-topic-1, kafka_receivedTimestamp=1627019602417, kafka_groupId=group_json}]; nested exception is org.springframework.messaging.converter.MessageConversionException: Cannot handle message; nested exception is org.springframework.messaging.converter.MessageConversionException: Cannot convert from [com.aslan.kafka.model.DataModel] to [com.aslan.kafka.model.User] for GenericMessage [payload=com.aslan.kafka.model.DataModel@4da068cd, headers={__Key_TypeId__=[B@b9e82e9, kafka_offset=5, kafka_consumer=org.apache.kafka.clients.consumer.KafkaConsumer@3c939f68, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=2, kafka_receivedMessageKey=\"id_2\", kafka_receivedTopic=customer-topic-1, kafka_receivedTimestamp=1627019602417, kafka_groupId=group_json}], failedMessage=GenericMessage [payload=com.aslan.kafka.model.DataModel@4da068cd, headers={__Key_TypeId__=[B@b9e82e9, kafka_offset=5, kafka_consumer=org.apache.kafka.clients.consumer.KafkaConsumer@3c939f68, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=2, kafka_receivedMessageKey=\"id_2\", kafka_receivedTopic=customer-topic-1, kafka_receivedTimestamp=1627019602417, kafka_groupId=group_json}]\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2368)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2339)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2300)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2214)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2139)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2021)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1703)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1272)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1264)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1161)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.springframework.messaging.converter.MessageConversionException: Cannot handle message; nested exception is org.springframework.messaging.converter.MessageConversionException: Cannot convert from [com.aslan.kafka.model.DataModel] to [com.aslan.kafka.model.User] for GenericMessage [payload=com.aslan.kafka.model.DataModel@4da068cd, headers={__Key_TypeId__=[B@b9e82e9, kafka_offset=5, kafka_consumer=org.apache.kafka.clients.consumer.KafkaConsumer@3c939f68, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=2, kafka_receivedMessageKey=\"id_2\", kafka_receivedTopic=customer-topic-1, kafka_receivedTimestamp=1627019602417, kafka_groupId=group_json}], failedMessage=GenericMessage [payload=com.aslan.kafka.model.DataModel@4da068cd, headers={__Key_TypeId__=[B@b9e82e9, kafka_offset=5, kafka_consumer=org.apache.kafka.clients.consumer.KafkaConsumer@3c939f68, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=2, kafka_receivedMessageKey=\"id_2\", kafka_receivedTopic=customer-topic-1, kafka_receivedTimestamp=1627019602417, kafka_groupId=group_json}]\r\n\tat org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:352)\r\n\tat org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)\r\n\tat org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2319)\r\n\t... 11 common frames omitted\r\nCaused by: org.springframework.messaging.converter.MessageConversionException: Cannot convert from [com.aslan.kafka.model.DataModel] to [com.aslan.kafka.model.User] for GenericMessage [payload=com.aslan.kafka.model.DataModel@4da068cd, headers={__Key_TypeId__=[B@b9e82e9, kafka_offset=5, kafka_consumer=org.apache.kafka.clients.consumer.KafkaConsumer@3c939f68, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=2, kafka_receivedMessageKey=\"id_2\", kafka_receivedTopic=customer-topic-1, kafka_receivedTimestamp=1627019602417, kafka_groupId=group_json}]\r\n\tat org.springframework.messaging.handler.annotation.support.PayloadMethodArgumentResolver.resolveArgument(PayloadMethodArgumentResolver.java:145)\r\n\tat org.springframework.kafka.annotation.KafkaListenerAnnotationBeanPostProcessor$KafkaNullAwarePayloadArgumentResolver.resolveArgument(KafkaListenerAnnotationBeanPostProcessor.java:1123)\r\n\tat org.springframework.messaging.handler.invocation.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:117)\r\n\tat org.springframework.messaging.handler.invocation.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:148)\r\n\tat org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:116)\r\n\tat org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)\r\n\tat org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:347)\r\n\t... 14 common frames omitted\r\n","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:52:23.491Z","appMessage":"[Consumer clientId=consumer-group_json-9, groupId=group_json] Seeking to offset 5 for partition customer-topic-1-4","class":"org.apache.kafka.clients.consumer.KafkaConsumer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:52:23.492Z","appMessage":"[Consumer clientId=consumer-group_json-9, groupId=group_json] Seeking to offset 5 for partition customer-topic-1-5","class":"org.apache.kafka.clients.consumer.KafkaConsumer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:52:23.492Z","appMessage":"[Consumer clientId=consumer-group_json-9, groupId=group_json] Seeking to offset 5 for partition customer-topic-1-6","class":"org.apache.kafka.clients.consumer.KafkaConsumer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:52:23.493Z","appMessage":"[Consumer clientId=consumer-group_json-9, groupId=group_json] Seeking to offset 5 for partition customer-topic-1-7","class":"org.apache.kafka.clients.consumer.KafkaConsumer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:52:23.493Z","appMessage":"[Consumer clientId=consumer-group_json-9, groupId=group_json] Seeking to offset 5 for partition customer-topic-1-8","class":"org.apache.kafka.clients.consumer.KafkaConsumer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:52:23.494Z","appMessage":"[Consumer clientId=consumer-group_json-9, groupId=group_json] Seeking to offset 5 for partition customer-topic-1-9","class":"org.apache.kafka.clients.consumer.KafkaConsumer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:52:24.003Z","appMessage":"Backoff none exhausted for customer-topic-1-4@5","class":"org.springframework.kafka.listener.SeekToCurrentErrorHandler","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"ERROR","exception":"org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method could not be invoked with the incoming message\nEndpoint handler details:\nMethod [public void com.aslan.kafka.service.KafkaConsumer.consumeJson(com.aslan.kafka.model.User)]\nBean [com.aslan.kafka.service.KafkaConsumer@9658959]; nested exception is org.springframework.messaging.converter.MessageConversionException: Cannot handle message; nested exception is org.springframework.messaging.converter.MessageConversionException: Cannot convert from [com.aslan.kafka.model.DataModel] to [com.aslan.kafka.model.User] for GenericMessage [payload=com.aslan.kafka.model.DataModel@1265f6b7, headers={__Key_TypeId__=[B@7c5f1869, kafka_offset=5, kafka_consumer=org.apache.kafka.clients.consumer.KafkaConsumer@3c939f68, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=4, kafka_receivedMessageKey=\"id_4\", kafka_receivedTopic=customer-topic-1, kafka_receivedTimestamp=1627019602419, kafka_groupId=group_json}], failedMessage=GenericMessage [payload=com.aslan.kafka.model.DataModel@1265f6b7, headers={__Key_TypeId__=[B@7c5f1869, kafka_offset=5, kafka_consumer=org.apache.kafka.clients.consumer.KafkaConsumer@3c939f68, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=4, kafka_receivedMessageKey=\"id_4\", kafka_receivedTopic=customer-topic-1, kafka_receivedTimestamp=1627019602419, kafka_groupId=group_json}]; nested exception is org.springframework.messaging.converter.MessageConversionException: Cannot handle message; nested exception is org.springframework.messaging.converter.MessageConversionException: Cannot convert from [com.aslan.kafka.model.DataModel] to [com.aslan.kafka.model.User] for GenericMessage [payload=com.aslan.kafka.model.DataModel@1265f6b7, headers={__Key_TypeId__=[B@7c5f1869, kafka_offset=5, kafka_consumer=org.apache.kafka.clients.consumer.KafkaConsumer@3c939f68, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=4, kafka_receivedMessageKey=\"id_4\", kafka_receivedTopic=customer-topic-1, kafka_receivedTimestamp=1627019602419, kafka_groupId=group_json}], failedMessage=GenericMessage [payload=com.aslan.kafka.model.DataModel@1265f6b7, headers={__Key_TypeId__=[B@7c5f1869, kafka_offset=5, kafka_consumer=org.apache.kafka.clients.consumer.KafkaConsumer@3c939f68, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=4, kafka_receivedMessageKey=\"id_4\", kafka_receivedTopic=customer-topic-1, kafka_receivedTimestamp=1627019602419, kafka_groupId=group_json}]\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2368)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2339)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2300)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2214)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2139)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2021)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1703)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1272)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1264)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1161)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.springframework.messaging.converter.MessageConversionException: Cannot handle message; nested exception is org.springframework.messaging.converter.MessageConversionException: Cannot convert from [com.aslan.kafka.model.DataModel] to [com.aslan.kafka.model.User] for GenericMessage [payload=com.aslan.kafka.model.DataModel@1265f6b7, headers={__Key_TypeId__=[B@7c5f1869, kafka_offset=5, kafka_consumer=org.apache.kafka.clients.consumer.KafkaConsumer@3c939f68, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=4, kafka_receivedMessageKey=\"id_4\", kafka_receivedTopic=customer-topic-1, kafka_receivedTimestamp=1627019602419, kafka_groupId=group_json}], failedMessage=GenericMessage [payload=com.aslan.kafka.model.DataModel@1265f6b7, headers={__Key_TypeId__=[B@7c5f1869, kafka_offset=5, kafka_consumer=org.apache.kafka.clients.consumer.KafkaConsumer@3c939f68, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=4, kafka_receivedMessageKey=\"id_4\", kafka_receivedTopic=customer-topic-1, kafka_receivedTimestamp=1627019602419, kafka_groupId=group_json}]\r\n\tat org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:352)\r\n\tat org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)\r\n\tat org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2319)\r\n\t... 11 common frames omitted\r\nCaused by: org.springframework.messaging.converter.MessageConversionException: Cannot convert from [com.aslan.kafka.model.DataModel] to [com.aslan.kafka.model.User] for GenericMessage [payload=com.aslan.kafka.model.DataModel@1265f6b7, headers={__Key_TypeId__=[B@7c5f1869, kafka_offset=5, kafka_consumer=org.apache.kafka.clients.consumer.KafkaConsumer@3c939f68, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=4, kafka_receivedMessageKey=\"id_4\", kafka_receivedTopic=customer-topic-1, kafka_receivedTimestamp=1627019602419, kafka_groupId=group_json}]\r\n\tat org.springframework.messaging.handler.annotation.support.PayloadMethodArgumentResolver.resolveArgument(PayloadMethodArgumentResolver.java:145)\r\n\tat org.springframework.kafka.annotation.KafkaListenerAnnotationBeanPostProcessor$KafkaNullAwarePayloadArgumentResolver.resolveArgument(KafkaListenerAnnotationBeanPostProcessor.java:1123)\r\n\tat org.springframework.messaging.handler.invocation.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:117)\r\n\tat org.springframework.messaging.handler.invocation.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:148)\r\n\tat org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:116)\r\n\tat org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)\r\n\tat org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:347)\r\n\t... 14 common frames omitted\r\n","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:52:24.009Z","appMessage":"[Consumer clientId=consumer-group_json-9, groupId=group_json] Seeking to offset 5 for partition customer-topic-1-5","class":"org.apache.kafka.clients.consumer.KafkaConsumer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:52:24.009Z","appMessage":"[Consumer clientId=consumer-group_json-9, groupId=group_json] Seeking to offset 5 for partition customer-topic-1-6","class":"org.apache.kafka.clients.consumer.KafkaConsumer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:52:24.010Z","appMessage":"[Consumer clientId=consumer-group_json-9, groupId=group_json] Seeking to offset 5 for partition customer-topic-1-7","class":"org.apache.kafka.clients.consumer.KafkaConsumer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:52:24.010Z","appMessage":"[Consumer clientId=consumer-group_json-9, groupId=group_json] Seeking to offset 5 for partition customer-topic-1-8","class":"org.apache.kafka.clients.consumer.KafkaConsumer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:52:24.011Z","appMessage":"[Consumer clientId=consumer-group_json-9, groupId=group_json] Seeking to offset 5 for partition customer-topic-1-9","class":"org.apache.kafka.clients.consumer.KafkaConsumer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:52:24.518Z","appMessage":"Backoff none exhausted for customer-topic-1-5@5","class":"org.springframework.kafka.listener.SeekToCurrentErrorHandler","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"ERROR","exception":"org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method could not be invoked with the incoming message\nEndpoint handler details:\nMethod [public void com.aslan.kafka.service.KafkaConsumer.consumeJson(com.aslan.kafka.model.User)]\nBean [com.aslan.kafka.service.KafkaConsumer@9658959]; nested exception is org.springframework.messaging.converter.MessageConversionException: Cannot handle message; nested exception is org.springframework.messaging.converter.MessageConversionException: Cannot convert from [com.aslan.kafka.model.DataModel] to [com.aslan.kafka.model.User] for GenericMessage [payload=com.aslan.kafka.model.DataModel@32f7f12f, headers={__Key_TypeId__=[B@4d01b452, kafka_offset=5, kafka_consumer=org.apache.kafka.clients.consumer.KafkaConsumer@3c939f68, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=5, kafka_receivedMessageKey=\"id_5\", kafka_receivedTopic=customer-topic-1, kafka_receivedTimestamp=1627019602420, kafka_groupId=group_json}], failedMessage=GenericMessage [payload=com.aslan.kafka.model.DataModel@32f7f12f, headers={__Key_TypeId__=[B@4d01b452, kafka_offset=5, kafka_consumer=org.apache.kafka.clients.consumer.KafkaConsumer@3c939f68, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=5, kafka_receivedMessageKey=\"id_5\", kafka_receivedTopic=customer-topic-1, kafka_receivedTimestamp=1627019602420, kafka_groupId=group_json}]; nested exception is org.springframework.messaging.converter.MessageConversionException: Cannot handle message; nested exception is org.springframework.messaging.converter.MessageConversionException: Cannot convert from [com.aslan.kafka.model.DataModel] to [com.aslan.kafka.model.User] for GenericMessage [payload=com.aslan.kafka.model.DataModel@32f7f12f, headers={__Key_TypeId__=[B@4d01b452, kafka_offset=5, kafka_consumer=org.apache.kafka.clients.consumer.KafkaConsumer@3c939f68, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=5, kafka_receivedMessageKey=\"id_5\", kafka_receivedTopic=customer-topic-1, kafka_receivedTimestamp=1627019602420, kafka_groupId=group_json}], failedMessage=GenericMessage [payload=com.aslan.kafka.model.DataModel@32f7f12f, headers={__Key_TypeId__=[B@4d01b452, kafka_offset=5, kafka_consumer=org.apache.kafka.clients.consumer.KafkaConsumer@3c939f68, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=5, kafka_receivedMessageKey=\"id_5\", kafka_receivedTopic=customer-topic-1, kafka_receivedTimestamp=1627019602420, kafka_groupId=group_json}]\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2368)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2339)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2300)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2214)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2139)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2021)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1703)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1272)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1264)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1161)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.springframework.messaging.converter.MessageConversionException: Cannot handle message; nested exception is org.springframework.messaging.converter.MessageConversionException: Cannot convert from [com.aslan.kafka.model.DataModel] to [com.aslan.kafka.model.User] for GenericMessage [payload=com.aslan.kafka.model.DataModel@32f7f12f, headers={__Key_TypeId__=[B@4d01b452, kafka_offset=5, kafka_consumer=org.apache.kafka.clients.consumer.KafkaConsumer@3c939f68, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=5, kafka_receivedMessageKey=\"id_5\", kafka_receivedTopic=customer-topic-1, kafka_receivedTimestamp=1627019602420, kafka_groupId=group_json}], failedMessage=GenericMessage [payload=com.aslan.kafka.model.DataModel@32f7f12f, headers={__Key_TypeId__=[B@4d01b452, kafka_offset=5, kafka_consumer=org.apache.kafka.clients.consumer.KafkaConsumer@3c939f68, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=5, kafka_receivedMessageKey=\"id_5\", kafka_receivedTopic=customer-topic-1, kafka_receivedTimestamp=1627019602420, kafka_groupId=group_json}]\r\n\tat org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:352)\r\n\tat org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)\r\n\tat org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2319)\r\n\t... 11 common frames omitted\r\nCaused by: org.springframework.messaging.converter.MessageConversionException: Cannot convert from [com.aslan.kafka.model.DataModel] to [com.aslan.kafka.model.User] for GenericMessage [payload=com.aslan.kafka.model.DataModel@32f7f12f, headers={__Key_TypeId__=[B@4d01b452, kafka_offset=5, kafka_consumer=org.apache.kafka.clients.consumer.KafkaConsumer@3c939f68, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=5, kafka_receivedMessageKey=\"id_5\", kafka_receivedTopic=customer-topic-1, kafka_receivedTimestamp=1627019602420, kafka_groupId=group_json}]\r\n\tat org.springframework.messaging.handler.annotation.support.PayloadMethodArgumentResolver.resolveArgument(PayloadMethodArgumentResolver.java:145)\r\n\tat org.springframework.kafka.annotation.KafkaListenerAnnotationBeanPostProcessor$KafkaNullAwarePayloadArgumentResolver.resolveArgument(KafkaListenerAnnotationBeanPostProcessor.java:1123)\r\n\tat org.springframework.messaging.handler.invocation.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:117)\r\n\tat org.springframework.messaging.handler.invocation.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:148)\r\n\tat org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:116)\r\n\tat org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)\r\n\tat org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:347)\r\n\t... 14 common frames omitted\r\n","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:52:24.524Z","appMessage":"[Consumer clientId=consumer-group_json-9, groupId=group_json] Seeking to offset 5 for partition customer-topic-1-6","class":"org.apache.kafka.clients.consumer.KafkaConsumer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:52:24.525Z","appMessage":"[Consumer clientId=consumer-group_json-9, groupId=group_json] Seeking to offset 5 for partition customer-topic-1-7","class":"org.apache.kafka.clients.consumer.KafkaConsumer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:52:24.525Z","appMessage":"[Consumer clientId=consumer-group_json-9, groupId=group_json] Seeking to offset 5 for partition customer-topic-1-8","class":"org.apache.kafka.clients.consumer.KafkaConsumer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:52:24.526Z","appMessage":"[Consumer clientId=consumer-group_json-9, groupId=group_json] Seeking to offset 5 for partition customer-topic-1-9","class":"org.apache.kafka.clients.consumer.KafkaConsumer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:52:25.033Z","appMessage":"Backoff none exhausted for customer-topic-1-6@5","class":"org.springframework.kafka.listener.SeekToCurrentErrorHandler","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"ERROR","exception":"org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method could not be invoked with the incoming message\nEndpoint handler details:\nMethod [public void com.aslan.kafka.service.KafkaConsumer.consumeJson(com.aslan.kafka.model.User)]\nBean [com.aslan.kafka.service.KafkaConsumer@9658959]; nested exception is org.springframework.messaging.converter.MessageConversionException: Cannot handle message; nested exception is org.springframework.messaging.converter.MessageConversionException: Cannot convert from [com.aslan.kafka.model.DataModel] to [com.aslan.kafka.model.User] for GenericMessage [payload=com.aslan.kafka.model.DataModel@706c230b, headers={__Key_TypeId__=[B@7474f13f, kafka_offset=5, kafka_consumer=org.apache.kafka.clients.consumer.KafkaConsumer@3c939f68, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=6, kafka_receivedMessageKey=\"id_6\", kafka_receivedTopic=customer-topic-1, kafka_receivedTimestamp=1627019602420, kafka_groupId=group_json}], failedMessage=GenericMessage [payload=com.aslan.kafka.model.DataModel@706c230b, headers={__Key_TypeId__=[B@7474f13f, kafka_offset=5, kafka_consumer=org.apache.kafka.clients.consumer.KafkaConsumer@3c939f68, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=6, kafka_receivedMessageKey=\"id_6\", kafka_receivedTopic=customer-topic-1, kafka_receivedTimestamp=1627019602420, kafka_groupId=group_json}]; nested exception is org.springframework.messaging.converter.MessageConversionException: Cannot handle message; nested exception is org.springframework.messaging.converter.MessageConversionException: Cannot convert from [com.aslan.kafka.model.DataModel] to [com.aslan.kafka.model.User] for GenericMessage [payload=com.aslan.kafka.model.DataModel@706c230b, headers={__Key_TypeId__=[B@7474f13f, kafka_offset=5, kafka_consumer=org.apache.kafka.clients.consumer.KafkaConsumer@3c939f68, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=6, kafka_receivedMessageKey=\"id_6\", kafka_receivedTopic=customer-topic-1, kafka_receivedTimestamp=1627019602420, kafka_groupId=group_json}], failedMessage=GenericMessage [payload=com.aslan.kafka.model.DataModel@706c230b, headers={__Key_TypeId__=[B@7474f13f, kafka_offset=5, kafka_consumer=org.apache.kafka.clients.consumer.KafkaConsumer@3c939f68, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=6, kafka_receivedMessageKey=\"id_6\", kafka_receivedTopic=customer-topic-1, kafka_receivedTimestamp=1627019602420, kafka_groupId=group_json}]\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2368)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2339)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2300)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2214)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2139)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2021)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1703)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1272)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1264)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1161)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.springframework.messaging.converter.MessageConversionException: Cannot handle message; nested exception is org.springframework.messaging.converter.MessageConversionException: Cannot convert from [com.aslan.kafka.model.DataModel] to [com.aslan.kafka.model.User] for GenericMessage [payload=com.aslan.kafka.model.DataModel@706c230b, headers={__Key_TypeId__=[B@7474f13f, kafka_offset=5, kafka_consumer=org.apache.kafka.clients.consumer.KafkaConsumer@3c939f68, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=6, kafka_receivedMessageKey=\"id_6\", kafka_receivedTopic=customer-topic-1, kafka_receivedTimestamp=1627019602420, kafka_groupId=group_json}], failedMessage=GenericMessage [payload=com.aslan.kafka.model.DataModel@706c230b, headers={__Key_TypeId__=[B@7474f13f, kafka_offset=5, kafka_consumer=org.apache.kafka.clients.consumer.KafkaConsumer@3c939f68, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=6, kafka_receivedMessageKey=\"id_6\", kafka_receivedTopic=customer-topic-1, kafka_receivedTimestamp=1627019602420, kafka_groupId=group_json}]\r\n\tat org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:352)\r\n\tat org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)\r\n\tat org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2319)\r\n\t... 11 common frames omitted\r\nCaused by: org.springframework.messaging.converter.MessageConversionException: Cannot convert from [com.aslan.kafka.model.DataModel] to [com.aslan.kafka.model.User] for GenericMessage [payload=com.aslan.kafka.model.DataModel@706c230b, headers={__Key_TypeId__=[B@7474f13f, kafka_offset=5, kafka_consumer=org.apache.kafka.clients.consumer.KafkaConsumer@3c939f68, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=6, kafka_receivedMessageKey=\"id_6\", kafka_receivedTopic=customer-topic-1, kafka_receivedTimestamp=1627019602420, kafka_groupId=group_json}]\r\n\tat org.springframework.messaging.handler.annotation.support.PayloadMethodArgumentResolver.resolveArgument(PayloadMethodArgumentResolver.java:145)\r\n\tat org.springframework.kafka.annotation.KafkaListenerAnnotationBeanPostProcessor$KafkaNullAwarePayloadArgumentResolver.resolveArgument(KafkaListenerAnnotationBeanPostProcessor.java:1123)\r\n\tat org.springframework.messaging.handler.invocation.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:117)\r\n\tat org.springframework.messaging.handler.invocation.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:148)\r\n\tat org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:116)\r\n\tat org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)\r\n\tat org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:347)\r\n\t... 14 common frames omitted\r\n","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:52:25.039Z","appMessage":"[Consumer clientId=consumer-group_json-9, groupId=group_json] Seeking to offset 5 for partition customer-topic-1-7","class":"org.apache.kafka.clients.consumer.KafkaConsumer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:52:25.039Z","appMessage":"[Consumer clientId=consumer-group_json-9, groupId=group_json] Seeking to offset 5 for partition customer-topic-1-8","class":"org.apache.kafka.clients.consumer.KafkaConsumer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:52:25.040Z","appMessage":"[Consumer clientId=consumer-group_json-9, groupId=group_json] Seeking to offset 5 for partition customer-topic-1-9","class":"org.apache.kafka.clients.consumer.KafkaConsumer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:52:25.546Z","appMessage":"Backoff none exhausted for customer-topic-1-7@5","class":"org.springframework.kafka.listener.SeekToCurrentErrorHandler","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"ERROR","exception":"org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method could not be invoked with the incoming message\nEndpoint handler details:\nMethod [public void com.aslan.kafka.service.KafkaConsumer.consumeJson(com.aslan.kafka.model.User)]\nBean [com.aslan.kafka.service.KafkaConsumer@9658959]; nested exception is org.springframework.messaging.converter.MessageConversionException: Cannot handle message; nested exception is org.springframework.messaging.converter.MessageConversionException: Cannot convert from [com.aslan.kafka.model.DataModel] to [com.aslan.kafka.model.User] for GenericMessage [payload=com.aslan.kafka.model.DataModel@79870817, headers={__Key_TypeId__=[B@39649051, kafka_offset=5, kafka_consumer=org.apache.kafka.clients.consumer.KafkaConsumer@3c939f68, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=7, kafka_receivedMessageKey=\"id_7\", kafka_receivedTopic=customer-topic-1, kafka_receivedTimestamp=1627019602421, kafka_groupId=group_json}], failedMessage=GenericMessage [payload=com.aslan.kafka.model.DataModel@79870817, headers={__Key_TypeId__=[B@39649051, kafka_offset=5, kafka_consumer=org.apache.kafka.clients.consumer.KafkaConsumer@3c939f68, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=7, kafka_receivedMessageKey=\"id_7\", kafka_receivedTopic=customer-topic-1, kafka_receivedTimestamp=1627019602421, kafka_groupId=group_json}]; nested exception is org.springframework.messaging.converter.MessageConversionException: Cannot handle message; nested exception is org.springframework.messaging.converter.MessageConversionException: Cannot convert from [com.aslan.kafka.model.DataModel] to [com.aslan.kafka.model.User] for GenericMessage [payload=com.aslan.kafka.model.DataModel@79870817, headers={__Key_TypeId__=[B@39649051, kafka_offset=5, kafka_consumer=org.apache.kafka.clients.consumer.KafkaConsumer@3c939f68, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=7, kafka_receivedMessageKey=\"id_7\", kafka_receivedTopic=customer-topic-1, kafka_receivedTimestamp=1627019602421, kafka_groupId=group_json}], failedMessage=GenericMessage [payload=com.aslan.kafka.model.DataModel@79870817, headers={__Key_TypeId__=[B@39649051, kafka_offset=5, kafka_consumer=org.apache.kafka.clients.consumer.KafkaConsumer@3c939f68, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=7, kafka_receivedMessageKey=\"id_7\", kafka_receivedTopic=customer-topic-1, kafka_receivedTimestamp=1627019602421, kafka_groupId=group_json}]\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2368)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2339)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2300)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2214)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2139)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2021)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1703)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1272)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1264)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1161)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.springframework.messaging.converter.MessageConversionException: Cannot handle message; nested exception is org.springframework.messaging.converter.MessageConversionException: Cannot convert from [com.aslan.kafka.model.DataModel] to [com.aslan.kafka.model.User] for GenericMessage [payload=com.aslan.kafka.model.DataModel@79870817, headers={__Key_TypeId__=[B@39649051, kafka_offset=5, kafka_consumer=org.apache.kafka.clients.consumer.KafkaConsumer@3c939f68, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=7, kafka_receivedMessageKey=\"id_7\", kafka_receivedTopic=customer-topic-1, kafka_receivedTimestamp=1627019602421, kafka_groupId=group_json}], failedMessage=GenericMessage [payload=com.aslan.kafka.model.DataModel@79870817, headers={__Key_TypeId__=[B@39649051, kafka_offset=5, kafka_consumer=org.apache.kafka.clients.consumer.KafkaConsumer@3c939f68, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=7, kafka_receivedMessageKey=\"id_7\", kafka_receivedTopic=customer-topic-1, kafka_receivedTimestamp=1627019602421, kafka_groupId=group_json}]\r\n\tat org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:352)\r\n\tat org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)\r\n\tat org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2319)\r\n\t... 11 common frames omitted\r\nCaused by: org.springframework.messaging.converter.MessageConversionException: Cannot convert from [com.aslan.kafka.model.DataModel] to [com.aslan.kafka.model.User] for GenericMessage [payload=com.aslan.kafka.model.DataModel@79870817, headers={__Key_TypeId__=[B@39649051, kafka_offset=5, kafka_consumer=org.apache.kafka.clients.consumer.KafkaConsumer@3c939f68, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=7, kafka_receivedMessageKey=\"id_7\", kafka_receivedTopic=customer-topic-1, kafka_receivedTimestamp=1627019602421, kafka_groupId=group_json}]\r\n\tat org.springframework.messaging.handler.annotation.support.PayloadMethodArgumentResolver.resolveArgument(PayloadMethodArgumentResolver.java:145)\r\n\tat org.springframework.kafka.annotation.KafkaListenerAnnotationBeanPostProcessor$KafkaNullAwarePayloadArgumentResolver.resolveArgument(KafkaListenerAnnotationBeanPostProcessor.java:1123)\r\n\tat org.springframework.messaging.handler.invocation.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:117)\r\n\tat org.springframework.messaging.handler.invocation.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:148)\r\n\tat org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:116)\r\n\tat org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)\r\n\tat org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:347)\r\n\t... 14 common frames omitted\r\n","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:52:25.552Z","appMessage":"[Consumer clientId=consumer-group_json-9, groupId=group_json] Seeking to offset 5 for partition customer-topic-1-8","class":"org.apache.kafka.clients.consumer.KafkaConsumer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:52:25.552Z","appMessage":"[Consumer clientId=consumer-group_json-9, groupId=group_json] Seeking to offset 5 for partition customer-topic-1-9","class":"org.apache.kafka.clients.consumer.KafkaConsumer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:52:26.057Z","appMessage":"Backoff none exhausted for customer-topic-1-8@5","class":"org.springframework.kafka.listener.SeekToCurrentErrorHandler","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"ERROR","exception":"org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method could not be invoked with the incoming message\nEndpoint handler details:\nMethod [public void com.aslan.kafka.service.KafkaConsumer.consumeJson(com.aslan.kafka.model.User)]\nBean [com.aslan.kafka.service.KafkaConsumer@9658959]; nested exception is org.springframework.messaging.converter.MessageConversionException: Cannot handle message; nested exception is org.springframework.messaging.converter.MessageConversionException: Cannot convert from [com.aslan.kafka.model.DataModel] to [com.aslan.kafka.model.User] for GenericMessage [payload=com.aslan.kafka.model.DataModel@2881880d, headers={__Key_TypeId__=[B@7baf792b, kafka_offset=5, kafka_consumer=org.apache.kafka.clients.consumer.KafkaConsumer@3c939f68, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=8, kafka_receivedMessageKey=\"id_8\", kafka_receivedTopic=customer-topic-1, kafka_receivedTimestamp=1627019602422, kafka_groupId=group_json}], failedMessage=GenericMessage [payload=com.aslan.kafka.model.DataModel@2881880d, headers={__Key_TypeId__=[B@7baf792b, kafka_offset=5, kafka_consumer=org.apache.kafka.clients.consumer.KafkaConsumer@3c939f68, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=8, kafka_receivedMessageKey=\"id_8\", kafka_receivedTopic=customer-topic-1, kafka_receivedTimestamp=1627019602422, kafka_groupId=group_json}]; nested exception is org.springframework.messaging.converter.MessageConversionException: Cannot handle message; nested exception is org.springframework.messaging.converter.MessageConversionException: Cannot convert from [com.aslan.kafka.model.DataModel] to [com.aslan.kafka.model.User] for GenericMessage [payload=com.aslan.kafka.model.DataModel@2881880d, headers={__Key_TypeId__=[B@7baf792b, kafka_offset=5, kafka_consumer=org.apache.kafka.clients.consumer.KafkaConsumer@3c939f68, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=8, kafka_receivedMessageKey=\"id_8\", kafka_receivedTopic=customer-topic-1, kafka_receivedTimestamp=1627019602422, kafka_groupId=group_json}], failedMessage=GenericMessage [payload=com.aslan.kafka.model.DataModel@2881880d, headers={__Key_TypeId__=[B@7baf792b, kafka_offset=5, kafka_consumer=org.apache.kafka.clients.consumer.KafkaConsumer@3c939f68, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=8, kafka_receivedMessageKey=\"id_8\", kafka_receivedTopic=customer-topic-1, kafka_receivedTimestamp=1627019602422, kafka_groupId=group_json}]\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2368)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2339)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2300)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2214)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2139)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2021)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1703)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1272)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1264)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1161)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.springframework.messaging.converter.MessageConversionException: Cannot handle message; nested exception is org.springframework.messaging.converter.MessageConversionException: Cannot convert from [com.aslan.kafka.model.DataModel] to [com.aslan.kafka.model.User] for GenericMessage [payload=com.aslan.kafka.model.DataModel@2881880d, headers={__Key_TypeId__=[B@7baf792b, kafka_offset=5, kafka_consumer=org.apache.kafka.clients.consumer.KafkaConsumer@3c939f68, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=8, kafka_receivedMessageKey=\"id_8\", kafka_receivedTopic=customer-topic-1, kafka_receivedTimestamp=1627019602422, kafka_groupId=group_json}], failedMessage=GenericMessage [payload=com.aslan.kafka.model.DataModel@2881880d, headers={__Key_TypeId__=[B@7baf792b, kafka_offset=5, kafka_consumer=org.apache.kafka.clients.consumer.KafkaConsumer@3c939f68, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=8, kafka_receivedMessageKey=\"id_8\", kafka_receivedTopic=customer-topic-1, kafka_receivedTimestamp=1627019602422, kafka_groupId=group_json}]\r\n\tat org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:352)\r\n\tat org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)\r\n\tat org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2319)\r\n\t... 11 common frames omitted\r\nCaused by: org.springframework.messaging.converter.MessageConversionException: Cannot convert from [com.aslan.kafka.model.DataModel] to [com.aslan.kafka.model.User] for GenericMessage [payload=com.aslan.kafka.model.DataModel@2881880d, headers={__Key_TypeId__=[B@7baf792b, kafka_offset=5, kafka_consumer=org.apache.kafka.clients.consumer.KafkaConsumer@3c939f68, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=8, kafka_receivedMessageKey=\"id_8\", kafka_receivedTopic=customer-topic-1, kafka_receivedTimestamp=1627019602422, kafka_groupId=group_json}]\r\n\tat org.springframework.messaging.handler.annotation.support.PayloadMethodArgumentResolver.resolveArgument(PayloadMethodArgumentResolver.java:145)\r\n\tat org.springframework.kafka.annotation.KafkaListenerAnnotationBeanPostProcessor$KafkaNullAwarePayloadArgumentResolver.resolveArgument(KafkaListenerAnnotationBeanPostProcessor.java:1123)\r\n\tat org.springframework.messaging.handler.invocation.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:117)\r\n\tat org.springframework.messaging.handler.invocation.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:148)\r\n\tat org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:116)\r\n\tat org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)\r\n\tat org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:347)\r\n\t... 14 common frames omitted\r\n","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:52:26.063Z","appMessage":"[Consumer clientId=consumer-group_json-9, groupId=group_json] Seeking to offset 5 for partition customer-topic-1-9","class":"org.apache.kafka.clients.consumer.KafkaConsumer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:52:26.568Z","appMessage":"Backoff none exhausted for customer-topic-1-9@5","class":"org.springframework.kafka.listener.SeekToCurrentErrorHandler","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"ERROR","exception":"org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method could not be invoked with the incoming message\nEndpoint handler details:\nMethod [public void com.aslan.kafka.service.KafkaConsumer.consumeJson(com.aslan.kafka.model.User)]\nBean [com.aslan.kafka.service.KafkaConsumer@9658959]; nested exception is org.springframework.messaging.converter.MessageConversionException: Cannot handle message; nested exception is org.springframework.messaging.converter.MessageConversionException: Cannot convert from [com.aslan.kafka.model.DataModel] to [com.aslan.kafka.model.User] for GenericMessage [payload=com.aslan.kafka.model.DataModel@3aa911f9, headers={__Key_TypeId__=[B@27d2e8e5, kafka_offset=5, kafka_consumer=org.apache.kafka.clients.consumer.KafkaConsumer@3c939f68, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=9, kafka_receivedMessageKey=\"id_9\", kafka_receivedTopic=customer-topic-1, kafka_receivedTimestamp=1627019602423, kafka_groupId=group_json}], failedMessage=GenericMessage [payload=com.aslan.kafka.model.DataModel@3aa911f9, headers={__Key_TypeId__=[B@27d2e8e5, kafka_offset=5, kafka_consumer=org.apache.kafka.clients.consumer.KafkaConsumer@3c939f68, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=9, kafka_receivedMessageKey=\"id_9\", kafka_receivedTopic=customer-topic-1, kafka_receivedTimestamp=1627019602423, kafka_groupId=group_json}]; nested exception is org.springframework.messaging.converter.MessageConversionException: Cannot handle message; nested exception is org.springframework.messaging.converter.MessageConversionException: Cannot convert from [com.aslan.kafka.model.DataModel] to [com.aslan.kafka.model.User] for GenericMessage [payload=com.aslan.kafka.model.DataModel@3aa911f9, headers={__Key_TypeId__=[B@27d2e8e5, kafka_offset=5, kafka_consumer=org.apache.kafka.clients.consumer.KafkaConsumer@3c939f68, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=9, kafka_receivedMessageKey=\"id_9\", kafka_receivedTopic=customer-topic-1, kafka_receivedTimestamp=1627019602423, kafka_groupId=group_json}], failedMessage=GenericMessage [payload=com.aslan.kafka.model.DataModel@3aa911f9, headers={__Key_TypeId__=[B@27d2e8e5, kafka_offset=5, kafka_consumer=org.apache.kafka.clients.consumer.KafkaConsumer@3c939f68, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=9, kafka_receivedMessageKey=\"id_9\", kafka_receivedTopic=customer-topic-1, kafka_receivedTimestamp=1627019602423, kafka_groupId=group_json}]\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2368)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2339)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2300)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2214)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2139)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2021)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1703)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1272)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1264)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1161)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.springframework.messaging.converter.MessageConversionException: Cannot handle message; nested exception is org.springframework.messaging.converter.MessageConversionException: Cannot convert from [com.aslan.kafka.model.DataModel] to [com.aslan.kafka.model.User] for GenericMessage [payload=com.aslan.kafka.model.DataModel@3aa911f9, headers={__Key_TypeId__=[B@27d2e8e5, kafka_offset=5, kafka_consumer=org.apache.kafka.clients.consumer.KafkaConsumer@3c939f68, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=9, kafka_receivedMessageKey=\"id_9\", kafka_receivedTopic=customer-topic-1, kafka_receivedTimestamp=1627019602423, kafka_groupId=group_json}], failedMessage=GenericMessage [payload=com.aslan.kafka.model.DataModel@3aa911f9, headers={__Key_TypeId__=[B@27d2e8e5, kafka_offset=5, kafka_consumer=org.apache.kafka.clients.consumer.KafkaConsumer@3c939f68, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=9, kafka_receivedMessageKey=\"id_9\", kafka_receivedTopic=customer-topic-1, kafka_receivedTimestamp=1627019602423, kafka_groupId=group_json}]\r\n\tat org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:352)\r\n\tat org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)\r\n\tat org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2319)\r\n\t... 11 common frames omitted\r\nCaused by: org.springframework.messaging.converter.MessageConversionException: Cannot convert from [com.aslan.kafka.model.DataModel] to [com.aslan.kafka.model.User] for GenericMessage [payload=com.aslan.kafka.model.DataModel@3aa911f9, headers={__Key_TypeId__=[B@27d2e8e5, kafka_offset=5, kafka_consumer=org.apache.kafka.clients.consumer.KafkaConsumer@3c939f68, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=9, kafka_receivedMessageKey=\"id_9\", kafka_receivedTopic=customer-topic-1, kafka_receivedTimestamp=1627019602423, kafka_groupId=group_json}]\r\n\tat org.springframework.messaging.handler.annotation.support.PayloadMethodArgumentResolver.resolveArgument(PayloadMethodArgumentResolver.java:145)\r\n\tat org.springframework.kafka.annotation.KafkaListenerAnnotationBeanPostProcessor$KafkaNullAwarePayloadArgumentResolver.resolveArgument(KafkaListenerAnnotationBeanPostProcessor.java:1123)\r\n\tat org.springframework.messaging.handler.invocation.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:117)\r\n\tat org.springframework.messaging.handler.invocation.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:148)\r\n\tat org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:116)\r\n\tat org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)\r\n\tat org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:347)\r\n\t... 14 common frames omitted\r\n","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:55:22.647Z","appMessage":"[Consumer clientId=consumer-group_id-8, groupId=group_id] Revoke previously assigned partitions customer-topic-2-0","class":"org.apache.kafka.clients.consumer.internals.ConsumerCoordinator","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:55:22.647Z","appMessage":"[Consumer clientId=consumer-group_json-9, groupId=group_json] Revoke previously assigned partitions customer-topic-1-0, customer-topic-1-1, customer-topic-1-2, customer-topic-1-3, customer-topic-1-4, customer-topic-1-5, customer-topic-1-6, customer-topic-1-7, customer-topic-1-8, customer-topic-1-9","class":"org.apache.kafka.clients.consumer.internals.ConsumerCoordinator","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:55:22.648Z","appMessage":"group_id: partitions revoked: [customer-topic-2-0]","class":"org.springframework.kafka.listener.KafkaMessageListenerContainer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:55:22.649Z","appMessage":"group_json: partitions revoked: [customer-topic-1-0, customer-topic-1-1, customer-topic-1-2, customer-topic-1-3, customer-topic-1-4, customer-topic-1-5, customer-topic-1-6, customer-topic-1-7, customer-topic-1-8, customer-topic-1-9]","class":"org.springframework.kafka.listener.KafkaMessageListenerContainer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:55:22.649Z","appMessage":"[Consumer clientId=consumer-group_id-8, groupId=group_id] Member consumer-group_id-8-ba438338-2929-4262-a9ae-0ba59685548e sending LeaveGroup request to coordinator Officeroom:9092 (id: 2147483647 rack: null) due to the consumer unsubscribed from all topics","class":"org.apache.kafka.clients.consumer.internals.AbstractCoordinator","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:55:22.650Z","appMessage":"[Consumer clientId=consumer-group_json-9, groupId=group_json] Member consumer-group_json-9-080864b2-36cb-4ef5-a88a-86be8d683ee1 sending LeaveGroup request to coordinator Officeroom:9092 (id: 2147483647 rack: null) due to the consumer unsubscribed from all topics","class":"org.apache.kafka.clients.consumer.internals.AbstractCoordinator","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:55:22.651Z","appMessage":"[Consumer clientId=consumer-group_id-8, groupId=group_id] Unsubscribed all topics or patterns and assigned partitions","class":"org.apache.kafka.clients.consumer.KafkaConsumer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:55:22.652Z","appMessage":"[Consumer clientId=consumer-group_json-9, groupId=group_json] Unsubscribed all topics or patterns and assigned partitions","class":"org.apache.kafka.clients.consumer.KafkaConsumer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:55:22.658Z","appMessage":"Metrics scheduler closed","class":"org.apache.kafka.common.metrics.Metrics","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:55:22.658Z","appMessage":"Metrics scheduler closed","class":"org.apache.kafka.common.metrics.Metrics","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:55:22.659Z","appMessage":"Closing reporter org.apache.kafka.common.metrics.JmxReporter","class":"org.apache.kafka.common.metrics.Metrics","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:55:22.660Z","appMessage":"Closing reporter org.apache.kafka.common.metrics.JmxReporter","class":"org.apache.kafka.common.metrics.Metrics","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:55:22.660Z","appMessage":"Metrics reporters closed","class":"org.apache.kafka.common.metrics.Metrics","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:55:22.661Z","appMessage":"Metrics reporters closed","class":"org.apache.kafka.common.metrics.Metrics","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:55:22.669Z","appMessage":"App info kafka.consumer for consumer-group_json-9 unregistered","class":"org.apache.kafka.common.utils.AppInfoParser","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:55:22.669Z","appMessage":"group_json: Consumer stopped","class":"org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:55:22.670Z","appMessage":"App info kafka.consumer for consumer-group_id-8 unregistered","class":"org.apache.kafka.common.utils.AppInfoParser","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:55:22.670Z","appMessage":"group_id: Consumer stopped","class":"org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:55:22.672Z","appMessage":"[Producer clientId=producer-2] Closing the Kafka producer with timeoutMillis = 30000 ms.","class":"org.apache.kafka.clients.producer.KafkaProducer","thread":"Thread-28","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:55:22.676Z","appMessage":"Metrics scheduler closed","class":"org.apache.kafka.common.metrics.Metrics","thread":"Thread-28","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:55:22.676Z","appMessage":"Closing reporter org.apache.kafka.common.metrics.JmxReporter","class":"org.apache.kafka.common.metrics.Metrics","thread":"Thread-28","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:55:22.677Z","appMessage":"Metrics reporters closed","class":"org.apache.kafka.common.metrics.Metrics","thread":"Thread-28","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:55:22.678Z","appMessage":"App info kafka.producer for producer-2 unregistered","class":"org.apache.kafka.common.utils.AppInfoParser","thread":"Thread-28","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:55:22.972Z","appMessage":"Starting Application using Java 1.8.0_202 on Officeroom with PID 55836 (C:\\Users\\Officeroom\\JavaProj\\sb-aslan-kafka-template\\target\\classes started by Officeroom in C:\\Users\\Officeroom\\JavaProj\\sb-aslan-kafka-template)","class":"com.aslan.kafka.Application","thread":"restartedMain","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:55:22.973Z","appMessage":"The following profiles are active: local","class":"com.aslan.kafka.Application","thread":"restartedMain","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:55:23.564Z","appMessage":"Tomcat initialized with port(s): 8080 (http)","class":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread":"restartedMain","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:55:23.565Z","appMessage":"Initializing ProtocolHandler [\"http-nio-8080\"]","class":"org.apache.coyote.http11.Http11NioProtocol","thread":"restartedMain","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:55:23.566Z","appMessage":"Starting service [Tomcat]","class":"org.apache.catalina.core.StandardService","thread":"restartedMain","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:55:23.566Z","appMessage":"Starting Servlet engine: [Apache Tomcat/9.0.48]","class":"org.apache.catalina.core.StandardEngine","thread":"restartedMain","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:55:23.605Z","appMessage":"Initializing Spring embedded WebApplicationContext","class":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]","thread":"restartedMain","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:55:23.605Z","appMessage":"Root WebApplicationContext: initialization completed in 628 ms","class":"org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext","thread":"restartedMain","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:55:23.757Z","appMessage":"Cannot find template location: classpath:/templates/ (please add some templates, check your Mustache configuration, or set spring.mustache.check-template-location=false)","class":"org.springframework.boot.autoconfigure.mustache.MustacheAutoConfiguration","thread":"restartedMain","level":"WARN","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:55:23.766Z","appMessage":"Cannot find template location: classpath:/templates/ (please add some templates or check your Thymeleaf configuration)","class":"org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$DefaultTemplateResolverConfiguration","thread":"restartedMain","level":"WARN","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:55:23.859Z","appMessage":"LiveReload server is running on port 35729","class":"org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer","thread":"restartedMain","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:55:23.864Z","appMessage":"Exposing 13 endpoint(s) beneath base path ''","class":"org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver","thread":"restartedMain","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:55:23.888Z","appMessage":"ConsumerConfig values: \r\n\tallow.auto.create.topics = true\r\n\tauto.commit.interval.ms = 5000\r\n\tauto.offset.reset = latest\r\n\tbootstrap.servers = [127.0.0.1:9092]\r\n\tcheck.crcs = true\r\n\tclient.dns.lookup = use_all_dns_ips\r\n\tclient.id = consumer-group_id-10\r\n\tclient.rack = \r\n\tconnections.max.idle.ms = 540000\r\n\tdefault.api.timeout.ms = 60000\r\n\tenable.auto.commit = false\r\n\texclude.internal.topics = true\r\n\tfetch.max.bytes = 52428800\r\n\tfetch.max.wait.ms = 500\r\n\tfetch.min.bytes = 1\r\n\tgroup.id = group_id\r\n\tgroup.instance.id = null\r\n\theartbeat.interval.ms = 3000\r\n\tinterceptor.classes = []\r\n\tinternal.leave.group.on.close = true\r\n\tinternal.throw.on.fetch.stable.offset.unsupported = false\r\n\tisolation.level = read_uncommitted\r\n\tkey.deserializer = class org.apache.kafka.common.serialization.StringDeserializer\r\n\tmax.partition.fetch.bytes = 1048576\r\n\tmax.poll.interval.ms = 300000\r\n\tmax.poll.records = 500\r\n\tmetadata.max.age.ms = 300000\r\n\tmetric.reporters = []\r\n\tmetrics.num.samples = 2\r\n\tmetrics.recording.level = INFO\r\n\tmetrics.sample.window.ms = 30000\r\n\tpartition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor]\r\n\treceive.buffer.bytes = 65536\r\n\treconnect.backoff.max.ms = 1000\r\n\treconnect.backoff.ms = 50\r\n\trequest.timeout.ms = 30000\r\n\tretry.backoff.ms = 100\r\n\tsasl.client.callback.handler.class = null\r\n\tsasl.jaas.config = null\r\n\tsasl.kerberos.kinit.cmd = /usr/bin/kinit\r\n\tsasl.kerberos.min.time.before.relogin = 60000\r\n\tsasl.kerberos.service.name = null\r\n\tsasl.kerberos.ticket.renew.jitter = 0.05\r\n\tsasl.kerberos.ticket.renew.window.factor = 0.8\r\n\tsasl.login.callback.handler.class = null\r\n\tsasl.login.class = null\r\n\tsasl.login.refresh.buffer.seconds = 300\r\n\tsasl.login.refresh.min.period.seconds = 60\r\n\tsasl.login.refresh.window.factor = 0.8\r\n\tsasl.login.refresh.window.jitter = 0.05\r\n\tsasl.mechanism = GSSAPI\r\n\tsecurity.protocol = PLAINTEXT\r\n\tsecurity.providers = null\r\n\tsend.buffer.bytes = 131072\r\n\tsession.timeout.ms = 10000\r\n\tsocket.connection.setup.timeout.max.ms = 127000\r\n\tsocket.connection.setup.timeout.ms = 10000\r\n\tssl.cipher.suites = null\r\n\tssl.enabled.protocols = [TLSv1.2]\r\n\tssl.endpoint.identification.algorithm = https\r\n\tssl.engine.factory.class = null\r\n\tssl.key.password = null\r\n\tssl.keymanager.algorithm = SunX509\r\n\tssl.keystore.certificate.chain = null\r\n\tssl.keystore.key = null\r\n\tssl.keystore.location = null\r\n\tssl.keystore.password = null\r\n\tssl.keystore.type = JKS\r\n\tssl.protocol = TLSv1.2\r\n\tssl.provider = null\r\n\tssl.secure.random.implementation = null\r\n\tssl.trustmanager.algorithm = PKIX\r\n\tssl.truststore.certificates = null\r\n\tssl.truststore.location = null\r\n\tssl.truststore.password = null\r\n\tssl.truststore.type = JKS\r\n\tvalue.deserializer = class org.apache.kafka.common.serialization.StringDeserializer\r\n","class":"org.apache.kafka.clients.consumer.ConsumerConfig","thread":"restartedMain","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:55:23.901Z","appMessage":"Kafka version: 2.7.1","class":"org.apache.kafka.common.utils.AppInfoParser","thread":"restartedMain","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:55:23.902Z","appMessage":"Kafka commitId: 61dbce85d0d41457","class":"org.apache.kafka.common.utils.AppInfoParser","thread":"restartedMain","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:55:23.902Z","appMessage":"Kafka startTimeMs: 1627019723901","class":"org.apache.kafka.common.utils.AppInfoParser","thread":"restartedMain","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:55:23.903Z","appMessage":"[Consumer clientId=consumer-group_id-10, groupId=group_id] Subscribed to topic(s): customer-topic-2","class":"org.apache.kafka.clients.consumer.KafkaConsumer","thread":"restartedMain","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:55:23.906Z","appMessage":"ConsumerConfig values: \r\n\tallow.auto.create.topics = true\r\n\tauto.commit.interval.ms = 5000\r\n\tauto.offset.reset = latest\r\n\tbootstrap.servers = [127.0.0.1:9092]\r\n\tcheck.crcs = true\r\n\tclient.dns.lookup = use_all_dns_ips\r\n\tclient.id = consumer-group_json-11\r\n\tclient.rack = \r\n\tconnections.max.idle.ms = 540000\r\n\tdefault.api.timeout.ms = 60000\r\n\tenable.auto.commit = false\r\n\texclude.internal.topics = true\r\n\tfetch.max.bytes = 52428800\r\n\tfetch.max.wait.ms = 500\r\n\tfetch.min.bytes = 1\r\n\tgroup.id = group_json\r\n\tgroup.instance.id = null\r\n\theartbeat.interval.ms = 3000\r\n\tinterceptor.classes = []\r\n\tinternal.leave.group.on.close = true\r\n\tinternal.throw.on.fetch.stable.offset.unsupported = false\r\n\tisolation.level = read_uncommitted\r\n\tkey.deserializer = class org.apache.kafka.common.serialization.StringDeserializer\r\n\tmax.partition.fetch.bytes = 1048576\r\n\tmax.poll.interval.ms = 300000\r\n\tmax.poll.records = 500\r\n\tmetadata.max.age.ms = 300000\r\n\tmetric.reporters = []\r\n\tmetrics.num.samples = 2\r\n\tmetrics.recording.level = INFO\r\n\tmetrics.sample.window.ms = 30000\r\n\tpartition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor]\r\n\treceive.buffer.bytes = 65536\r\n\treconnect.backoff.max.ms = 1000\r\n\treconnect.backoff.ms = 50\r\n\trequest.timeout.ms = 30000\r\n\tretry.backoff.ms = 100\r\n\tsasl.client.callback.handler.class = null\r\n\tsasl.jaas.config = null\r\n\tsasl.kerberos.kinit.cmd = /usr/bin/kinit\r\n\tsasl.kerberos.min.time.before.relogin = 60000\r\n\tsasl.kerberos.service.name = null\r\n\tsasl.kerberos.ticket.renew.jitter = 0.05\r\n\tsasl.kerberos.ticket.renew.window.factor = 0.8\r\n\tsasl.login.callback.handler.class = null\r\n\tsasl.login.class = null\r\n\tsasl.login.refresh.buffer.seconds = 300\r\n\tsasl.login.refresh.min.period.seconds = 60\r\n\tsasl.login.refresh.window.factor = 0.8\r\n\tsasl.login.refresh.window.jitter = 0.05\r\n\tsasl.mechanism = GSSAPI\r\n\tsecurity.protocol = PLAINTEXT\r\n\tsecurity.providers = null\r\n\tsend.buffer.bytes = 131072\r\n\tsession.timeout.ms = 10000\r\n\tsocket.connection.setup.timeout.max.ms = 127000\r\n\tsocket.connection.setup.timeout.ms = 10000\r\n\tssl.cipher.suites = null\r\n\tssl.enabled.protocols = [TLSv1.2]\r\n\tssl.endpoint.identification.algorithm = https\r\n\tssl.engine.factory.class = null\r\n\tssl.key.password = null\r\n\tssl.keymanager.algorithm = SunX509\r\n\tssl.keystore.certificate.chain = null\r\n\tssl.keystore.key = null\r\n\tssl.keystore.location = null\r\n\tssl.keystore.password = null\r\n\tssl.keystore.type = JKS\r\n\tssl.protocol = TLSv1.2\r\n\tssl.provider = null\r\n\tssl.secure.random.implementation = null\r\n\tssl.trustmanager.algorithm = PKIX\r\n\tssl.truststore.certificates = null\r\n\tssl.truststore.location = null\r\n\tssl.truststore.password = null\r\n\tssl.truststore.type = JKS\r\n\tvalue.deserializer = class org.springframework.kafka.support.serializer.JsonDeserializer\r\n","class":"org.apache.kafka.clients.consumer.ConsumerConfig","thread":"restartedMain","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:55:23.910Z","appMessage":"[Consumer clientId=consumer-group_id-10, groupId=group_id] Cluster ID: Iu9DHTQ6SReFUqKIFFqxlQ","class":"org.apache.kafka.clients.Metadata","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:55:23.916Z","appMessage":"[Consumer clientId=consumer-group_id-10, groupId=group_id] Discovered group coordinator Officeroom:9092 (id: 2147483647 rack: null)","class":"org.apache.kafka.clients.consumer.internals.AbstractCoordinator","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:55:23.918Z","appMessage":"[Consumer clientId=consumer-group_id-10, groupId=group_id] (Re-)joining group","class":"org.apache.kafka.clients.consumer.internals.AbstractCoordinator","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:55:23.920Z","appMessage":"Kafka version: 2.7.1","class":"org.apache.kafka.common.utils.AppInfoParser","thread":"restartedMain","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:55:23.921Z","appMessage":"[Consumer clientId=consumer-group_id-10, groupId=group_id] (Re-)joining group","class":"org.apache.kafka.clients.consumer.internals.AbstractCoordinator","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:55:23.921Z","appMessage":"Kafka commitId: 61dbce85d0d41457","class":"org.apache.kafka.common.utils.AppInfoParser","thread":"restartedMain","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:55:23.922Z","appMessage":"Kafka startTimeMs: 1627019723920","class":"org.apache.kafka.common.utils.AppInfoParser","thread":"restartedMain","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:55:23.922Z","appMessage":"[Consumer clientId=consumer-group_json-11, groupId=group_json] Subscribed to topic(s): customer-topic-1","class":"org.apache.kafka.clients.consumer.KafkaConsumer","thread":"restartedMain","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:55:23.924Z","appMessage":"[Consumer clientId=consumer-group_id-10, groupId=group_id] Successfully joined group with generation Generation{generationId=13, memberId='consumer-group_id-10-5a114dfe-13c9-4044-bf9b-9d9deffdeda3', protocol='range'}","class":"org.apache.kafka.clients.consumer.internals.AbstractCoordinator","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:55:23.925Z","appMessage":"Starting ProtocolHandler [\"http-nio-8080\"]","class":"org.apache.coyote.http11.Http11NioProtocol","thread":"restartedMain","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:55:23.925Z","appMessage":"[Consumer clientId=consumer-group_id-10, groupId=group_id] Finished assignment for group at generation 13: {consumer-group_id-10-5a114dfe-13c9-4044-bf9b-9d9deffdeda3=Assignment(partitions=[customer-topic-2-0])}","class":"org.apache.kafka.clients.consumer.internals.ConsumerCoordinator","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:55:23.930Z","appMessage":"[Consumer clientId=consumer-group_id-10, groupId=group_id] Successfully synced group in generation Generation{generationId=13, memberId='consumer-group_id-10-5a114dfe-13c9-4044-bf9b-9d9deffdeda3', protocol='range'}","class":"org.apache.kafka.clients.consumer.internals.AbstractCoordinator","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:55:23.931Z","appMessage":"Tomcat started on port(s): 8080 (http) with context path ''","class":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread":"restartedMain","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:55:23.931Z","appMessage":"[Consumer clientId=consumer-group_json-11, groupId=group_json] Cluster ID: Iu9DHTQ6SReFUqKIFFqxlQ","class":"org.apache.kafka.clients.Metadata","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:55:23.932Z","appMessage":"[Consumer clientId=consumer-group_id-10, groupId=group_id] Notifying assignor about the new Assignment(partitions=[customer-topic-2-0])","class":"org.apache.kafka.clients.consumer.internals.ConsumerCoordinator","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:55:23.933Z","appMessage":"[Consumer clientId=consumer-group_json-11, groupId=group_json] Discovered group coordinator Officeroom:9092 (id: 2147483647 rack: null)","class":"org.apache.kafka.clients.consumer.internals.AbstractCoordinator","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:55:23.933Z","appMessage":"[Consumer clientId=consumer-group_id-10, groupId=group_id] Adding newly assigned partitions: customer-topic-2-0","class":"org.apache.kafka.clients.consumer.internals.ConsumerCoordinator","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:55:23.935Z","appMessage":"[Consumer clientId=consumer-group_json-11, groupId=group_json] (Re-)joining group","class":"org.apache.kafka.clients.consumer.internals.AbstractCoordinator","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:55:23.937Z","appMessage":"[Consumer clientId=consumer-group_id-10, groupId=group_id] Setting offset for partition customer-topic-2-0 to the committed offset FetchPosition{offset=6, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[Officeroom:9092 (id: 0 rack: null)], epoch=absent}}","class":"org.apache.kafka.clients.consumer.internals.ConsumerCoordinator","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:55:23.937Z","appMessage":"group_id: partitions assigned: [customer-topic-2-0]","class":"org.springframework.kafka.listener.KafkaMessageListenerContainer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:55:23.939Z","appMessage":"[Consumer clientId=consumer-group_json-11, groupId=group_json] (Re-)joining group","class":"org.apache.kafka.clients.consumer.internals.AbstractCoordinator","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:55:23.942Z","appMessage":"[Consumer clientId=consumer-group_json-11, groupId=group_json] Successfully joined group with generation Generation{generationId=7, memberId='consumer-group_json-11-4c677660-1fa0-4968-aa54-71974fbc1450', protocol='range'}","class":"org.apache.kafka.clients.consumer.internals.AbstractCoordinator","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:55:23.943Z","appMessage":"[Consumer clientId=consumer-group_json-11, groupId=group_json] Finished assignment for group at generation 7: {consumer-group_json-11-4c677660-1fa0-4968-aa54-71974fbc1450=Assignment(partitions=[customer-topic-1-0, customer-topic-1-1, customer-topic-1-2, customer-topic-1-3, customer-topic-1-4, customer-topic-1-5, customer-topic-1-6, customer-topic-1-7, customer-topic-1-8, customer-topic-1-9])}","class":"org.apache.kafka.clients.consumer.internals.ConsumerCoordinator","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:55:23.947Z","appMessage":"[Consumer clientId=consumer-group_json-11, groupId=group_json] Successfully synced group in generation Generation{generationId=7, memberId='consumer-group_json-11-4c677660-1fa0-4968-aa54-71974fbc1450', protocol='range'}","class":"org.apache.kafka.clients.consumer.internals.AbstractCoordinator","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:55:23.947Z","appMessage":"Started Application in 1.06 seconds (JVM running for 993.731)","class":"com.aslan.kafka.Application","thread":"restartedMain","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:55:23.948Z","appMessage":"[Consumer clientId=consumer-group_json-11, groupId=group_json] Notifying assignor about the new Assignment(partitions=[customer-topic-1-0, customer-topic-1-1, customer-topic-1-2, customer-topic-1-3, customer-topic-1-4, customer-topic-1-5, customer-topic-1-6, customer-topic-1-7, customer-topic-1-8, customer-topic-1-9])","class":"org.apache.kafka.clients.consumer.internals.ConsumerCoordinator","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:55:23.949Z","appMessage":"[Consumer clientId=consumer-group_json-11, groupId=group_json] Adding newly assigned partitions: customer-topic-1-0, customer-topic-1-1, customer-topic-1-2, customer-topic-1-3, customer-topic-1-4, customer-topic-1-5, customer-topic-1-6, customer-topic-1-7, customer-topic-1-8, customer-topic-1-9","class":"org.apache.kafka.clients.consumer.internals.ConsumerCoordinator","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:55:23.951Z","appMessage":"Condition evaluation unchanged","class":"org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener","thread":"restartedMain","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:55:23.951Z","appMessage":"[Consumer clientId=consumer-group_json-11, groupId=group_json] Setting offset for partition customer-topic-1-0 to the committed offset FetchPosition{offset=6, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[Officeroom:9092 (id: 0 rack: null)], epoch=absent}}","class":"org.apache.kafka.clients.consumer.internals.ConsumerCoordinator","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:55:23.952Z","appMessage":"[Consumer clientId=consumer-group_json-11, groupId=group_json] Setting offset for partition customer-topic-1-1 to the committed offset FetchPosition{offset=6, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[Officeroom:9092 (id: 0 rack: null)], epoch=absent}}","class":"org.apache.kafka.clients.consumer.internals.ConsumerCoordinator","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:55:23.953Z","appMessage":"[Consumer clientId=consumer-group_json-11, groupId=group_json] Setting offset for partition customer-topic-1-2 to the committed offset FetchPosition{offset=6, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[Officeroom:9092 (id: 0 rack: null)], epoch=absent}}","class":"org.apache.kafka.clients.consumer.internals.ConsumerCoordinator","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:55:23.954Z","appMessage":"[Consumer clientId=consumer-group_json-11, groupId=group_json] Setting offset for partition customer-topic-1-3 to the committed offset FetchPosition{offset=6, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[Officeroom:9092 (id: 0 rack: null)], epoch=absent}}","class":"org.apache.kafka.clients.consumer.internals.ConsumerCoordinator","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:55:23.955Z","appMessage":"[Consumer clientId=consumer-group_json-11, groupId=group_json] Setting offset for partition customer-topic-1-4 to the committed offset FetchPosition{offset=6, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[Officeroom:9092 (id: 0 rack: null)], epoch=absent}}","class":"org.apache.kafka.clients.consumer.internals.ConsumerCoordinator","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:55:23.955Z","appMessage":"[Consumer clientId=consumer-group_json-11, groupId=group_json] Setting offset for partition customer-topic-1-5 to the committed offset FetchPosition{offset=6, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[Officeroom:9092 (id: 0 rack: null)], epoch=absent}}","class":"org.apache.kafka.clients.consumer.internals.ConsumerCoordinator","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:55:23.956Z","appMessage":"[Consumer clientId=consumer-group_json-11, groupId=group_json] Setting offset for partition customer-topic-1-6 to the committed offset FetchPosition{offset=6, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[Officeroom:9092 (id: 0 rack: null)], epoch=absent}}","class":"org.apache.kafka.clients.consumer.internals.ConsumerCoordinator","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:55:23.957Z","appMessage":"[Consumer clientId=consumer-group_json-11, groupId=group_json] Setting offset for partition customer-topic-1-7 to the committed offset FetchPosition{offset=6, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[Officeroom:9092 (id: 0 rack: null)], epoch=absent}}","class":"org.apache.kafka.clients.consumer.internals.ConsumerCoordinator","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:55:23.957Z","appMessage":"[Consumer clientId=consumer-group_json-11, groupId=group_json] Setting offset for partition customer-topic-1-8 to the committed offset FetchPosition{offset=6, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[Officeroom:9092 (id: 0 rack: null)], epoch=absent}}","class":"org.apache.kafka.clients.consumer.internals.ConsumerCoordinator","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:55:23.958Z","appMessage":"[Consumer clientId=consumer-group_json-11, groupId=group_json] Setting offset for partition customer-topic-1-9 to the committed offset FetchPosition{offset=6, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[Officeroom:9092 (id: 0 rack: null)], epoch=absent}}","class":"org.apache.kafka.clients.consumer.internals.ConsumerCoordinator","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:55:23.958Z","appMessage":"group_json: partitions assigned: [customer-topic-1-0, customer-topic-1-1, customer-topic-1-2, customer-topic-1-3, customer-topic-1-4, customer-topic-1-5, customer-topic-1-6, customer-topic-1-7, customer-topic-1-8, customer-topic-1-9]","class":"org.springframework.kafka.listener.KafkaMessageListenerContainer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:55:42.458Z","appMessage":"Initializing Spring DispatcherServlet 'dispatcherServlet'","class":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]","thread":"http-nio-8080-exec-2","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:55:42.459Z","appMessage":"Initializing Servlet 'dispatcherServlet'","class":"org.springframework.web.servlet.DispatcherServlet","thread":"http-nio-8080-exec-2","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:55:42.461Z","appMessage":"Completed initialization in 2 ms","class":"org.springframework.web.servlet.DispatcherServlet","thread":"http-nio-8080-exec-2","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:55:42.462Z","appMessage":"ApiController::producer(): Start","class":"com.aslan.kafka.controller.ApiController","thread":"http-nio-8080-exec-2","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:55:42.463Z","appMessage":"ApiController::producer(): Key: id_0","class":"com.aslan.kafka.controller.ApiController","thread":"http-nio-8080-exec-2","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:55:42.464Z","appMessage":"ProducerConfig values: \r\n\tacks = -1\r\n\tbatch.size = 16384\r\n\tbootstrap.servers = [127.0.0.1:9092]\r\n\tbuffer.memory = 33554432\r\n\tclient.dns.lookup = use_all_dns_ips\r\n\tclient.id = producer-3\r\n\tcompression.type = none\r\n\tconnections.max.idle.ms = 540000\r\n\tdelivery.timeout.ms = 120000\r\n\tenable.idempotence = false\r\n\tinterceptor.classes = []\r\n\tinternal.auto.downgrade.txn.commit = true\r\n\tkey.serializer = class org.springframework.kafka.support.serializer.JsonSerializer\r\n\tlinger.ms = 0\r\n\tmax.block.ms = 60000\r\n\tmax.in.flight.requests.per.connection = 5\r\n\tmax.request.size = 1048576\r\n\tmetadata.max.age.ms = 300000\r\n\tmetadata.max.idle.ms = 300000\r\n\tmetric.reporters = []\r\n\tmetrics.num.samples = 2\r\n\tmetrics.recording.level = INFO\r\n\tmetrics.sample.window.ms = 30000\r\n\tpartitioner.class = class org.apache.kafka.clients.producer.internals.DefaultPartitioner\r\n\treceive.buffer.bytes = 32768\r\n\treconnect.backoff.max.ms = 1000\r\n\treconnect.backoff.ms = 50\r\n\trequest.timeout.ms = 30000\r\n\tretries = 10\r\n\tretry.backoff.ms = 100\r\n\tsasl.client.callback.handler.class = null\r\n\tsasl.jaas.config = null\r\n\tsasl.kerberos.kinit.cmd = /usr/bin/kinit\r\n\tsasl.kerberos.min.time.before.relogin = 60000\r\n\tsasl.kerberos.service.name = null\r\n\tsasl.kerberos.ticket.renew.jitter = 0.05\r\n\tsasl.kerberos.ticket.renew.window.factor = 0.8\r\n\tsasl.login.callback.handler.class = null\r\n\tsasl.login.class = null\r\n\tsasl.login.refresh.buffer.seconds = 300\r\n\tsasl.login.refresh.min.period.seconds = 60\r\n\tsasl.login.refresh.window.factor = 0.8\r\n\tsasl.login.refresh.window.jitter = 0.05\r\n\tsasl.mechanism = GSSAPI\r\n\tsecurity.protocol = PLAINTEXT\r\n\tsecurity.providers = null\r\n\tsend.buffer.bytes = 131072\r\n\tsocket.connection.setup.timeout.max.ms = 127000\r\n\tsocket.connection.setup.timeout.ms = 10000\r\n\tssl.cipher.suites = null\r\n\tssl.enabled.protocols = [TLSv1.2]\r\n\tssl.endpoint.identification.algorithm = https\r\n\tssl.engine.factory.class = null\r\n\tssl.key.password = null\r\n\tssl.keymanager.algorithm = SunX509\r\n\tssl.keystore.certificate.chain = null\r\n\tssl.keystore.key = null\r\n\tssl.keystore.location = null\r\n\tssl.keystore.password = null\r\n\tssl.keystore.type = JKS\r\n\tssl.protocol = TLSv1.2\r\n\tssl.provider = null\r\n\tssl.secure.random.implementation = null\r\n\tssl.trustmanager.algorithm = PKIX\r\n\tssl.truststore.certificates = null\r\n\tssl.truststore.location = null\r\n\tssl.truststore.password = null\r\n\tssl.truststore.type = JKS\r\n\ttransaction.timeout.ms = 60000\r\n\ttransactional.id = null\r\n\tvalue.serializer = class org.springframework.kafka.support.serializer.JsonSerializer\r\n","class":"org.apache.kafka.clients.producer.ProducerConfig","thread":"http-nio-8080-exec-2","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:55:42.486Z","appMessage":"Kafka version: 2.7.1","class":"org.apache.kafka.common.utils.AppInfoParser","thread":"http-nio-8080-exec-2","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:55:42.487Z","appMessage":"Kafka commitId: 61dbce85d0d41457","class":"org.apache.kafka.common.utils.AppInfoParser","thread":"http-nio-8080-exec-2","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:55:42.488Z","appMessage":"Kafka startTimeMs: 1627019742486","class":"org.apache.kafka.common.utils.AppInfoParser","thread":"http-nio-8080-exec-2","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:55:42.492Z","appMessage":"[Producer clientId=producer-3] Cluster ID: Iu9DHTQ6SReFUqKIFFqxlQ","class":"org.apache.kafka.clients.Metadata","thread":"kafka-producer-network-thread | producer-3","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:55:42.496Z","appMessage":"ApiController::producer(): Key: id_1","class":"com.aslan.kafka.controller.ApiController","thread":"http-nio-8080-exec-2","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:55:42.497Z","appMessage":"ApiController::producer(): Key: id_2","class":"com.aslan.kafka.controller.ApiController","thread":"http-nio-8080-exec-2","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:55:42.498Z","appMessage":"ApiController::producer(): Key: id_3","class":"com.aslan.kafka.controller.ApiController","thread":"http-nio-8080-exec-2","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:55:42.499Z","appMessage":"ApiController::producer(): Key: id_4","class":"com.aslan.kafka.controller.ApiController","thread":"http-nio-8080-exec-2","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:55:42.499Z","appMessage":"ApiController::producer(): Key: id_5","class":"com.aslan.kafka.controller.ApiController","thread":"http-nio-8080-exec-2","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:55:42.500Z","appMessage":"ApiController::producer(): Key: id_6","class":"com.aslan.kafka.controller.ApiController","thread":"http-nio-8080-exec-2","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:55:42.502Z","appMessage":"ApiController::producer(): Key: id_7","class":"com.aslan.kafka.controller.ApiController","thread":"http-nio-8080-exec-2","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:55:42.503Z","appMessage":"Sent message=[com.aslan.kafka.model.DataModel@70fa4309] with offset=[6]","class":"com.aslan.kafka.controller.ApiController","thread":"kafka-producer-network-thread | producer-3","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:55:42.503Z","appMessage":"ApiController::producer(): Key: id_8","class":"com.aslan.kafka.controller.ApiController","thread":"http-nio-8080-exec-2","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:55:42.505Z","appMessage":"Sent message=[com.aslan.kafka.model.DataModel@70fa4309] with offset=[6]","class":"com.aslan.kafka.controller.ApiController","thread":"kafka-producer-network-thread | producer-3","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:55:42.505Z","appMessage":"ApiController::producer(): Key: id_9","class":"com.aslan.kafka.controller.ApiController","thread":"http-nio-8080-exec-2","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:55:42.507Z","appMessage":"ApiController::producer(): End","class":"com.aslan.kafka.controller.ApiController","thread":"http-nio-8080-exec-2","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:55:42.508Z","appMessage":"Sent message=[com.aslan.kafka.model.DataModel@70fa4309] with offset=[6]","class":"com.aslan.kafka.controller.ApiController","thread":"kafka-producer-network-thread | producer-3","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:55:42.509Z","appMessage":"Sent message=[com.aslan.kafka.model.DataModel@70fa4309] with offset=[6]","class":"com.aslan.kafka.controller.ApiController","thread":"kafka-producer-network-thread | producer-3","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:55:42.511Z","appMessage":"Sent message=[com.aslan.kafka.model.DataModel@70fa4309] with offset=[6]","class":"com.aslan.kafka.controller.ApiController","thread":"kafka-producer-network-thread | producer-3","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:55:42.512Z","appMessage":"Sent message=[com.aslan.kafka.model.DataModel@70fa4309] with offset=[6]","class":"com.aslan.kafka.controller.ApiController","thread":"kafka-producer-network-thread | producer-3","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:55:42.513Z","appMessage":"Sent message=[com.aslan.kafka.model.DataModel@70fa4309] with offset=[6]","class":"com.aslan.kafka.controller.ApiController","thread":"kafka-producer-network-thread | producer-3","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:55:42.514Z","appMessage":"Sent message=[com.aslan.kafka.model.DataModel@70fa4309] with offset=[6]","class":"com.aslan.kafka.controller.ApiController","thread":"kafka-producer-network-thread | producer-3","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:55:42.514Z","appMessage":"Sent message=[com.aslan.kafka.model.DataModel@70fa4309] with offset=[6]","class":"com.aslan.kafka.controller.ApiController","thread":"kafka-producer-network-thread | producer-3","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:55:42.515Z","appMessage":"Sent message=[com.aslan.kafka.model.DataModel@70fa4309] with offset=[6]","class":"com.aslan.kafka.controller.ApiController","thread":"kafka-producer-network-thread | producer-3","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:57:14.544Z","appMessage":"[Consumer clientId=consumer-group_json-11, groupId=group_json] Revoke previously assigned partitions customer-topic-1-0, customer-topic-1-1, customer-topic-1-2, customer-topic-1-3, customer-topic-1-4, customer-topic-1-5, customer-topic-1-6, customer-topic-1-7, customer-topic-1-8, customer-topic-1-9","class":"org.apache.kafka.clients.consumer.internals.ConsumerCoordinator","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:57:14.543Z","appMessage":"[Consumer clientId=consumer-group_id-10, groupId=group_id] Revoke previously assigned partitions customer-topic-2-0","class":"org.apache.kafka.clients.consumer.internals.ConsumerCoordinator","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:57:14.544Z","appMessage":"group_json: partitions revoked: [customer-topic-1-0, customer-topic-1-1, customer-topic-1-2, customer-topic-1-3, customer-topic-1-4, customer-topic-1-5, customer-topic-1-6, customer-topic-1-7, customer-topic-1-8, customer-topic-1-9]","class":"org.springframework.kafka.listener.KafkaMessageListenerContainer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:57:14.545Z","appMessage":"group_id: partitions revoked: [customer-topic-2-0]","class":"org.springframework.kafka.listener.KafkaMessageListenerContainer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:57:14.545Z","appMessage":"[Consumer clientId=consumer-group_json-11, groupId=group_json] Member consumer-group_json-11-4c677660-1fa0-4968-aa54-71974fbc1450 sending LeaveGroup request to coordinator Officeroom:9092 (id: 2147483647 rack: null) due to the consumer unsubscribed from all topics","class":"org.apache.kafka.clients.consumer.internals.AbstractCoordinator","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:57:14.546Z","appMessage":"[Consumer clientId=consumer-group_id-10, groupId=group_id] Member consumer-group_id-10-5a114dfe-13c9-4044-bf9b-9d9deffdeda3 sending LeaveGroup request to coordinator Officeroom:9092 (id: 2147483647 rack: null) due to the consumer unsubscribed from all topics","class":"org.apache.kafka.clients.consumer.internals.AbstractCoordinator","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:57:14.546Z","appMessage":"[Consumer clientId=consumer-group_json-11, groupId=group_json] Unsubscribed all topics or patterns and assigned partitions","class":"org.apache.kafka.clients.consumer.KafkaConsumer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:57:14.547Z","appMessage":"[Consumer clientId=consumer-group_id-10, groupId=group_id] Unsubscribed all topics or patterns and assigned partitions","class":"org.apache.kafka.clients.consumer.KafkaConsumer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:57:14.551Z","appMessage":"Metrics scheduler closed","class":"org.apache.kafka.common.metrics.Metrics","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:57:14.551Z","appMessage":"Metrics scheduler closed","class":"org.apache.kafka.common.metrics.Metrics","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:57:14.552Z","appMessage":"Closing reporter org.apache.kafka.common.metrics.JmxReporter","class":"org.apache.kafka.common.metrics.Metrics","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:57:14.552Z","appMessage":"Closing reporter org.apache.kafka.common.metrics.JmxReporter","class":"org.apache.kafka.common.metrics.Metrics","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:57:14.553Z","appMessage":"Metrics reporters closed","class":"org.apache.kafka.common.metrics.Metrics","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:57:14.553Z","appMessage":"Metrics reporters closed","class":"org.apache.kafka.common.metrics.Metrics","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:57:14.558Z","appMessage":"App info kafka.consumer for consumer-group_json-11 unregistered","class":"org.apache.kafka.common.utils.AppInfoParser","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:57:14.558Z","appMessage":"group_json: Consumer stopped","class":"org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:57:14.558Z","appMessage":"App info kafka.consumer for consumer-group_id-10 unregistered","class":"org.apache.kafka.common.utils.AppInfoParser","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:57:14.559Z","appMessage":"group_id: Consumer stopped","class":"org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:57:14.560Z","appMessage":"[Producer clientId=producer-3] Closing the Kafka producer with timeoutMillis = 30000 ms.","class":"org.apache.kafka.clients.producer.KafkaProducer","thread":"Thread-32","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:57:14.562Z","appMessage":"Metrics scheduler closed","class":"org.apache.kafka.common.metrics.Metrics","thread":"Thread-32","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:57:14.563Z","appMessage":"Closing reporter org.apache.kafka.common.metrics.JmxReporter","class":"org.apache.kafka.common.metrics.Metrics","thread":"Thread-32","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:57:14.563Z","appMessage":"Metrics reporters closed","class":"org.apache.kafka.common.metrics.Metrics","thread":"Thread-32","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:57:14.563Z","appMessage":"App info kafka.producer for producer-3 unregistered","class":"org.apache.kafka.common.utils.AppInfoParser","thread":"Thread-32","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:57:14.970Z","appMessage":"Starting Application using Java 1.8.0_202 on Officeroom with PID 55836 (C:\\Users\\Officeroom\\JavaProj\\sb-aslan-kafka-template\\target\\classes started by Officeroom in C:\\Users\\Officeroom\\JavaProj\\sb-aslan-kafka-template)","class":"com.aslan.kafka.Application","thread":"restartedMain","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:57:14.971Z","appMessage":"The following profiles are active: local","class":"com.aslan.kafka.Application","thread":"restartedMain","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:57:15.538Z","appMessage":"Tomcat initialized with port(s): 8080 (http)","class":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread":"restartedMain","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:57:15.539Z","appMessage":"Initializing ProtocolHandler [\"http-nio-8080\"]","class":"org.apache.coyote.http11.Http11NioProtocol","thread":"restartedMain","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:57:15.539Z","appMessage":"Starting service [Tomcat]","class":"org.apache.catalina.core.StandardService","thread":"restartedMain","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:57:15.540Z","appMessage":"Starting Servlet engine: [Apache Tomcat/9.0.48]","class":"org.apache.catalina.core.StandardEngine","thread":"restartedMain","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:57:15.578Z","appMessage":"Initializing Spring embedded WebApplicationContext","class":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]","thread":"restartedMain","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:57:15.578Z","appMessage":"Root WebApplicationContext: initialization completed in 603 ms","class":"org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext","thread":"restartedMain","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:57:15.728Z","appMessage":"Cannot find template location: classpath:/templates/ (please add some templates, check your Mustache configuration, or set spring.mustache.check-template-location=false)","class":"org.springframework.boot.autoconfigure.mustache.MustacheAutoConfiguration","thread":"restartedMain","level":"WARN","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:57:15.735Z","appMessage":"Cannot find template location: classpath:/templates/ (please add some templates or check your Thymeleaf configuration)","class":"org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$DefaultTemplateResolverConfiguration","thread":"restartedMain","level":"WARN","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:57:15.816Z","appMessage":"LiveReload server is running on port 35729","class":"org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer","thread":"restartedMain","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:57:15.822Z","appMessage":"Exposing 13 endpoint(s) beneath base path ''","class":"org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver","thread":"restartedMain","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:57:15.846Z","appMessage":"ConsumerConfig values: \r\n\tallow.auto.create.topics = true\r\n\tauto.commit.interval.ms = 5000\r\n\tauto.offset.reset = latest\r\n\tbootstrap.servers = [127.0.0.1:9092]\r\n\tcheck.crcs = true\r\n\tclient.dns.lookup = use_all_dns_ips\r\n\tclient.id = consumer-group_id-12\r\n\tclient.rack = \r\n\tconnections.max.idle.ms = 540000\r\n\tdefault.api.timeout.ms = 60000\r\n\tenable.auto.commit = false\r\n\texclude.internal.topics = true\r\n\tfetch.max.bytes = 52428800\r\n\tfetch.max.wait.ms = 500\r\n\tfetch.min.bytes = 1\r\n\tgroup.id = group_id\r\n\tgroup.instance.id = null\r\n\theartbeat.interval.ms = 3000\r\n\tinterceptor.classes = []\r\n\tinternal.leave.group.on.close = true\r\n\tinternal.throw.on.fetch.stable.offset.unsupported = false\r\n\tisolation.level = read_uncommitted\r\n\tkey.deserializer = class org.apache.kafka.common.serialization.StringDeserializer\r\n\tmax.partition.fetch.bytes = 1048576\r\n\tmax.poll.interval.ms = 300000\r\n\tmax.poll.records = 500\r\n\tmetadata.max.age.ms = 300000\r\n\tmetric.reporters = []\r\n\tmetrics.num.samples = 2\r\n\tmetrics.recording.level = INFO\r\n\tmetrics.sample.window.ms = 30000\r\n\tpartition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor]\r\n\treceive.buffer.bytes = 65536\r\n\treconnect.backoff.max.ms = 1000\r\n\treconnect.backoff.ms = 50\r\n\trequest.timeout.ms = 30000\r\n\tretry.backoff.ms = 100\r\n\tsasl.client.callback.handler.class = null\r\n\tsasl.jaas.config = null\r\n\tsasl.kerberos.kinit.cmd = /usr/bin/kinit\r\n\tsasl.kerberos.min.time.before.relogin = 60000\r\n\tsasl.kerberos.service.name = null\r\n\tsasl.kerberos.ticket.renew.jitter = 0.05\r\n\tsasl.kerberos.ticket.renew.window.factor = 0.8\r\n\tsasl.login.callback.handler.class = null\r\n\tsasl.login.class = null\r\n\tsasl.login.refresh.buffer.seconds = 300\r\n\tsasl.login.refresh.min.period.seconds = 60\r\n\tsasl.login.refresh.window.factor = 0.8\r\n\tsasl.login.refresh.window.jitter = 0.05\r\n\tsasl.mechanism = GSSAPI\r\n\tsecurity.protocol = PLAINTEXT\r\n\tsecurity.providers = null\r\n\tsend.buffer.bytes = 131072\r\n\tsession.timeout.ms = 10000\r\n\tsocket.connection.setup.timeout.max.ms = 127000\r\n\tsocket.connection.setup.timeout.ms = 10000\r\n\tssl.cipher.suites = null\r\n\tssl.enabled.protocols = [TLSv1.2]\r\n\tssl.endpoint.identification.algorithm = https\r\n\tssl.engine.factory.class = null\r\n\tssl.key.password = null\r\n\tssl.keymanager.algorithm = SunX509\r\n\tssl.keystore.certificate.chain = null\r\n\tssl.keystore.key = null\r\n\tssl.keystore.location = null\r\n\tssl.keystore.password = null\r\n\tssl.keystore.type = JKS\r\n\tssl.protocol = TLSv1.2\r\n\tssl.provider = null\r\n\tssl.secure.random.implementation = null\r\n\tssl.trustmanager.algorithm = PKIX\r\n\tssl.truststore.certificates = null\r\n\tssl.truststore.location = null\r\n\tssl.truststore.password = null\r\n\tssl.truststore.type = JKS\r\n\tvalue.deserializer = class org.apache.kafka.common.serialization.StringDeserializer\r\n","class":"org.apache.kafka.clients.consumer.ConsumerConfig","thread":"restartedMain","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:57:15.859Z","appMessage":"Kafka version: 2.7.1","class":"org.apache.kafka.common.utils.AppInfoParser","thread":"restartedMain","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:57:15.860Z","appMessage":"Kafka commitId: 61dbce85d0d41457","class":"org.apache.kafka.common.utils.AppInfoParser","thread":"restartedMain","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:57:15.860Z","appMessage":"Kafka startTimeMs: 1627019835859","class":"org.apache.kafka.common.utils.AppInfoParser","thread":"restartedMain","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:57:15.861Z","appMessage":"[Consumer clientId=consumer-group_id-12, groupId=group_id] Subscribed to topic(s): customer-topic-2","class":"org.apache.kafka.clients.consumer.KafkaConsumer","thread":"restartedMain","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:57:15.864Z","appMessage":"ConsumerConfig values: \r\n\tallow.auto.create.topics = true\r\n\tauto.commit.interval.ms = 5000\r\n\tauto.offset.reset = latest\r\n\tbootstrap.servers = [127.0.0.1:9092]\r\n\tcheck.crcs = true\r\n\tclient.dns.lookup = use_all_dns_ips\r\n\tclient.id = consumer-group_json-13\r\n\tclient.rack = \r\n\tconnections.max.idle.ms = 540000\r\n\tdefault.api.timeout.ms = 60000\r\n\tenable.auto.commit = false\r\n\texclude.internal.topics = true\r\n\tfetch.max.bytes = 52428800\r\n\tfetch.max.wait.ms = 500\r\n\tfetch.min.bytes = 1\r\n\tgroup.id = group_json\r\n\tgroup.instance.id = null\r\n\theartbeat.interval.ms = 3000\r\n\tinterceptor.classes = []\r\n\tinternal.leave.group.on.close = true\r\n\tinternal.throw.on.fetch.stable.offset.unsupported = false\r\n\tisolation.level = read_uncommitted\r\n\tkey.deserializer = class org.apache.kafka.common.serialization.StringDeserializer\r\n\tmax.partition.fetch.bytes = 1048576\r\n\tmax.poll.interval.ms = 300000\r\n\tmax.poll.records = 500\r\n\tmetadata.max.age.ms = 300000\r\n\tmetric.reporters = []\r\n\tmetrics.num.samples = 2\r\n\tmetrics.recording.level = INFO\r\n\tmetrics.sample.window.ms = 30000\r\n\tpartition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor]\r\n\treceive.buffer.bytes = 65536\r\n\treconnect.backoff.max.ms = 1000\r\n\treconnect.backoff.ms = 50\r\n\trequest.timeout.ms = 30000\r\n\tretry.backoff.ms = 100\r\n\tsasl.client.callback.handler.class = null\r\n\tsasl.jaas.config = null\r\n\tsasl.kerberos.kinit.cmd = /usr/bin/kinit\r\n\tsasl.kerberos.min.time.before.relogin = 60000\r\n\tsasl.kerberos.service.name = null\r\n\tsasl.kerberos.ticket.renew.jitter = 0.05\r\n\tsasl.kerberos.ticket.renew.window.factor = 0.8\r\n\tsasl.login.callback.handler.class = null\r\n\tsasl.login.class = null\r\n\tsasl.login.refresh.buffer.seconds = 300\r\n\tsasl.login.refresh.min.period.seconds = 60\r\n\tsasl.login.refresh.window.factor = 0.8\r\n\tsasl.login.refresh.window.jitter = 0.05\r\n\tsasl.mechanism = GSSAPI\r\n\tsecurity.protocol = PLAINTEXT\r\n\tsecurity.providers = null\r\n\tsend.buffer.bytes = 131072\r\n\tsession.timeout.ms = 10000\r\n\tsocket.connection.setup.timeout.max.ms = 127000\r\n\tsocket.connection.setup.timeout.ms = 10000\r\n\tssl.cipher.suites = null\r\n\tssl.enabled.protocols = [TLSv1.2]\r\n\tssl.endpoint.identification.algorithm = https\r\n\tssl.engine.factory.class = null\r\n\tssl.key.password = null\r\n\tssl.keymanager.algorithm = SunX509\r\n\tssl.keystore.certificate.chain = null\r\n\tssl.keystore.key = null\r\n\tssl.keystore.location = null\r\n\tssl.keystore.password = null\r\n\tssl.keystore.type = JKS\r\n\tssl.protocol = TLSv1.2\r\n\tssl.provider = null\r\n\tssl.secure.random.implementation = null\r\n\tssl.trustmanager.algorithm = PKIX\r\n\tssl.truststore.certificates = null\r\n\tssl.truststore.location = null\r\n\tssl.truststore.password = null\r\n\tssl.truststore.type = JKS\r\n\tvalue.deserializer = class org.springframework.kafka.support.serializer.JsonDeserializer\r\n","class":"org.apache.kafka.clients.consumer.ConsumerConfig","thread":"restartedMain","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:57:15.868Z","appMessage":"[Consumer clientId=consumer-group_id-12, groupId=group_id] Cluster ID: Iu9DHTQ6SReFUqKIFFqxlQ","class":"org.apache.kafka.clients.Metadata","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:57:15.875Z","appMessage":"[Consumer clientId=consumer-group_id-12, groupId=group_id] Discovered group coordinator Officeroom:9092 (id: 2147483647 rack: null)","class":"org.apache.kafka.clients.consumer.internals.AbstractCoordinator","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:57:15.876Z","appMessage":"[Consumer clientId=consumer-group_id-12, groupId=group_id] (Re-)joining group","class":"org.apache.kafka.clients.consumer.internals.AbstractCoordinator","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:57:15.878Z","appMessage":"Kafka version: 2.7.1","class":"org.apache.kafka.common.utils.AppInfoParser","thread":"restartedMain","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:57:15.879Z","appMessage":"Kafka commitId: 61dbce85d0d41457","class":"org.apache.kafka.common.utils.AppInfoParser","thread":"restartedMain","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:57:15.879Z","appMessage":"Kafka startTimeMs: 1627019835878","class":"org.apache.kafka.common.utils.AppInfoParser","thread":"restartedMain","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:57:15.880Z","appMessage":"[Consumer clientId=consumer-group_id-12, groupId=group_id] (Re-)joining group","class":"org.apache.kafka.clients.consumer.internals.AbstractCoordinator","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:57:15.880Z","appMessage":"[Consumer clientId=consumer-group_json-13, groupId=group_json] Subscribed to topic(s): customer-topic-1","class":"org.apache.kafka.clients.consumer.KafkaConsumer","thread":"restartedMain","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:57:15.883Z","appMessage":"Starting ProtocolHandler [\"http-nio-8080\"]","class":"org.apache.coyote.http11.Http11NioProtocol","thread":"restartedMain","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:57:15.883Z","appMessage":"[Consumer clientId=consumer-group_id-12, groupId=group_id] Successfully joined group with generation Generation{generationId=15, memberId='consumer-group_id-12-56d43072-1bb9-477b-980c-a8c5b0f45464', protocol='range'}","class":"org.apache.kafka.clients.consumer.internals.AbstractCoordinator","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:57:15.884Z","appMessage":"[Consumer clientId=consumer-group_id-12, groupId=group_id] Finished assignment for group at generation 15: {consumer-group_id-12-56d43072-1bb9-477b-980c-a8c5b0f45464=Assignment(partitions=[customer-topic-2-0])}","class":"org.apache.kafka.clients.consumer.internals.ConsumerCoordinator","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:57:15.889Z","appMessage":"Tomcat started on port(s): 8080 (http) with context path ''","class":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread":"restartedMain","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:57:15.889Z","appMessage":"[Consumer clientId=consumer-group_id-12, groupId=group_id] Successfully synced group in generation Generation{generationId=15, memberId='consumer-group_id-12-56d43072-1bb9-477b-980c-a8c5b0f45464', protocol='range'}","class":"org.apache.kafka.clients.consumer.internals.AbstractCoordinator","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:57:15.890Z","appMessage":"[Consumer clientId=consumer-group_json-13, groupId=group_json] Cluster ID: Iu9DHTQ6SReFUqKIFFqxlQ","class":"org.apache.kafka.clients.Metadata","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:57:15.891Z","appMessage":"[Consumer clientId=consumer-group_id-12, groupId=group_id] Notifying assignor about the new Assignment(partitions=[customer-topic-2-0])","class":"org.apache.kafka.clients.consumer.internals.ConsumerCoordinator","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:57:15.891Z","appMessage":"[Consumer clientId=consumer-group_json-13, groupId=group_json] Discovered group coordinator Officeroom:9092 (id: 2147483647 rack: null)","class":"org.apache.kafka.clients.consumer.internals.AbstractCoordinator","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:57:15.892Z","appMessage":"[Consumer clientId=consumer-group_id-12, groupId=group_id] Adding newly assigned partitions: customer-topic-2-0","class":"org.apache.kafka.clients.consumer.internals.ConsumerCoordinator","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:57:15.893Z","appMessage":"[Consumer clientId=consumer-group_json-13, groupId=group_json] (Re-)joining group","class":"org.apache.kafka.clients.consumer.internals.AbstractCoordinator","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:57:15.895Z","appMessage":"[Consumer clientId=consumer-group_id-12, groupId=group_id] Setting offset for partition customer-topic-2-0 to the committed offset FetchPosition{offset=6, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[Officeroom:9092 (id: 0 rack: null)], epoch=absent}}","class":"org.apache.kafka.clients.consumer.internals.ConsumerCoordinator","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:57:15.896Z","appMessage":"group_id: partitions assigned: [customer-topic-2-0]","class":"org.springframework.kafka.listener.KafkaMessageListenerContainer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:57:15.897Z","appMessage":"[Consumer clientId=consumer-group_json-13, groupId=group_json] (Re-)joining group","class":"org.apache.kafka.clients.consumer.internals.AbstractCoordinator","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:57:15.901Z","appMessage":"[Consumer clientId=consumer-group_json-13, groupId=group_json] Successfully joined group with generation Generation{generationId=9, memberId='consumer-group_json-13-bfcef810-8a4b-43ac-a4f3-c0afee71e7a0', protocol='range'}","class":"org.apache.kafka.clients.consumer.internals.AbstractCoordinator","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:57:15.902Z","appMessage":"[Consumer clientId=consumer-group_json-13, groupId=group_json] Finished assignment for group at generation 9: {consumer-group_json-13-bfcef810-8a4b-43ac-a4f3-c0afee71e7a0=Assignment(partitions=[customer-topic-1-0, customer-topic-1-1, customer-topic-1-2, customer-topic-1-3, customer-topic-1-4, customer-topic-1-5, customer-topic-1-6, customer-topic-1-7, customer-topic-1-8, customer-topic-1-9])}","class":"org.apache.kafka.clients.consumer.internals.ConsumerCoordinator","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:57:15.907Z","appMessage":"[Consumer clientId=consumer-group_json-13, groupId=group_json] Successfully synced group in generation Generation{generationId=9, memberId='consumer-group_json-13-bfcef810-8a4b-43ac-a4f3-c0afee71e7a0', protocol='range'}","class":"org.apache.kafka.clients.consumer.internals.AbstractCoordinator","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:57:15.908Z","appMessage":"[Consumer clientId=consumer-group_json-13, groupId=group_json] Notifying assignor about the new Assignment(partitions=[customer-topic-1-0, customer-topic-1-1, customer-topic-1-2, customer-topic-1-3, customer-topic-1-4, customer-topic-1-5, customer-topic-1-6, customer-topic-1-7, customer-topic-1-8, customer-topic-1-9])","class":"org.apache.kafka.clients.consumer.internals.ConsumerCoordinator","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:57:15.909Z","appMessage":"[Consumer clientId=consumer-group_json-13, groupId=group_json] Adding newly assigned partitions: customer-topic-1-0, customer-topic-1-1, customer-topic-1-2, customer-topic-1-3, customer-topic-1-4, customer-topic-1-5, customer-topic-1-6, customer-topic-1-7, customer-topic-1-8, customer-topic-1-9","class":"org.apache.kafka.clients.consumer.internals.ConsumerCoordinator","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:57:15.909Z","appMessage":"Started Application in 1.012 seconds (JVM running for 1105.692)","class":"com.aslan.kafka.Application","thread":"restartedMain","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:57:15.912Z","appMessage":"[Consumer clientId=consumer-group_json-13, groupId=group_json] Setting offset for partition customer-topic-1-0 to the committed offset FetchPosition{offset=7, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[Officeroom:9092 (id: 0 rack: null)], epoch=absent}}","class":"org.apache.kafka.clients.consumer.internals.ConsumerCoordinator","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:57:15.913Z","appMessage":"[Consumer clientId=consumer-group_json-13, groupId=group_json] Setting offset for partition customer-topic-1-1 to the committed offset FetchPosition{offset=7, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[Officeroom:9092 (id: 0 rack: null)], epoch=absent}}","class":"org.apache.kafka.clients.consumer.internals.ConsumerCoordinator","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:57:15.914Z","appMessage":"[Consumer clientId=consumer-group_json-13, groupId=group_json] Setting offset for partition customer-topic-1-2 to the committed offset FetchPosition{offset=7, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[Officeroom:9092 (id: 0 rack: null)], epoch=absent}}","class":"org.apache.kafka.clients.consumer.internals.ConsumerCoordinator","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:57:15.914Z","appMessage":"Condition evaluation unchanged","class":"org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener","thread":"restartedMain","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:57:15.914Z","appMessage":"[Consumer clientId=consumer-group_json-13, groupId=group_json] Setting offset for partition customer-topic-1-3 to the committed offset FetchPosition{offset=7, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[Officeroom:9092 (id: 0 rack: null)], epoch=absent}}","class":"org.apache.kafka.clients.consumer.internals.ConsumerCoordinator","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:57:15.915Z","appMessage":"[Consumer clientId=consumer-group_json-13, groupId=group_json] Setting offset for partition customer-topic-1-4 to the committed offset FetchPosition{offset=7, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[Officeroom:9092 (id: 0 rack: null)], epoch=absent}}","class":"org.apache.kafka.clients.consumer.internals.ConsumerCoordinator","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:57:15.916Z","appMessage":"[Consumer clientId=consumer-group_json-13, groupId=group_json] Setting offset for partition customer-topic-1-5 to the committed offset FetchPosition{offset=7, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[Officeroom:9092 (id: 0 rack: null)], epoch=absent}}","class":"org.apache.kafka.clients.consumer.internals.ConsumerCoordinator","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:57:15.917Z","appMessage":"[Consumer clientId=consumer-group_json-13, groupId=group_json] Setting offset for partition customer-topic-1-6 to the committed offset FetchPosition{offset=7, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[Officeroom:9092 (id: 0 rack: null)], epoch=absent}}","class":"org.apache.kafka.clients.consumer.internals.ConsumerCoordinator","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:57:15.917Z","appMessage":"[Consumer clientId=consumer-group_json-13, groupId=group_json] Setting offset for partition customer-topic-1-7 to the committed offset FetchPosition{offset=7, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[Officeroom:9092 (id: 0 rack: null)], epoch=absent}}","class":"org.apache.kafka.clients.consumer.internals.ConsumerCoordinator","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:57:15.918Z","appMessage":"[Consumer clientId=consumer-group_json-13, groupId=group_json] Setting offset for partition customer-topic-1-8 to the committed offset FetchPosition{offset=7, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[Officeroom:9092 (id: 0 rack: null)], epoch=absent}}","class":"org.apache.kafka.clients.consumer.internals.ConsumerCoordinator","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:57:15.919Z","appMessage":"[Consumer clientId=consumer-group_json-13, groupId=group_json] Setting offset for partition customer-topic-1-9 to the committed offset FetchPosition{offset=7, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[Officeroom:9092 (id: 0 rack: null)], epoch=absent}}","class":"org.apache.kafka.clients.consumer.internals.ConsumerCoordinator","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:57:15.919Z","appMessage":"group_json: partitions assigned: [customer-topic-1-0, customer-topic-1-1, customer-topic-1-2, customer-topic-1-3, customer-topic-1-4, customer-topic-1-5, customer-topic-1-6, customer-topic-1-7, customer-topic-1-8, customer-topic-1-9]","class":"org.springframework.kafka.listener.KafkaMessageListenerContainer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:57:21.003Z","appMessage":"Initializing Spring DispatcherServlet 'dispatcherServlet'","class":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]","thread":"http-nio-8080-exec-2","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:57:21.004Z","appMessage":"Initializing Servlet 'dispatcherServlet'","class":"org.springframework.web.servlet.DispatcherServlet","thread":"http-nio-8080-exec-2","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:57:21.005Z","appMessage":"Completed initialization in 1 ms","class":"org.springframework.web.servlet.DispatcherServlet","thread":"http-nio-8080-exec-2","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:57:21.008Z","appMessage":"ApiController::producer(): Start","class":"com.aslan.kafka.controller.ApiController","thread":"http-nio-8080-exec-2","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:57:21.008Z","appMessage":"ApiController::producer(): Key: id_0","class":"com.aslan.kafka.controller.ApiController","thread":"http-nio-8080-exec-2","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:57:21.009Z","appMessage":"ProducerConfig values: \r\n\tacks = -1\r\n\tbatch.size = 16384\r\n\tbootstrap.servers = [127.0.0.1:9092]\r\n\tbuffer.memory = 33554432\r\n\tclient.dns.lookup = use_all_dns_ips\r\n\tclient.id = producer-4\r\n\tcompression.type = none\r\n\tconnections.max.idle.ms = 540000\r\n\tdelivery.timeout.ms = 120000\r\n\tenable.idempotence = false\r\n\tinterceptor.classes = []\r\n\tinternal.auto.downgrade.txn.commit = true\r\n\tkey.serializer = class org.springframework.kafka.support.serializer.JsonSerializer\r\n\tlinger.ms = 0\r\n\tmax.block.ms = 60000\r\n\tmax.in.flight.requests.per.connection = 5\r\n\tmax.request.size = 1048576\r\n\tmetadata.max.age.ms = 300000\r\n\tmetadata.max.idle.ms = 300000\r\n\tmetric.reporters = []\r\n\tmetrics.num.samples = 2\r\n\tmetrics.recording.level = INFO\r\n\tmetrics.sample.window.ms = 30000\r\n\tpartitioner.class = class org.apache.kafka.clients.producer.internals.DefaultPartitioner\r\n\treceive.buffer.bytes = 32768\r\n\treconnect.backoff.max.ms = 1000\r\n\treconnect.backoff.ms = 50\r\n\trequest.timeout.ms = 30000\r\n\tretries = 10\r\n\tretry.backoff.ms = 100\r\n\tsasl.client.callback.handler.class = null\r\n\tsasl.jaas.config = null\r\n\tsasl.kerberos.kinit.cmd = /usr/bin/kinit\r\n\tsasl.kerberos.min.time.before.relogin = 60000\r\n\tsasl.kerberos.service.name = null\r\n\tsasl.kerberos.ticket.renew.jitter = 0.05\r\n\tsasl.kerberos.ticket.renew.window.factor = 0.8\r\n\tsasl.login.callback.handler.class = null\r\n\tsasl.login.class = null\r\n\tsasl.login.refresh.buffer.seconds = 300\r\n\tsasl.login.refresh.min.period.seconds = 60\r\n\tsasl.login.refresh.window.factor = 0.8\r\n\tsasl.login.refresh.window.jitter = 0.05\r\n\tsasl.mechanism = GSSAPI\r\n\tsecurity.protocol = PLAINTEXT\r\n\tsecurity.providers = null\r\n\tsend.buffer.bytes = 131072\r\n\tsocket.connection.setup.timeout.max.ms = 127000\r\n\tsocket.connection.setup.timeout.ms = 10000\r\n\tssl.cipher.suites = null\r\n\tssl.enabled.protocols = [TLSv1.2]\r\n\tssl.endpoint.identification.algorithm = https\r\n\tssl.engine.factory.class = null\r\n\tssl.key.password = null\r\n\tssl.keymanager.algorithm = SunX509\r\n\tssl.keystore.certificate.chain = null\r\n\tssl.keystore.key = null\r\n\tssl.keystore.location = null\r\n\tssl.keystore.password = null\r\n\tssl.keystore.type = JKS\r\n\tssl.protocol = TLSv1.2\r\n\tssl.provider = null\r\n\tssl.secure.random.implementation = null\r\n\tssl.trustmanager.algorithm = PKIX\r\n\tssl.truststore.certificates = null\r\n\tssl.truststore.location = null\r\n\tssl.truststore.password = null\r\n\tssl.truststore.type = JKS\r\n\ttransaction.timeout.ms = 60000\r\n\ttransactional.id = null\r\n\tvalue.serializer = class org.springframework.kafka.support.serializer.JsonSerializer\r\n","class":"org.apache.kafka.clients.producer.ProducerConfig","thread":"http-nio-8080-exec-2","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:57:21.030Z","appMessage":"Kafka version: 2.7.1","class":"org.apache.kafka.common.utils.AppInfoParser","thread":"http-nio-8080-exec-2","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:57:21.031Z","appMessage":"Kafka commitId: 61dbce85d0d41457","class":"org.apache.kafka.common.utils.AppInfoParser","thread":"http-nio-8080-exec-2","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:57:21.031Z","appMessage":"Kafka startTimeMs: 1627019841030","class":"org.apache.kafka.common.utils.AppInfoParser","thread":"http-nio-8080-exec-2","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:57:21.034Z","appMessage":"[Producer clientId=producer-4] Cluster ID: Iu9DHTQ6SReFUqKIFFqxlQ","class":"org.apache.kafka.clients.Metadata","thread":"kafka-producer-network-thread | producer-4","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:57:21.038Z","appMessage":"ApiController::producer(): Key: id_1","class":"com.aslan.kafka.controller.ApiController","thread":"http-nio-8080-exec-2","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:57:21.039Z","appMessage":"ApiController::producer(): Key: id_2","class":"com.aslan.kafka.controller.ApiController","thread":"http-nio-8080-exec-2","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:57:21.040Z","appMessage":"ApiController::producer(): Key: id_3","class":"com.aslan.kafka.controller.ApiController","thread":"http-nio-8080-exec-2","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:57:21.041Z","appMessage":"ApiController::producer(): Key: id_4","class":"com.aslan.kafka.controller.ApiController","thread":"http-nio-8080-exec-2","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:57:21.041Z","appMessage":"ApiController::producer(): Key: id_5","class":"com.aslan.kafka.controller.ApiController","thread":"http-nio-8080-exec-2","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:57:21.042Z","appMessage":"ApiController::producer(): Key: id_6","class":"com.aslan.kafka.controller.ApiController","thread":"http-nio-8080-exec-2","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:57:21.043Z","appMessage":"ApiController::producer(): Key: id_7","class":"com.aslan.kafka.controller.ApiController","thread":"http-nio-8080-exec-2","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:57:21.044Z","appMessage":"Sent message=[com.aslan.kafka.model.DataModel@5c7b228c] with offset=[7]","class":"com.aslan.kafka.controller.ApiController","thread":"kafka-producer-network-thread | producer-4","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:57:21.044Z","appMessage":"ApiController::producer(): Key: id_8","class":"com.aslan.kafka.controller.ApiController","thread":"http-nio-8080-exec-2","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:57:21.044Z","appMessage":"Sent message=[com.aslan.kafka.model.DataModel@5c7b228c] with offset=[7]","class":"com.aslan.kafka.controller.ApiController","thread":"kafka-producer-network-thread | producer-4","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:57:21.045Z","appMessage":"ApiController::producer(): Key: id_9","class":"com.aslan.kafka.controller.ApiController","thread":"http-nio-8080-exec-2","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:57:21.046Z","appMessage":"ApiController::producer(): End","class":"com.aslan.kafka.controller.ApiController","thread":"http-nio-8080-exec-2","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:57:21.047Z","appMessage":"Sent message=[com.aslan.kafka.model.DataModel@5c7b228c] with offset=[7]","class":"com.aslan.kafka.controller.ApiController","thread":"kafka-producer-network-thread | producer-4","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:57:21.048Z","appMessage":"Sent message=[com.aslan.kafka.model.DataModel@5c7b228c] with offset=[7]","class":"com.aslan.kafka.controller.ApiController","thread":"kafka-producer-network-thread | producer-4","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:57:21.049Z","appMessage":"Sent message=[com.aslan.kafka.model.DataModel@5c7b228c] with offset=[7]","class":"com.aslan.kafka.controller.ApiController","thread":"kafka-producer-network-thread | producer-4","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:57:21.049Z","appMessage":"Sent message=[com.aslan.kafka.model.DataModel@5c7b228c] with offset=[7]","class":"com.aslan.kafka.controller.ApiController","thread":"kafka-producer-network-thread | producer-4","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:57:21.050Z","appMessage":"Sent message=[com.aslan.kafka.model.DataModel@5c7b228c] with offset=[7]","class":"com.aslan.kafka.controller.ApiController","thread":"kafka-producer-network-thread | producer-4","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:57:21.051Z","appMessage":"Sent message=[com.aslan.kafka.model.DataModel@5c7b228c] with offset=[7]","class":"com.aslan.kafka.controller.ApiController","thread":"kafka-producer-network-thread | producer-4","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:57:21.052Z","appMessage":"Sent message=[com.aslan.kafka.model.DataModel@5c7b228c] with offset=[7]","class":"com.aslan.kafka.controller.ApiController","thread":"kafka-producer-network-thread | producer-4","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:57:21.053Z","appMessage":"Sent message=[com.aslan.kafka.model.DataModel@5c7b228c] with offset=[7]","class":"com.aslan.kafka.controller.ApiController","thread":"kafka-producer-network-thread | producer-4","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:57:47.723Z","appMessage":"[Consumer clientId=consumer-group_id-12, groupId=group_id] Revoke previously assigned partitions customer-topic-2-0","class":"org.apache.kafka.clients.consumer.internals.ConsumerCoordinator","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:57:47.723Z","appMessage":"[Consumer clientId=consumer-group_json-13, groupId=group_json] Revoke previously assigned partitions customer-topic-1-0, customer-topic-1-1, customer-topic-1-2, customer-topic-1-3, customer-topic-1-4, customer-topic-1-5, customer-topic-1-6, customer-topic-1-7, customer-topic-1-8, customer-topic-1-9","class":"org.apache.kafka.clients.consumer.internals.ConsumerCoordinator","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:57:47.724Z","appMessage":"group_id: partitions revoked: [customer-topic-2-0]","class":"org.springframework.kafka.listener.KafkaMessageListenerContainer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:57:47.724Z","appMessage":"group_json: partitions revoked: [customer-topic-1-0, customer-topic-1-1, customer-topic-1-2, customer-topic-1-3, customer-topic-1-4, customer-topic-1-5, customer-topic-1-6, customer-topic-1-7, customer-topic-1-8, customer-topic-1-9]","class":"org.springframework.kafka.listener.KafkaMessageListenerContainer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:57:47.725Z","appMessage":"[Consumer clientId=consumer-group_id-12, groupId=group_id] Member consumer-group_id-12-56d43072-1bb9-477b-980c-a8c5b0f45464 sending LeaveGroup request to coordinator Officeroom:9092 (id: 2147483647 rack: null) due to the consumer unsubscribed from all topics","class":"org.apache.kafka.clients.consumer.internals.AbstractCoordinator","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:57:47.725Z","appMessage":"[Consumer clientId=consumer-group_json-13, groupId=group_json] Member consumer-group_json-13-bfcef810-8a4b-43ac-a4f3-c0afee71e7a0 sending LeaveGroup request to coordinator Officeroom:9092 (id: 2147483647 rack: null) due to the consumer unsubscribed from all topics","class":"org.apache.kafka.clients.consumer.internals.AbstractCoordinator","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:57:47.726Z","appMessage":"[Consumer clientId=consumer-group_id-12, groupId=group_id] Unsubscribed all topics or patterns and assigned partitions","class":"org.apache.kafka.clients.consumer.KafkaConsumer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:57:47.726Z","appMessage":"[Consumer clientId=consumer-group_json-13, groupId=group_json] Unsubscribed all topics or patterns and assigned partitions","class":"org.apache.kafka.clients.consumer.KafkaConsumer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:57:47.730Z","appMessage":"Metrics scheduler closed","class":"org.apache.kafka.common.metrics.Metrics","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:57:47.730Z","appMessage":"Metrics scheduler closed","class":"org.apache.kafka.common.metrics.Metrics","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:57:47.730Z","appMessage":"Closing reporter org.apache.kafka.common.metrics.JmxReporter","class":"org.apache.kafka.common.metrics.Metrics","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:57:47.731Z","appMessage":"Closing reporter org.apache.kafka.common.metrics.JmxReporter","class":"org.apache.kafka.common.metrics.Metrics","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:57:47.731Z","appMessage":"Metrics reporters closed","class":"org.apache.kafka.common.metrics.Metrics","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:57:47.731Z","appMessage":"Metrics reporters closed","class":"org.apache.kafka.common.metrics.Metrics","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:57:47.736Z","appMessage":"App info kafka.consumer for consumer-group_json-13 unregistered","class":"org.apache.kafka.common.utils.AppInfoParser","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:57:47.736Z","appMessage":"group_json: Consumer stopped","class":"org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:57:47.737Z","appMessage":"App info kafka.consumer for consumer-group_id-12 unregistered","class":"org.apache.kafka.common.utils.AppInfoParser","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:57:47.737Z","appMessage":"group_id: Consumer stopped","class":"org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:57:47.739Z","appMessage":"[Producer clientId=producer-4] Closing the Kafka producer with timeoutMillis = 30000 ms.","class":"org.apache.kafka.clients.producer.KafkaProducer","thread":"Thread-36","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:57:47.741Z","appMessage":"Metrics scheduler closed","class":"org.apache.kafka.common.metrics.Metrics","thread":"Thread-36","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:57:47.741Z","appMessage":"Closing reporter org.apache.kafka.common.metrics.JmxReporter","class":"org.apache.kafka.common.metrics.Metrics","thread":"Thread-36","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:57:47.742Z","appMessage":"Metrics reporters closed","class":"org.apache.kafka.common.metrics.Metrics","thread":"Thread-36","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:57:47.742Z","appMessage":"App info kafka.producer for producer-4 unregistered","class":"org.apache.kafka.common.utils.AppInfoParser","thread":"Thread-36","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:57:47.967Z","appMessage":"Starting Application using Java 1.8.0_202 on Officeroom with PID 55836 (C:\\Users\\Officeroom\\JavaProj\\sb-aslan-kafka-template\\target\\classes started by Officeroom in C:\\Users\\Officeroom\\JavaProj\\sb-aslan-kafka-template)","class":"com.aslan.kafka.Application","thread":"restartedMain","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:57:47.968Z","appMessage":"The following profiles are active: local","class":"com.aslan.kafka.Application","thread":"restartedMain","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:57:48.532Z","appMessage":"Tomcat initialized with port(s): 8080 (http)","class":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread":"restartedMain","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:57:48.533Z","appMessage":"Initializing ProtocolHandler [\"http-nio-8080\"]","class":"org.apache.coyote.http11.Http11NioProtocol","thread":"restartedMain","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:57:48.533Z","appMessage":"Starting service [Tomcat]","class":"org.apache.catalina.core.StandardService","thread":"restartedMain","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:57:48.534Z","appMessage":"Starting Servlet engine: [Apache Tomcat/9.0.48]","class":"org.apache.catalina.core.StandardEngine","thread":"restartedMain","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:57:48.571Z","appMessage":"Initializing Spring embedded WebApplicationContext","class":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]","thread":"restartedMain","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:57:48.571Z","appMessage":"Root WebApplicationContext: initialization completed in 600 ms","class":"org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext","thread":"restartedMain","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:57:48.711Z","appMessage":"Cannot find template location: classpath:/templates/ (please add some templates, check your Mustache configuration, or set spring.mustache.check-template-location=false)","class":"org.springframework.boot.autoconfigure.mustache.MustacheAutoConfiguration","thread":"restartedMain","level":"WARN","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:57:48.717Z","appMessage":"Cannot find template location: classpath:/templates/ (please add some templates or check your Thymeleaf configuration)","class":"org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$DefaultTemplateResolverConfiguration","thread":"restartedMain","level":"WARN","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:57:48.792Z","appMessage":"LiveReload server is running on port 35729","class":"org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer","thread":"restartedMain","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:57:48.797Z","appMessage":"Exposing 13 endpoint(s) beneath base path ''","class":"org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver","thread":"restartedMain","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:57:48.817Z","appMessage":"ConsumerConfig values: \r\n\tallow.auto.create.topics = true\r\n\tauto.commit.interval.ms = 5000\r\n\tauto.offset.reset = latest\r\n\tbootstrap.servers = [127.0.0.1:9092]\r\n\tcheck.crcs = true\r\n\tclient.dns.lookup = use_all_dns_ips\r\n\tclient.id = consumer-group_id-14\r\n\tclient.rack = \r\n\tconnections.max.idle.ms = 540000\r\n\tdefault.api.timeout.ms = 60000\r\n\tenable.auto.commit = false\r\n\texclude.internal.topics = true\r\n\tfetch.max.bytes = 52428800\r\n\tfetch.max.wait.ms = 500\r\n\tfetch.min.bytes = 1\r\n\tgroup.id = group_id\r\n\tgroup.instance.id = null\r\n\theartbeat.interval.ms = 3000\r\n\tinterceptor.classes = []\r\n\tinternal.leave.group.on.close = true\r\n\tinternal.throw.on.fetch.stable.offset.unsupported = false\r\n\tisolation.level = read_uncommitted\r\n\tkey.deserializer = class org.apache.kafka.common.serialization.StringDeserializer\r\n\tmax.partition.fetch.bytes = 1048576\r\n\tmax.poll.interval.ms = 300000\r\n\tmax.poll.records = 500\r\n\tmetadata.max.age.ms = 300000\r\n\tmetric.reporters = []\r\n\tmetrics.num.samples = 2\r\n\tmetrics.recording.level = INFO\r\n\tmetrics.sample.window.ms = 30000\r\n\tpartition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor]\r\n\treceive.buffer.bytes = 65536\r\n\treconnect.backoff.max.ms = 1000\r\n\treconnect.backoff.ms = 50\r\n\trequest.timeout.ms = 30000\r\n\tretry.backoff.ms = 100\r\n\tsasl.client.callback.handler.class = null\r\n\tsasl.jaas.config = null\r\n\tsasl.kerberos.kinit.cmd = /usr/bin/kinit\r\n\tsasl.kerberos.min.time.before.relogin = 60000\r\n\tsasl.kerberos.service.name = null\r\n\tsasl.kerberos.ticket.renew.jitter = 0.05\r\n\tsasl.kerberos.ticket.renew.window.factor = 0.8\r\n\tsasl.login.callback.handler.class = null\r\n\tsasl.login.class = null\r\n\tsasl.login.refresh.buffer.seconds = 300\r\n\tsasl.login.refresh.min.period.seconds = 60\r\n\tsasl.login.refresh.window.factor = 0.8\r\n\tsasl.login.refresh.window.jitter = 0.05\r\n\tsasl.mechanism = GSSAPI\r\n\tsecurity.protocol = PLAINTEXT\r\n\tsecurity.providers = null\r\n\tsend.buffer.bytes = 131072\r\n\tsession.timeout.ms = 10000\r\n\tsocket.connection.setup.timeout.max.ms = 127000\r\n\tsocket.connection.setup.timeout.ms = 10000\r\n\tssl.cipher.suites = null\r\n\tssl.enabled.protocols = [TLSv1.2]\r\n\tssl.endpoint.identification.algorithm = https\r\n\tssl.engine.factory.class = null\r\n\tssl.key.password = null\r\n\tssl.keymanager.algorithm = SunX509\r\n\tssl.keystore.certificate.chain = null\r\n\tssl.keystore.key = null\r\n\tssl.keystore.location = null\r\n\tssl.keystore.password = null\r\n\tssl.keystore.type = JKS\r\n\tssl.protocol = TLSv1.2\r\n\tssl.provider = null\r\n\tssl.secure.random.implementation = null\r\n\tssl.trustmanager.algorithm = PKIX\r\n\tssl.truststore.certificates = null\r\n\tssl.truststore.location = null\r\n\tssl.truststore.password = null\r\n\tssl.truststore.type = JKS\r\n\tvalue.deserializer = class org.apache.kafka.common.serialization.StringDeserializer\r\n","class":"org.apache.kafka.clients.consumer.ConsumerConfig","thread":"restartedMain","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:57:48.828Z","appMessage":"Kafka version: 2.7.1","class":"org.apache.kafka.common.utils.AppInfoParser","thread":"restartedMain","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:57:48.829Z","appMessage":"Kafka commitId: 61dbce85d0d41457","class":"org.apache.kafka.common.utils.AppInfoParser","thread":"restartedMain","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:57:48.829Z","appMessage":"Kafka startTimeMs: 1627019868828","class":"org.apache.kafka.common.utils.AppInfoParser","thread":"restartedMain","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:57:48.830Z","appMessage":"[Consumer clientId=consumer-group_id-14, groupId=group_id] Subscribed to topic(s): customer-topic-2","class":"org.apache.kafka.clients.consumer.KafkaConsumer","thread":"restartedMain","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:57:48.832Z","appMessage":"ConsumerConfig values: \r\n\tallow.auto.create.topics = true\r\n\tauto.commit.interval.ms = 5000\r\n\tauto.offset.reset = latest\r\n\tbootstrap.servers = [127.0.0.1:9092]\r\n\tcheck.crcs = true\r\n\tclient.dns.lookup = use_all_dns_ips\r\n\tclient.id = consumer-group_json-15\r\n\tclient.rack = \r\n\tconnections.max.idle.ms = 540000\r\n\tdefault.api.timeout.ms = 60000\r\n\tenable.auto.commit = false\r\n\texclude.internal.topics = true\r\n\tfetch.max.bytes = 52428800\r\n\tfetch.max.wait.ms = 500\r\n\tfetch.min.bytes = 1\r\n\tgroup.id = group_json\r\n\tgroup.instance.id = null\r\n\theartbeat.interval.ms = 3000\r\n\tinterceptor.classes = []\r\n\tinternal.leave.group.on.close = true\r\n\tinternal.throw.on.fetch.stable.offset.unsupported = false\r\n\tisolation.level = read_uncommitted\r\n\tkey.deserializer = class org.apache.kafka.common.serialization.StringDeserializer\r\n\tmax.partition.fetch.bytes = 1048576\r\n\tmax.poll.interval.ms = 300000\r\n\tmax.poll.records = 500\r\n\tmetadata.max.age.ms = 300000\r\n\tmetric.reporters = []\r\n\tmetrics.num.samples = 2\r\n\tmetrics.recording.level = INFO\r\n\tmetrics.sample.window.ms = 30000\r\n\tpartition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor]\r\n\treceive.buffer.bytes = 65536\r\n\treconnect.backoff.max.ms = 1000\r\n\treconnect.backoff.ms = 50\r\n\trequest.timeout.ms = 30000\r\n\tretry.backoff.ms = 100\r\n\tsasl.client.callback.handler.class = null\r\n\tsasl.jaas.config = null\r\n\tsasl.kerberos.kinit.cmd = /usr/bin/kinit\r\n\tsasl.kerberos.min.time.before.relogin = 60000\r\n\tsasl.kerberos.service.name = null\r\n\tsasl.kerberos.ticket.renew.jitter = 0.05\r\n\tsasl.kerberos.ticket.renew.window.factor = 0.8\r\n\tsasl.login.callback.handler.class = null\r\n\tsasl.login.class = null\r\n\tsasl.login.refresh.buffer.seconds = 300\r\n\tsasl.login.refresh.min.period.seconds = 60\r\n\tsasl.login.refresh.window.factor = 0.8\r\n\tsasl.login.refresh.window.jitter = 0.05\r\n\tsasl.mechanism = GSSAPI\r\n\tsecurity.protocol = PLAINTEXT\r\n\tsecurity.providers = null\r\n\tsend.buffer.bytes = 131072\r\n\tsession.timeout.ms = 10000\r\n\tsocket.connection.setup.timeout.max.ms = 127000\r\n\tsocket.connection.setup.timeout.ms = 10000\r\n\tssl.cipher.suites = null\r\n\tssl.enabled.protocols = [TLSv1.2]\r\n\tssl.endpoint.identification.algorithm = https\r\n\tssl.engine.factory.class = null\r\n\tssl.key.password = null\r\n\tssl.keymanager.algorithm = SunX509\r\n\tssl.keystore.certificate.chain = null\r\n\tssl.keystore.key = null\r\n\tssl.keystore.location = null\r\n\tssl.keystore.password = null\r\n\tssl.keystore.type = JKS\r\n\tssl.protocol = TLSv1.2\r\n\tssl.provider = null\r\n\tssl.secure.random.implementation = null\r\n\tssl.trustmanager.algorithm = PKIX\r\n\tssl.truststore.certificates = null\r\n\tssl.truststore.location = null\r\n\tssl.truststore.password = null\r\n\tssl.truststore.type = JKS\r\n\tvalue.deserializer = class org.springframework.kafka.support.serializer.JsonDeserializer\r\n","class":"org.apache.kafka.clients.consumer.ConsumerConfig","thread":"restartedMain","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:57:48.835Z","appMessage":"[Consumer clientId=consumer-group_id-14, groupId=group_id] Cluster ID: Iu9DHTQ6SReFUqKIFFqxlQ","class":"org.apache.kafka.clients.Metadata","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:57:48.841Z","appMessage":"[Consumer clientId=consumer-group_id-14, groupId=group_id] Discovered group coordinator Officeroom:9092 (id: 2147483647 rack: null)","class":"org.apache.kafka.clients.consumer.internals.AbstractCoordinator","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:57:48.843Z","appMessage":"[Consumer clientId=consumer-group_id-14, groupId=group_id] (Re-)joining group","class":"org.apache.kafka.clients.consumer.internals.AbstractCoordinator","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:57:48.845Z","appMessage":"Kafka version: 2.7.1","class":"org.apache.kafka.common.utils.AppInfoParser","thread":"restartedMain","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:57:48.845Z","appMessage":"Kafka commitId: 61dbce85d0d41457","class":"org.apache.kafka.common.utils.AppInfoParser","thread":"restartedMain","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:57:48.845Z","appMessage":"[Consumer clientId=consumer-group_id-14, groupId=group_id] (Re-)joining group","class":"org.apache.kafka.clients.consumer.internals.AbstractCoordinator","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:57:48.845Z","appMessage":"Kafka startTimeMs: 1627019868845","class":"org.apache.kafka.common.utils.AppInfoParser","thread":"restartedMain","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:57:48.846Z","appMessage":"[Consumer clientId=consumer-group_json-15, groupId=group_json] Subscribed to topic(s): customer-topic-1","class":"org.apache.kafka.clients.consumer.KafkaConsumer","thread":"restartedMain","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:57:48.848Z","appMessage":"[Consumer clientId=consumer-group_id-14, groupId=group_id] Successfully joined group with generation Generation{generationId=17, memberId='consumer-group_id-14-f38086e2-84a0-49b1-aa3c-8ee2ddeff723', protocol='range'}","class":"org.apache.kafka.clients.consumer.internals.AbstractCoordinator","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:57:48.848Z","appMessage":"Starting ProtocolHandler [\"http-nio-8080\"]","class":"org.apache.coyote.http11.Http11NioProtocol","thread":"restartedMain","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:57:48.849Z","appMessage":"[Consumer clientId=consumer-group_id-14, groupId=group_id] Finished assignment for group at generation 17: {consumer-group_id-14-f38086e2-84a0-49b1-aa3c-8ee2ddeff723=Assignment(partitions=[customer-topic-2-0])}","class":"org.apache.kafka.clients.consumer.internals.ConsumerCoordinator","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:57:48.853Z","appMessage":"[Consumer clientId=consumer-group_json-15, groupId=group_json] Cluster ID: Iu9DHTQ6SReFUqKIFFqxlQ","class":"org.apache.kafka.clients.Metadata","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:57:48.853Z","appMessage":"[Consumer clientId=consumer-group_id-14, groupId=group_id] Successfully synced group in generation Generation{generationId=17, memberId='consumer-group_id-14-f38086e2-84a0-49b1-aa3c-8ee2ddeff723', protocol='range'}","class":"org.apache.kafka.clients.consumer.internals.AbstractCoordinator","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:57:48.853Z","appMessage":"Tomcat started on port(s): 8080 (http) with context path ''","class":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread":"restartedMain","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:57:48.854Z","appMessage":"[Consumer clientId=consumer-group_json-15, groupId=group_json] Discovered group coordinator Officeroom:9092 (id: 2147483647 rack: null)","class":"org.apache.kafka.clients.consumer.internals.AbstractCoordinator","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:57:48.855Z","appMessage":"[Consumer clientId=consumer-group_id-14, groupId=group_id] Notifying assignor about the new Assignment(partitions=[customer-topic-2-0])","class":"org.apache.kafka.clients.consumer.internals.ConsumerCoordinator","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:57:48.856Z","appMessage":"[Consumer clientId=consumer-group_id-14, groupId=group_id] Adding newly assigned partitions: customer-topic-2-0","class":"org.apache.kafka.clients.consumer.internals.ConsumerCoordinator","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:57:48.856Z","appMessage":"[Consumer clientId=consumer-group_json-15, groupId=group_json] (Re-)joining group","class":"org.apache.kafka.clients.consumer.internals.AbstractCoordinator","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:57:48.858Z","appMessage":"[Consumer clientId=consumer-group_id-14, groupId=group_id] Setting offset for partition customer-topic-2-0 to the committed offset FetchPosition{offset=6, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[Officeroom:9092 (id: 0 rack: null)], epoch=absent}}","class":"org.apache.kafka.clients.consumer.internals.ConsumerCoordinator","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:57:48.859Z","appMessage":"group_id: partitions assigned: [customer-topic-2-0]","class":"org.springframework.kafka.listener.KafkaMessageListenerContainer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:57:48.859Z","appMessage":"[Consumer clientId=consumer-group_json-15, groupId=group_json] (Re-)joining group","class":"org.apache.kafka.clients.consumer.internals.AbstractCoordinator","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:57:48.862Z","appMessage":"[Consumer clientId=consumer-group_json-15, groupId=group_json] Successfully joined group with generation Generation{generationId=11, memberId='consumer-group_json-15-5aaab120-ea79-4c62-9af1-2ac7e189098e', protocol='range'}","class":"org.apache.kafka.clients.consumer.internals.AbstractCoordinator","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:57:48.862Z","appMessage":"[Consumer clientId=consumer-group_json-15, groupId=group_json] Finished assignment for group at generation 11: {consumer-group_json-15-5aaab120-ea79-4c62-9af1-2ac7e189098e=Assignment(partitions=[customer-topic-1-0, customer-topic-1-1, customer-topic-1-2, customer-topic-1-3, customer-topic-1-4, customer-topic-1-5, customer-topic-1-6, customer-topic-1-7, customer-topic-1-8, customer-topic-1-9])}","class":"org.apache.kafka.clients.consumer.internals.ConsumerCoordinator","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:57:48.866Z","appMessage":"[Consumer clientId=consumer-group_json-15, groupId=group_json] Successfully synced group in generation Generation{generationId=11, memberId='consumer-group_json-15-5aaab120-ea79-4c62-9af1-2ac7e189098e', protocol='range'}","class":"org.apache.kafka.clients.consumer.internals.AbstractCoordinator","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:57:48.866Z","appMessage":"[Consumer clientId=consumer-group_json-15, groupId=group_json] Notifying assignor about the new Assignment(partitions=[customer-topic-1-0, customer-topic-1-1, customer-topic-1-2, customer-topic-1-3, customer-topic-1-4, customer-topic-1-5, customer-topic-1-6, customer-topic-1-7, customer-topic-1-8, customer-topic-1-9])","class":"org.apache.kafka.clients.consumer.internals.ConsumerCoordinator","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:57:48.867Z","appMessage":"[Consumer clientId=consumer-group_json-15, groupId=group_json] Adding newly assigned partitions: customer-topic-1-0, customer-topic-1-1, customer-topic-1-2, customer-topic-1-3, customer-topic-1-4, customer-topic-1-5, customer-topic-1-6, customer-topic-1-7, customer-topic-1-8, customer-topic-1-9","class":"org.apache.kafka.clients.consumer.internals.ConsumerCoordinator","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:57:48.867Z","appMessage":"Started Application in 0.966 seconds (JVM running for 1138.65)","class":"com.aslan.kafka.Application","thread":"restartedMain","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:57:48.869Z","appMessage":"[Consumer clientId=consumer-group_json-15, groupId=group_json] Setting offset for partition customer-topic-1-0 to the committed offset FetchPosition{offset=8, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[Officeroom:9092 (id: 0 rack: null)], epoch=absent}}","class":"org.apache.kafka.clients.consumer.internals.ConsumerCoordinator","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:57:48.870Z","appMessage":"[Consumer clientId=consumer-group_json-15, groupId=group_json] Setting offset for partition customer-topic-1-1 to the committed offset FetchPosition{offset=8, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[Officeroom:9092 (id: 0 rack: null)], epoch=absent}}","class":"org.apache.kafka.clients.consumer.internals.ConsumerCoordinator","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:57:48.870Z","appMessage":"[Consumer clientId=consumer-group_json-15, groupId=group_json] Setting offset for partition customer-topic-1-2 to the committed offset FetchPosition{offset=8, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[Officeroom:9092 (id: 0 rack: null)], epoch=absent}}","class":"org.apache.kafka.clients.consumer.internals.ConsumerCoordinator","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:57:48.870Z","appMessage":"Condition evaluation unchanged","class":"org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener","thread":"restartedMain","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:57:48.871Z","appMessage":"[Consumer clientId=consumer-group_json-15, groupId=group_json] Setting offset for partition customer-topic-1-3 to the committed offset FetchPosition{offset=8, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[Officeroom:9092 (id: 0 rack: null)], epoch=absent}}","class":"org.apache.kafka.clients.consumer.internals.ConsumerCoordinator","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:57:48.872Z","appMessage":"[Consumer clientId=consumer-group_json-15, groupId=group_json] Setting offset for partition customer-topic-1-4 to the committed offset FetchPosition{offset=8, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[Officeroom:9092 (id: 0 rack: null)], epoch=absent}}","class":"org.apache.kafka.clients.consumer.internals.ConsumerCoordinator","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:57:48.872Z","appMessage":"[Consumer clientId=consumer-group_json-15, groupId=group_json] Setting offset for partition customer-topic-1-5 to the committed offset FetchPosition{offset=8, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[Officeroom:9092 (id: 0 rack: null)], epoch=absent}}","class":"org.apache.kafka.clients.consumer.internals.ConsumerCoordinator","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:57:48.873Z","appMessage":"[Consumer clientId=consumer-group_json-15, groupId=group_json] Setting offset for partition customer-topic-1-6 to the committed offset FetchPosition{offset=8, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[Officeroom:9092 (id: 0 rack: null)], epoch=absent}}","class":"org.apache.kafka.clients.consumer.internals.ConsumerCoordinator","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:57:48.874Z","appMessage":"[Consumer clientId=consumer-group_json-15, groupId=group_json] Setting offset for partition customer-topic-1-7 to the committed offset FetchPosition{offset=8, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[Officeroom:9092 (id: 0 rack: null)], epoch=absent}}","class":"org.apache.kafka.clients.consumer.internals.ConsumerCoordinator","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:57:48.874Z","appMessage":"[Consumer clientId=consumer-group_json-15, groupId=group_json] Setting offset for partition customer-topic-1-8 to the committed offset FetchPosition{offset=8, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[Officeroom:9092 (id: 0 rack: null)], epoch=absent}}","class":"org.apache.kafka.clients.consumer.internals.ConsumerCoordinator","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:57:48.875Z","appMessage":"[Consumer clientId=consumer-group_json-15, groupId=group_json] Setting offset for partition customer-topic-1-9 to the committed offset FetchPosition{offset=8, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[Officeroom:9092 (id: 0 rack: null)], epoch=absent}}","class":"org.apache.kafka.clients.consumer.internals.ConsumerCoordinator","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:57:48.875Z","appMessage":"group_json: partitions assigned: [customer-topic-1-0, customer-topic-1-1, customer-topic-1-2, customer-topic-1-3, customer-topic-1-4, customer-topic-1-5, customer-topic-1-6, customer-topic-1-7, customer-topic-1-8, customer-topic-1-9]","class":"org.springframework.kafka.listener.KafkaMessageListenerContainer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:58:49.980Z","appMessage":"[Consumer clientId=consumer-group_id-14, groupId=group_id] Revoke previously assigned partitions customer-topic-2-0","class":"org.apache.kafka.clients.consumer.internals.ConsumerCoordinator","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:58:49.980Z","appMessage":"[Consumer clientId=consumer-group_json-15, groupId=group_json] Revoke previously assigned partitions customer-topic-1-0, customer-topic-1-1, customer-topic-1-2, customer-topic-1-3, customer-topic-1-4, customer-topic-1-5, customer-topic-1-6, customer-topic-1-7, customer-topic-1-8, customer-topic-1-9","class":"org.apache.kafka.clients.consumer.internals.ConsumerCoordinator","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:58:49.980Z","appMessage":"group_id: partitions revoked: [customer-topic-2-0]","class":"org.springframework.kafka.listener.KafkaMessageListenerContainer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:58:49.981Z","appMessage":"group_json: partitions revoked: [customer-topic-1-0, customer-topic-1-1, customer-topic-1-2, customer-topic-1-3, customer-topic-1-4, customer-topic-1-5, customer-topic-1-6, customer-topic-1-7, customer-topic-1-8, customer-topic-1-9]","class":"org.springframework.kafka.listener.KafkaMessageListenerContainer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:58:49.981Z","appMessage":"[Consumer clientId=consumer-group_id-14, groupId=group_id] Member consumer-group_id-14-f38086e2-84a0-49b1-aa3c-8ee2ddeff723 sending LeaveGroup request to coordinator Officeroom:9092 (id: 2147483647 rack: null) due to the consumer unsubscribed from all topics","class":"org.apache.kafka.clients.consumer.internals.AbstractCoordinator","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:58:49.982Z","appMessage":"[Consumer clientId=consumer-group_json-15, groupId=group_json] Member consumer-group_json-15-5aaab120-ea79-4c62-9af1-2ac7e189098e sending LeaveGroup request to coordinator Officeroom:9092 (id: 2147483647 rack: null) due to the consumer unsubscribed from all topics","class":"org.apache.kafka.clients.consumer.internals.AbstractCoordinator","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:58:49.982Z","appMessage":"[Consumer clientId=consumer-group_id-14, groupId=group_id] Unsubscribed all topics or patterns and assigned partitions","class":"org.apache.kafka.clients.consumer.KafkaConsumer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:58:49.983Z","appMessage":"[Consumer clientId=consumer-group_json-15, groupId=group_json] Unsubscribed all topics or patterns and assigned partitions","class":"org.apache.kafka.clients.consumer.KafkaConsumer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:58:49.986Z","appMessage":"Metrics scheduler closed","class":"org.apache.kafka.common.metrics.Metrics","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:58:49.986Z","appMessage":"Metrics scheduler closed","class":"org.apache.kafka.common.metrics.Metrics","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:58:49.987Z","appMessage":"Closing reporter org.apache.kafka.common.metrics.JmxReporter","class":"org.apache.kafka.common.metrics.Metrics","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:58:49.987Z","appMessage":"Closing reporter org.apache.kafka.common.metrics.JmxReporter","class":"org.apache.kafka.common.metrics.Metrics","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:58:49.988Z","appMessage":"Metrics reporters closed","class":"org.apache.kafka.common.metrics.Metrics","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:58:49.988Z","appMessage":"Metrics reporters closed","class":"org.apache.kafka.common.metrics.Metrics","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:58:49.993Z","appMessage":"App info kafka.consumer for consumer-group_id-14 unregistered","class":"org.apache.kafka.common.utils.AppInfoParser","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:58:49.993Z","appMessage":"group_id: Consumer stopped","class":"org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:58:49.993Z","appMessage":"App info kafka.consumer for consumer-group_json-15 unregistered","class":"org.apache.kafka.common.utils.AppInfoParser","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:58:49.994Z","appMessage":"group_json: Consumer stopped","class":"org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:58:50.254Z","appMessage":"Starting Application using Java 1.8.0_202 on Officeroom with PID 55836 (C:\\Users\\Officeroom\\JavaProj\\sb-aslan-kafka-template\\target\\classes started by Officeroom in C:\\Users\\Officeroom\\JavaProj\\sb-aslan-kafka-template)","class":"com.aslan.kafka.Application","thread":"restartedMain","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:58:50.255Z","appMessage":"The following profiles are active: local","class":"com.aslan.kafka.Application","thread":"restartedMain","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:58:50.813Z","appMessage":"Tomcat initialized with port(s): 8080 (http)","class":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread":"restartedMain","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:58:50.814Z","appMessage":"Initializing ProtocolHandler [\"http-nio-8080\"]","class":"org.apache.coyote.http11.Http11NioProtocol","thread":"restartedMain","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:58:50.814Z","appMessage":"Starting service [Tomcat]","class":"org.apache.catalina.core.StandardService","thread":"restartedMain","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:58:50.815Z","appMessage":"Starting Servlet engine: [Apache Tomcat/9.0.48]","class":"org.apache.catalina.core.StandardEngine","thread":"restartedMain","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:58:50.852Z","appMessage":"Initializing Spring embedded WebApplicationContext","class":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]","thread":"restartedMain","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:58:50.852Z","appMessage":"Root WebApplicationContext: initialization completed in 594 ms","class":"org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext","thread":"restartedMain","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:58:50.995Z","appMessage":"Cannot find template location: classpath:/templates/ (please add some templates, check your Mustache configuration, or set spring.mustache.check-template-location=false)","class":"org.springframework.boot.autoconfigure.mustache.MustacheAutoConfiguration","thread":"restartedMain","level":"WARN","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:58:51.002Z","appMessage":"Cannot find template location: classpath:/templates/ (please add some templates or check your Thymeleaf configuration)","class":"org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$DefaultTemplateResolverConfiguration","thread":"restartedMain","level":"WARN","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:58:51.078Z","appMessage":"LiveReload server is running on port 35729","class":"org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer","thread":"restartedMain","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:58:51.083Z","appMessage":"Exposing 13 endpoint(s) beneath base path ''","class":"org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver","thread":"restartedMain","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:58:51.104Z","appMessage":"ConsumerConfig values: \r\n\tallow.auto.create.topics = true\r\n\tauto.commit.interval.ms = 5000\r\n\tauto.offset.reset = latest\r\n\tbootstrap.servers = [127.0.0.1:9092]\r\n\tcheck.crcs = true\r\n\tclient.dns.lookup = use_all_dns_ips\r\n\tclient.id = consumer-group_id-16\r\n\tclient.rack = \r\n\tconnections.max.idle.ms = 540000\r\n\tdefault.api.timeout.ms = 60000\r\n\tenable.auto.commit = false\r\n\texclude.internal.topics = true\r\n\tfetch.max.bytes = 52428800\r\n\tfetch.max.wait.ms = 500\r\n\tfetch.min.bytes = 1\r\n\tgroup.id = group_id\r\n\tgroup.instance.id = null\r\n\theartbeat.interval.ms = 3000\r\n\tinterceptor.classes = []\r\n\tinternal.leave.group.on.close = true\r\n\tinternal.throw.on.fetch.stable.offset.unsupported = false\r\n\tisolation.level = read_uncommitted\r\n\tkey.deserializer = class org.apache.kafka.common.serialization.StringDeserializer\r\n\tmax.partition.fetch.bytes = 1048576\r\n\tmax.poll.interval.ms = 300000\r\n\tmax.poll.records = 500\r\n\tmetadata.max.age.ms = 300000\r\n\tmetric.reporters = []\r\n\tmetrics.num.samples = 2\r\n\tmetrics.recording.level = INFO\r\n\tmetrics.sample.window.ms = 30000\r\n\tpartition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor]\r\n\treceive.buffer.bytes = 65536\r\n\treconnect.backoff.max.ms = 1000\r\n\treconnect.backoff.ms = 50\r\n\trequest.timeout.ms = 30000\r\n\tretry.backoff.ms = 100\r\n\tsasl.client.callback.handler.class = null\r\n\tsasl.jaas.config = null\r\n\tsasl.kerberos.kinit.cmd = /usr/bin/kinit\r\n\tsasl.kerberos.min.time.before.relogin = 60000\r\n\tsasl.kerberos.service.name = null\r\n\tsasl.kerberos.ticket.renew.jitter = 0.05\r\n\tsasl.kerberos.ticket.renew.window.factor = 0.8\r\n\tsasl.login.callback.handler.class = null\r\n\tsasl.login.class = null\r\n\tsasl.login.refresh.buffer.seconds = 300\r\n\tsasl.login.refresh.min.period.seconds = 60\r\n\tsasl.login.refresh.window.factor = 0.8\r\n\tsasl.login.refresh.window.jitter = 0.05\r\n\tsasl.mechanism = GSSAPI\r\n\tsecurity.protocol = PLAINTEXT\r\n\tsecurity.providers = null\r\n\tsend.buffer.bytes = 131072\r\n\tsession.timeout.ms = 10000\r\n\tsocket.connection.setup.timeout.max.ms = 127000\r\n\tsocket.connection.setup.timeout.ms = 10000\r\n\tssl.cipher.suites = null\r\n\tssl.enabled.protocols = [TLSv1.2]\r\n\tssl.endpoint.identification.algorithm = https\r\n\tssl.engine.factory.class = null\r\n\tssl.key.password = null\r\n\tssl.keymanager.algorithm = SunX509\r\n\tssl.keystore.certificate.chain = null\r\n\tssl.keystore.key = null\r\n\tssl.keystore.location = null\r\n\tssl.keystore.password = null\r\n\tssl.keystore.type = JKS\r\n\tssl.protocol = TLSv1.2\r\n\tssl.provider = null\r\n\tssl.secure.random.implementation = null\r\n\tssl.trustmanager.algorithm = PKIX\r\n\tssl.truststore.certificates = null\r\n\tssl.truststore.location = null\r\n\tssl.truststore.password = null\r\n\tssl.truststore.type = JKS\r\n\tvalue.deserializer = class org.apache.kafka.common.serialization.StringDeserializer\r\n","class":"org.apache.kafka.clients.consumer.ConsumerConfig","thread":"restartedMain","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:58:51.115Z","appMessage":"Kafka version: 2.7.1","class":"org.apache.kafka.common.utils.AppInfoParser","thread":"restartedMain","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:58:51.116Z","appMessage":"Kafka commitId: 61dbce85d0d41457","class":"org.apache.kafka.common.utils.AppInfoParser","thread":"restartedMain","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:58:51.116Z","appMessage":"Kafka startTimeMs: 1627019931115","class":"org.apache.kafka.common.utils.AppInfoParser","thread":"restartedMain","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:58:51.117Z","appMessage":"[Consumer clientId=consumer-group_id-16, groupId=group_id] Subscribed to topic(s): customer-topic-2","class":"org.apache.kafka.clients.consumer.KafkaConsumer","thread":"restartedMain","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:58:51.120Z","appMessage":"ConsumerConfig values: \r\n\tallow.auto.create.topics = true\r\n\tauto.commit.interval.ms = 5000\r\n\tauto.offset.reset = latest\r\n\tbootstrap.servers = [127.0.0.1:9092]\r\n\tcheck.crcs = true\r\n\tclient.dns.lookup = use_all_dns_ips\r\n\tclient.id = consumer-group_json-17\r\n\tclient.rack = \r\n\tconnections.max.idle.ms = 540000\r\n\tdefault.api.timeout.ms = 60000\r\n\tenable.auto.commit = false\r\n\texclude.internal.topics = true\r\n\tfetch.max.bytes = 52428800\r\n\tfetch.max.wait.ms = 500\r\n\tfetch.min.bytes = 1\r\n\tgroup.id = group_json\r\n\tgroup.instance.id = null\r\n\theartbeat.interval.ms = 3000\r\n\tinterceptor.classes = []\r\n\tinternal.leave.group.on.close = true\r\n\tinternal.throw.on.fetch.stable.offset.unsupported = false\r\n\tisolation.level = read_uncommitted\r\n\tkey.deserializer = class org.apache.kafka.common.serialization.StringDeserializer\r\n\tmax.partition.fetch.bytes = 1048576\r\n\tmax.poll.interval.ms = 300000\r\n\tmax.poll.records = 500\r\n\tmetadata.max.age.ms = 300000\r\n\tmetric.reporters = []\r\n\tmetrics.num.samples = 2\r\n\tmetrics.recording.level = INFO\r\n\tmetrics.sample.window.ms = 30000\r\n\tpartition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor]\r\n\treceive.buffer.bytes = 65536\r\n\treconnect.backoff.max.ms = 1000\r\n\treconnect.backoff.ms = 50\r\n\trequest.timeout.ms = 30000\r\n\tretry.backoff.ms = 100\r\n\tsasl.client.callback.handler.class = null\r\n\tsasl.jaas.config = null\r\n\tsasl.kerberos.kinit.cmd = /usr/bin/kinit\r\n\tsasl.kerberos.min.time.before.relogin = 60000\r\n\tsasl.kerberos.service.name = null\r\n\tsasl.kerberos.ticket.renew.jitter = 0.05\r\n\tsasl.kerberos.ticket.renew.window.factor = 0.8\r\n\tsasl.login.callback.handler.class = null\r\n\tsasl.login.class = null\r\n\tsasl.login.refresh.buffer.seconds = 300\r\n\tsasl.login.refresh.min.period.seconds = 60\r\n\tsasl.login.refresh.window.factor = 0.8\r\n\tsasl.login.refresh.window.jitter = 0.05\r\n\tsasl.mechanism = GSSAPI\r\n\tsecurity.protocol = PLAINTEXT\r\n\tsecurity.providers = null\r\n\tsend.buffer.bytes = 131072\r\n\tsession.timeout.ms = 10000\r\n\tsocket.connection.setup.timeout.max.ms = 127000\r\n\tsocket.connection.setup.timeout.ms = 10000\r\n\tssl.cipher.suites = null\r\n\tssl.enabled.protocols = [TLSv1.2]\r\n\tssl.endpoint.identification.algorithm = https\r\n\tssl.engine.factory.class = null\r\n\tssl.key.password = null\r\n\tssl.keymanager.algorithm = SunX509\r\n\tssl.keystore.certificate.chain = null\r\n\tssl.keystore.key = null\r\n\tssl.keystore.location = null\r\n\tssl.keystore.password = null\r\n\tssl.keystore.type = JKS\r\n\tssl.protocol = TLSv1.2\r\n\tssl.provider = null\r\n\tssl.secure.random.implementation = null\r\n\tssl.trustmanager.algorithm = PKIX\r\n\tssl.truststore.certificates = null\r\n\tssl.truststore.location = null\r\n\tssl.truststore.password = null\r\n\tssl.truststore.type = JKS\r\n\tvalue.deserializer = class org.springframework.kafka.support.serializer.JsonDeserializer\r\n","class":"org.apache.kafka.clients.consumer.ConsumerConfig","thread":"restartedMain","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:58:51.122Z","appMessage":"[Consumer clientId=consumer-group_id-16, groupId=group_id] Cluster ID: Iu9DHTQ6SReFUqKIFFqxlQ","class":"org.apache.kafka.clients.Metadata","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:58:51.128Z","appMessage":"[Consumer clientId=consumer-group_id-16, groupId=group_id] Discovered group coordinator Officeroom:9092 (id: 2147483647 rack: null)","class":"org.apache.kafka.clients.consumer.internals.AbstractCoordinator","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:58:51.130Z","appMessage":"[Consumer clientId=consumer-group_id-16, groupId=group_id] (Re-)joining group","class":"org.apache.kafka.clients.consumer.internals.AbstractCoordinator","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:58:51.131Z","appMessage":"Kafka version: 2.7.1","class":"org.apache.kafka.common.utils.AppInfoParser","thread":"restartedMain","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:58:51.132Z","appMessage":"Kafka commitId: 61dbce85d0d41457","class":"org.apache.kafka.common.utils.AppInfoParser","thread":"restartedMain","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:58:51.132Z","appMessage":"[Consumer clientId=consumer-group_id-16, groupId=group_id] (Re-)joining group","class":"org.apache.kafka.clients.consumer.internals.AbstractCoordinator","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:58:51.132Z","appMessage":"Kafka startTimeMs: 1627019931131","class":"org.apache.kafka.common.utils.AppInfoParser","thread":"restartedMain","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:58:51.133Z","appMessage":"[Consumer clientId=consumer-group_json-17, groupId=group_json] Subscribed to topic(s): customer-topic-1","class":"org.apache.kafka.clients.consumer.KafkaConsumer","thread":"restartedMain","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:58:51.135Z","appMessage":"[Consumer clientId=consumer-group_id-16, groupId=group_id] Successfully joined group with generation Generation{generationId=19, memberId='consumer-group_id-16-7759c86b-42c8-4dce-ab01-8f957b396179', protocol='range'}","class":"org.apache.kafka.clients.consumer.internals.AbstractCoordinator","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:58:51.135Z","appMessage":"Starting ProtocolHandler [\"http-nio-8080\"]","class":"org.apache.coyote.http11.Http11NioProtocol","thread":"restartedMain","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:58:51.135Z","appMessage":"[Consumer clientId=consumer-group_id-16, groupId=group_id] Finished assignment for group at generation 19: {consumer-group_id-16-7759c86b-42c8-4dce-ab01-8f957b396179=Assignment(partitions=[customer-topic-2-0])}","class":"org.apache.kafka.clients.consumer.internals.ConsumerCoordinator","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:58:51.140Z","appMessage":"[Consumer clientId=consumer-group_id-16, groupId=group_id] Successfully synced group in generation Generation{generationId=19, memberId='consumer-group_id-16-7759c86b-42c8-4dce-ab01-8f957b396179', protocol='range'}","class":"org.apache.kafka.clients.consumer.internals.AbstractCoordinator","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:58:51.140Z","appMessage":"Tomcat started on port(s): 8080 (http) with context path ''","class":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread":"restartedMain","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:58:51.140Z","appMessage":"[Consumer clientId=consumer-group_json-17, groupId=group_json] Cluster ID: Iu9DHTQ6SReFUqKIFFqxlQ","class":"org.apache.kafka.clients.Metadata","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:58:51.141Z","appMessage":"[Consumer clientId=consumer-group_id-16, groupId=group_id] Notifying assignor about the new Assignment(partitions=[customer-topic-2-0])","class":"org.apache.kafka.clients.consumer.internals.ConsumerCoordinator","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:58:51.142Z","appMessage":"[Consumer clientId=consumer-group_json-17, groupId=group_json] Discovered group coordinator Officeroom:9092 (id: 2147483647 rack: null)","class":"org.apache.kafka.clients.consumer.internals.AbstractCoordinator","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:58:51.142Z","appMessage":"[Consumer clientId=consumer-group_id-16, groupId=group_id] Adding newly assigned partitions: customer-topic-2-0","class":"org.apache.kafka.clients.consumer.internals.ConsumerCoordinator","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:58:51.143Z","appMessage":"[Consumer clientId=consumer-group_json-17, groupId=group_json] (Re-)joining group","class":"org.apache.kafka.clients.consumer.internals.AbstractCoordinator","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:58:51.144Z","appMessage":"[Consumer clientId=consumer-group_id-16, groupId=group_id] Setting offset for partition customer-topic-2-0 to the committed offset FetchPosition{offset=6, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[Officeroom:9092 (id: 0 rack: null)], epoch=absent}}","class":"org.apache.kafka.clients.consumer.internals.ConsumerCoordinator","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:58:51.145Z","appMessage":"group_id: partitions assigned: [customer-topic-2-0]","class":"org.springframework.kafka.listener.KafkaMessageListenerContainer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:58:51.146Z","appMessage":"[Consumer clientId=consumer-group_json-17, groupId=group_json] (Re-)joining group","class":"org.apache.kafka.clients.consumer.internals.AbstractCoordinator","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:58:51.149Z","appMessage":"[Consumer clientId=consumer-group_json-17, groupId=group_json] Successfully joined group with generation Generation{generationId=13, memberId='consumer-group_json-17-570eee98-286b-4970-8bd2-d0519ed2c8c3', protocol='range'}","class":"org.apache.kafka.clients.consumer.internals.AbstractCoordinator","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:58:51.150Z","appMessage":"[Consumer clientId=consumer-group_json-17, groupId=group_json] Finished assignment for group at generation 13: {consumer-group_json-17-570eee98-286b-4970-8bd2-d0519ed2c8c3=Assignment(partitions=[customer-topic-1-0, customer-topic-1-1, customer-topic-1-2, customer-topic-1-3, customer-topic-1-4, customer-topic-1-5, customer-topic-1-6, customer-topic-1-7, customer-topic-1-8, customer-topic-1-9])}","class":"org.apache.kafka.clients.consumer.internals.ConsumerCoordinator","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:58:51.153Z","appMessage":"[Consumer clientId=consumer-group_json-17, groupId=group_json] Successfully synced group in generation Generation{generationId=13, memberId='consumer-group_json-17-570eee98-286b-4970-8bd2-d0519ed2c8c3', protocol='range'}","class":"org.apache.kafka.clients.consumer.internals.AbstractCoordinator","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:58:51.153Z","appMessage":"[Consumer clientId=consumer-group_json-17, groupId=group_json] Notifying assignor about the new Assignment(partitions=[customer-topic-1-0, customer-topic-1-1, customer-topic-1-2, customer-topic-1-3, customer-topic-1-4, customer-topic-1-5, customer-topic-1-6, customer-topic-1-7, customer-topic-1-8, customer-topic-1-9])","class":"org.apache.kafka.clients.consumer.internals.ConsumerCoordinator","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:58:51.154Z","appMessage":"[Consumer clientId=consumer-group_json-17, groupId=group_json] Adding newly assigned partitions: customer-topic-1-0, customer-topic-1-1, customer-topic-1-2, customer-topic-1-3, customer-topic-1-4, customer-topic-1-5, customer-topic-1-6, customer-topic-1-7, customer-topic-1-8, customer-topic-1-9","class":"org.apache.kafka.clients.consumer.internals.ConsumerCoordinator","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:58:51.154Z","appMessage":"Started Application in 0.967 seconds (JVM running for 1200.937)","class":"com.aslan.kafka.Application","thread":"restartedMain","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:58:51.156Z","appMessage":"[Consumer clientId=consumer-group_json-17, groupId=group_json] Setting offset for partition customer-topic-1-0 to the committed offset FetchPosition{offset=8, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[Officeroom:9092 (id: 0 rack: null)], epoch=absent}}","class":"org.apache.kafka.clients.consumer.internals.ConsumerCoordinator","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:58:51.157Z","appMessage":"[Consumer clientId=consumer-group_json-17, groupId=group_json] Setting offset for partition customer-topic-1-1 to the committed offset FetchPosition{offset=8, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[Officeroom:9092 (id: 0 rack: null)], epoch=absent}}","class":"org.apache.kafka.clients.consumer.internals.ConsumerCoordinator","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:58:51.157Z","appMessage":"Condition evaluation unchanged","class":"org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener","thread":"restartedMain","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:58:51.157Z","appMessage":"[Consumer clientId=consumer-group_json-17, groupId=group_json] Setting offset for partition customer-topic-1-2 to the committed offset FetchPosition{offset=8, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[Officeroom:9092 (id: 0 rack: null)], epoch=absent}}","class":"org.apache.kafka.clients.consumer.internals.ConsumerCoordinator","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:58:51.158Z","appMessage":"[Consumer clientId=consumer-group_json-17, groupId=group_json] Setting offset for partition customer-topic-1-3 to the committed offset FetchPosition{offset=8, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[Officeroom:9092 (id: 0 rack: null)], epoch=absent}}","class":"org.apache.kafka.clients.consumer.internals.ConsumerCoordinator","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:58:51.159Z","appMessage":"[Consumer clientId=consumer-group_json-17, groupId=group_json] Setting offset for partition customer-topic-1-4 to the committed offset FetchPosition{offset=8, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[Officeroom:9092 (id: 0 rack: null)], epoch=absent}}","class":"org.apache.kafka.clients.consumer.internals.ConsumerCoordinator","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:58:51.160Z","appMessage":"[Consumer clientId=consumer-group_json-17, groupId=group_json] Setting offset for partition customer-topic-1-5 to the committed offset FetchPosition{offset=8, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[Officeroom:9092 (id: 0 rack: null)], epoch=absent}}","class":"org.apache.kafka.clients.consumer.internals.ConsumerCoordinator","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:58:51.160Z","appMessage":"[Consumer clientId=consumer-group_json-17, groupId=group_json] Setting offset for partition customer-topic-1-6 to the committed offset FetchPosition{offset=8, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[Officeroom:9092 (id: 0 rack: null)], epoch=absent}}","class":"org.apache.kafka.clients.consumer.internals.ConsumerCoordinator","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:58:51.161Z","appMessage":"[Consumer clientId=consumer-group_json-17, groupId=group_json] Setting offset for partition customer-topic-1-7 to the committed offset FetchPosition{offset=8, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[Officeroom:9092 (id: 0 rack: null)], epoch=absent}}","class":"org.apache.kafka.clients.consumer.internals.ConsumerCoordinator","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:58:51.161Z","appMessage":"[Consumer clientId=consumer-group_json-17, groupId=group_json] Setting offset for partition customer-topic-1-8 to the committed offset FetchPosition{offset=8, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[Officeroom:9092 (id: 0 rack: null)], epoch=absent}}","class":"org.apache.kafka.clients.consumer.internals.ConsumerCoordinator","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:58:51.162Z","appMessage":"[Consumer clientId=consumer-group_json-17, groupId=group_json] Setting offset for partition customer-topic-1-9 to the committed offset FetchPosition{offset=8, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[Officeroom:9092 (id: 0 rack: null)], epoch=absent}}","class":"org.apache.kafka.clients.consumer.internals.ConsumerCoordinator","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:58:51.162Z","appMessage":"group_json: partitions assigned: [customer-topic-1-0, customer-topic-1-1, customer-topic-1-2, customer-topic-1-3, customer-topic-1-4, customer-topic-1-5, customer-topic-1-6, customer-topic-1-7, customer-topic-1-8, customer-topic-1-9]","class":"org.springframework.kafka.listener.KafkaMessageListenerContainer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:59:03.791Z","appMessage":"[Consumer clientId=consumer-group_id-16, groupId=group_id] Revoke previously assigned partitions customer-topic-2-0","class":"org.apache.kafka.clients.consumer.internals.ConsumerCoordinator","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:59:03.791Z","appMessage":"[Consumer clientId=consumer-group_json-17, groupId=group_json] Revoke previously assigned partitions customer-topic-1-0, customer-topic-1-1, customer-topic-1-2, customer-topic-1-3, customer-topic-1-4, customer-topic-1-5, customer-topic-1-6, customer-topic-1-7, customer-topic-1-8, customer-topic-1-9","class":"org.apache.kafka.clients.consumer.internals.ConsumerCoordinator","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:59:03.792Z","appMessage":"group_id: partitions revoked: [customer-topic-2-0]","class":"org.springframework.kafka.listener.KafkaMessageListenerContainer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:59:03.792Z","appMessage":"group_json: partitions revoked: [customer-topic-1-0, customer-topic-1-1, customer-topic-1-2, customer-topic-1-3, customer-topic-1-4, customer-topic-1-5, customer-topic-1-6, customer-topic-1-7, customer-topic-1-8, customer-topic-1-9]","class":"org.springframework.kafka.listener.KafkaMessageListenerContainer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:59:03.793Z","appMessage":"[Consumer clientId=consumer-group_id-16, groupId=group_id] Member consumer-group_id-16-7759c86b-42c8-4dce-ab01-8f957b396179 sending LeaveGroup request to coordinator Officeroom:9092 (id: 2147483647 rack: null) due to the consumer unsubscribed from all topics","class":"org.apache.kafka.clients.consumer.internals.AbstractCoordinator","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:59:03.793Z","appMessage":"[Consumer clientId=consumer-group_json-17, groupId=group_json] Member consumer-group_json-17-570eee98-286b-4970-8bd2-d0519ed2c8c3 sending LeaveGroup request to coordinator Officeroom:9092 (id: 2147483647 rack: null) due to the consumer unsubscribed from all topics","class":"org.apache.kafka.clients.consumer.internals.AbstractCoordinator","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:59:03.794Z","appMessage":"[Consumer clientId=consumer-group_id-16, groupId=group_id] Unsubscribed all topics or patterns and assigned partitions","class":"org.apache.kafka.clients.consumer.KafkaConsumer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:59:03.794Z","appMessage":"[Consumer clientId=consumer-group_json-17, groupId=group_json] Unsubscribed all topics or patterns and assigned partitions","class":"org.apache.kafka.clients.consumer.KafkaConsumer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:59:03.798Z","appMessage":"Metrics scheduler closed","class":"org.apache.kafka.common.metrics.Metrics","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:59:03.798Z","appMessage":"Metrics scheduler closed","class":"org.apache.kafka.common.metrics.Metrics","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:59:03.798Z","appMessage":"Closing reporter org.apache.kafka.common.metrics.JmxReporter","class":"org.apache.kafka.common.metrics.Metrics","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:59:03.799Z","appMessage":"Closing reporter org.apache.kafka.common.metrics.JmxReporter","class":"org.apache.kafka.common.metrics.Metrics","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:59:03.799Z","appMessage":"Metrics reporters closed","class":"org.apache.kafka.common.metrics.Metrics","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:59:03.799Z","appMessage":"Metrics reporters closed","class":"org.apache.kafka.common.metrics.Metrics","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:59:03.804Z","appMessage":"App info kafka.consumer for consumer-group_json-17 unregistered","class":"org.apache.kafka.common.utils.AppInfoParser","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:59:03.805Z","appMessage":"group_json: Consumer stopped","class":"org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:59:03.805Z","appMessage":"App info kafka.consumer for consumer-group_id-16 unregistered","class":"org.apache.kafka.common.utils.AppInfoParser","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:59:03.805Z","appMessage":"group_id: Consumer stopped","class":"org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:59:04.103Z","appMessage":"Starting Application using Java 1.8.0_202 on Officeroom with PID 55836 (C:\\Users\\Officeroom\\JavaProj\\sb-aslan-kafka-template\\target\\classes started by Officeroom in C:\\Users\\Officeroom\\JavaProj\\sb-aslan-kafka-template)","class":"com.aslan.kafka.Application","thread":"restartedMain","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:59:04.104Z","appMessage":"The following profiles are active: local","class":"com.aslan.kafka.Application","thread":"restartedMain","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:59:04.524Z","appMessage":"Tomcat initialized with port(s): 8080 (http)","class":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread":"restartedMain","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:59:04.525Z","appMessage":"Initializing ProtocolHandler [\"http-nio-8080\"]","class":"org.apache.coyote.http11.Http11NioProtocol","thread":"restartedMain","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:59:04.525Z","appMessage":"Starting service [Tomcat]","class":"org.apache.catalina.core.StandardService","thread":"restartedMain","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:59:04.526Z","appMessage":"Starting Servlet engine: [Apache Tomcat/9.0.48]","class":"org.apache.catalina.core.StandardEngine","thread":"restartedMain","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:59:04.560Z","appMessage":"Initializing Spring embedded WebApplicationContext","class":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]","thread":"restartedMain","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:59:04.560Z","appMessage":"Root WebApplicationContext: initialization completed in 453 ms","class":"org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext","thread":"restartedMain","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:59:04.701Z","appMessage":"Cannot find template location: classpath:/templates/ (please add some templates, check your Mustache configuration, or set spring.mustache.check-template-location=false)","class":"org.springframework.boot.autoconfigure.mustache.MustacheAutoConfiguration","thread":"restartedMain","level":"WARN","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:59:04.708Z","appMessage":"Cannot find template location: classpath:/templates/ (please add some templates or check your Thymeleaf configuration)","class":"org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$DefaultTemplateResolverConfiguration","thread":"restartedMain","level":"WARN","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:59:04.785Z","appMessage":"LiveReload server is running on port 35729","class":"org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer","thread":"restartedMain","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:59:04.790Z","appMessage":"Exposing 13 endpoint(s) beneath base path ''","class":"org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver","thread":"restartedMain","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:59:04.811Z","appMessage":"ConsumerConfig values: \r\n\tallow.auto.create.topics = true\r\n\tauto.commit.interval.ms = 5000\r\n\tauto.offset.reset = latest\r\n\tbootstrap.servers = [127.0.0.1:9092]\r\n\tcheck.crcs = true\r\n\tclient.dns.lookup = use_all_dns_ips\r\n\tclient.id = consumer-group_id-18\r\n\tclient.rack = \r\n\tconnections.max.idle.ms = 540000\r\n\tdefault.api.timeout.ms = 60000\r\n\tenable.auto.commit = false\r\n\texclude.internal.topics = true\r\n\tfetch.max.bytes = 52428800\r\n\tfetch.max.wait.ms = 500\r\n\tfetch.min.bytes = 1\r\n\tgroup.id = group_id\r\n\tgroup.instance.id = null\r\n\theartbeat.interval.ms = 3000\r\n\tinterceptor.classes = []\r\n\tinternal.leave.group.on.close = true\r\n\tinternal.throw.on.fetch.stable.offset.unsupported = false\r\n\tisolation.level = read_uncommitted\r\n\tkey.deserializer = class org.apache.kafka.common.serialization.StringDeserializer\r\n\tmax.partition.fetch.bytes = 1048576\r\n\tmax.poll.interval.ms = 300000\r\n\tmax.poll.records = 500\r\n\tmetadata.max.age.ms = 300000\r\n\tmetric.reporters = []\r\n\tmetrics.num.samples = 2\r\n\tmetrics.recording.level = INFO\r\n\tmetrics.sample.window.ms = 30000\r\n\tpartition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor]\r\n\treceive.buffer.bytes = 65536\r\n\treconnect.backoff.max.ms = 1000\r\n\treconnect.backoff.ms = 50\r\n\trequest.timeout.ms = 30000\r\n\tretry.backoff.ms = 100\r\n\tsasl.client.callback.handler.class = null\r\n\tsasl.jaas.config = null\r\n\tsasl.kerberos.kinit.cmd = /usr/bin/kinit\r\n\tsasl.kerberos.min.time.before.relogin = 60000\r\n\tsasl.kerberos.service.name = null\r\n\tsasl.kerberos.ticket.renew.jitter = 0.05\r\n\tsasl.kerberos.ticket.renew.window.factor = 0.8\r\n\tsasl.login.callback.handler.class = null\r\n\tsasl.login.class = null\r\n\tsasl.login.refresh.buffer.seconds = 300\r\n\tsasl.login.refresh.min.period.seconds = 60\r\n\tsasl.login.refresh.window.factor = 0.8\r\n\tsasl.login.refresh.window.jitter = 0.05\r\n\tsasl.mechanism = GSSAPI\r\n\tsecurity.protocol = PLAINTEXT\r\n\tsecurity.providers = null\r\n\tsend.buffer.bytes = 131072\r\n\tsession.timeout.ms = 10000\r\n\tsocket.connection.setup.timeout.max.ms = 127000\r\n\tsocket.connection.setup.timeout.ms = 10000\r\n\tssl.cipher.suites = null\r\n\tssl.enabled.protocols = [TLSv1.2]\r\n\tssl.endpoint.identification.algorithm = https\r\n\tssl.engine.factory.class = null\r\n\tssl.key.password = null\r\n\tssl.keymanager.algorithm = SunX509\r\n\tssl.keystore.certificate.chain = null\r\n\tssl.keystore.key = null\r\n\tssl.keystore.location = null\r\n\tssl.keystore.password = null\r\n\tssl.keystore.type = JKS\r\n\tssl.protocol = TLSv1.2\r\n\tssl.provider = null\r\n\tssl.secure.random.implementation = null\r\n\tssl.trustmanager.algorithm = PKIX\r\n\tssl.truststore.certificates = null\r\n\tssl.truststore.location = null\r\n\tssl.truststore.password = null\r\n\tssl.truststore.type = JKS\r\n\tvalue.deserializer = class org.apache.kafka.common.serialization.StringDeserializer\r\n","class":"org.apache.kafka.clients.consumer.ConsumerConfig","thread":"restartedMain","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:59:04.823Z","appMessage":"Kafka version: 2.7.1","class":"org.apache.kafka.common.utils.AppInfoParser","thread":"restartedMain","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:59:04.824Z","appMessage":"Kafka commitId: 61dbce85d0d41457","class":"org.apache.kafka.common.utils.AppInfoParser","thread":"restartedMain","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:59:04.824Z","appMessage":"Kafka startTimeMs: 1627019944823","class":"org.apache.kafka.common.utils.AppInfoParser","thread":"restartedMain","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:59:04.825Z","appMessage":"[Consumer clientId=consumer-group_id-18, groupId=group_id] Subscribed to topic(s): customer-topic-2","class":"org.apache.kafka.clients.consumer.KafkaConsumer","thread":"restartedMain","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:59:04.827Z","appMessage":"ConsumerConfig values: \r\n\tallow.auto.create.topics = true\r\n\tauto.commit.interval.ms = 5000\r\n\tauto.offset.reset = latest\r\n\tbootstrap.servers = [127.0.0.1:9092]\r\n\tcheck.crcs = true\r\n\tclient.dns.lookup = use_all_dns_ips\r\n\tclient.id = consumer-group_json-19\r\n\tclient.rack = \r\n\tconnections.max.idle.ms = 540000\r\n\tdefault.api.timeout.ms = 60000\r\n\tenable.auto.commit = false\r\n\texclude.internal.topics = true\r\n\tfetch.max.bytes = 52428800\r\n\tfetch.max.wait.ms = 500\r\n\tfetch.min.bytes = 1\r\n\tgroup.id = group_json\r\n\tgroup.instance.id = null\r\n\theartbeat.interval.ms = 3000\r\n\tinterceptor.classes = []\r\n\tinternal.leave.group.on.close = true\r\n\tinternal.throw.on.fetch.stable.offset.unsupported = false\r\n\tisolation.level = read_uncommitted\r\n\tkey.deserializer = class org.apache.kafka.common.serialization.StringDeserializer\r\n\tmax.partition.fetch.bytes = 1048576\r\n\tmax.poll.interval.ms = 300000\r\n\tmax.poll.records = 500\r\n\tmetadata.max.age.ms = 300000\r\n\tmetric.reporters = []\r\n\tmetrics.num.samples = 2\r\n\tmetrics.recording.level = INFO\r\n\tmetrics.sample.window.ms = 30000\r\n\tpartition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor]\r\n\treceive.buffer.bytes = 65536\r\n\treconnect.backoff.max.ms = 1000\r\n\treconnect.backoff.ms = 50\r\n\trequest.timeout.ms = 30000\r\n\tretry.backoff.ms = 100\r\n\tsasl.client.callback.handler.class = null\r\n\tsasl.jaas.config = null\r\n\tsasl.kerberos.kinit.cmd = /usr/bin/kinit\r\n\tsasl.kerberos.min.time.before.relogin = 60000\r\n\tsasl.kerberos.service.name = null\r\n\tsasl.kerberos.ticket.renew.jitter = 0.05\r\n\tsasl.kerberos.ticket.renew.window.factor = 0.8\r\n\tsasl.login.callback.handler.class = null\r\n\tsasl.login.class = null\r\n\tsasl.login.refresh.buffer.seconds = 300\r\n\tsasl.login.refresh.min.period.seconds = 60\r\n\tsasl.login.refresh.window.factor = 0.8\r\n\tsasl.login.refresh.window.jitter = 0.05\r\n\tsasl.mechanism = GSSAPI\r\n\tsecurity.protocol = PLAINTEXT\r\n\tsecurity.providers = null\r\n\tsend.buffer.bytes = 131072\r\n\tsession.timeout.ms = 10000\r\n\tsocket.connection.setup.timeout.max.ms = 127000\r\n\tsocket.connection.setup.timeout.ms = 10000\r\n\tssl.cipher.suites = null\r\n\tssl.enabled.protocols = [TLSv1.2]\r\n\tssl.endpoint.identification.algorithm = https\r\n\tssl.engine.factory.class = null\r\n\tssl.key.password = null\r\n\tssl.keymanager.algorithm = SunX509\r\n\tssl.keystore.certificate.chain = null\r\n\tssl.keystore.key = null\r\n\tssl.keystore.location = null\r\n\tssl.keystore.password = null\r\n\tssl.keystore.type = JKS\r\n\tssl.protocol = TLSv1.2\r\n\tssl.provider = null\r\n\tssl.secure.random.implementation = null\r\n\tssl.trustmanager.algorithm = PKIX\r\n\tssl.truststore.certificates = null\r\n\tssl.truststore.location = null\r\n\tssl.truststore.password = null\r\n\tssl.truststore.type = JKS\r\n\tvalue.deserializer = class org.springframework.kafka.support.serializer.JsonDeserializer\r\n","class":"org.apache.kafka.clients.consumer.ConsumerConfig","thread":"restartedMain","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:59:04.830Z","appMessage":"[Consumer clientId=consumer-group_id-18, groupId=group_id] Cluster ID: Iu9DHTQ6SReFUqKIFFqxlQ","class":"org.apache.kafka.clients.Metadata","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:59:04.837Z","appMessage":"[Consumer clientId=consumer-group_id-18, groupId=group_id] Discovered group coordinator Officeroom:9092 (id: 2147483647 rack: null)","class":"org.apache.kafka.clients.consumer.internals.AbstractCoordinator","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:59:04.839Z","appMessage":"[Consumer clientId=consumer-group_id-18, groupId=group_id] (Re-)joining group","class":"org.apache.kafka.clients.consumer.internals.AbstractCoordinator","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:59:04.841Z","appMessage":"Kafka version: 2.7.1","class":"org.apache.kafka.common.utils.AppInfoParser","thread":"restartedMain","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:59:04.842Z","appMessage":"Kafka commitId: 61dbce85d0d41457","class":"org.apache.kafka.common.utils.AppInfoParser","thread":"restartedMain","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:59:04.842Z","appMessage":"Kafka startTimeMs: 1627019944841","class":"org.apache.kafka.common.utils.AppInfoParser","thread":"restartedMain","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:59:04.842Z","appMessage":"[Consumer clientId=consumer-group_id-18, groupId=group_id] (Re-)joining group","class":"org.apache.kafka.clients.consumer.internals.AbstractCoordinator","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:59:04.843Z","appMessage":"[Consumer clientId=consumer-group_json-19, groupId=group_json] Subscribed to topic(s): customer-topic-1","class":"org.apache.kafka.clients.consumer.KafkaConsumer","thread":"restartedMain","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:59:04.846Z","appMessage":"Starting ProtocolHandler [\"http-nio-8080\"]","class":"org.apache.coyote.http11.Http11NioProtocol","thread":"restartedMain","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:59:04.847Z","appMessage":"[Consumer clientId=consumer-group_id-18, groupId=group_id] Successfully joined group with generation Generation{generationId=21, memberId='consumer-group_id-18-d2fda776-6afa-4d97-8448-1a1ac39c74ba', protocol='range'}","class":"org.apache.kafka.clients.consumer.internals.AbstractCoordinator","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:59:04.848Z","appMessage":"[Consumer clientId=consumer-group_id-18, groupId=group_id] Finished assignment for group at generation 21: {consumer-group_id-18-d2fda776-6afa-4d97-8448-1a1ac39c74ba=Assignment(partitions=[customer-topic-2-0])}","class":"org.apache.kafka.clients.consumer.internals.ConsumerCoordinator","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:59:04.850Z","appMessage":"Tomcat started on port(s): 8080 (http) with context path ''","class":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread":"restartedMain","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:59:04.850Z","appMessage":"[Consumer clientId=consumer-group_json-19, groupId=group_json] Cluster ID: Iu9DHTQ6SReFUqKIFFqxlQ","class":"org.apache.kafka.clients.Metadata","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:59:04.852Z","appMessage":"[Consumer clientId=consumer-group_id-18, groupId=group_id] Successfully synced group in generation Generation{generationId=21, memberId='consumer-group_id-18-d2fda776-6afa-4d97-8448-1a1ac39c74ba', protocol='range'}","class":"org.apache.kafka.clients.consumer.internals.AbstractCoordinator","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:59:04.852Z","appMessage":"[Consumer clientId=consumer-group_json-19, groupId=group_json] Discovered group coordinator Officeroom:9092 (id: 2147483647 rack: null)","class":"org.apache.kafka.clients.consumer.internals.AbstractCoordinator","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:59:04.853Z","appMessage":"[Consumer clientId=consumer-group_id-18, groupId=group_id] Notifying assignor about the new Assignment(partitions=[customer-topic-2-0])","class":"org.apache.kafka.clients.consumer.internals.ConsumerCoordinator","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:59:04.854Z","appMessage":"[Consumer clientId=consumer-group_id-18, groupId=group_id] Adding newly assigned partitions: customer-topic-2-0","class":"org.apache.kafka.clients.consumer.internals.ConsumerCoordinator","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:59:04.855Z","appMessage":"[Consumer clientId=consumer-group_json-19, groupId=group_json] (Re-)joining group","class":"org.apache.kafka.clients.consumer.internals.AbstractCoordinator","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:59:04.856Z","appMessage":"[Consumer clientId=consumer-group_id-18, groupId=group_id] Setting offset for partition customer-topic-2-0 to the committed offset FetchPosition{offset=6, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[Officeroom:9092 (id: 0 rack: null)], epoch=absent}}","class":"org.apache.kafka.clients.consumer.internals.ConsumerCoordinator","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:59:04.857Z","appMessage":"group_id: partitions assigned: [customer-topic-2-0]","class":"org.springframework.kafka.listener.KafkaMessageListenerContainer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:59:04.857Z","appMessage":"[Consumer clientId=consumer-group_json-19, groupId=group_json] (Re-)joining group","class":"org.apache.kafka.clients.consumer.internals.AbstractCoordinator","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:59:04.861Z","appMessage":"[Consumer clientId=consumer-group_json-19, groupId=group_json] Successfully joined group with generation Generation{generationId=15, memberId='consumer-group_json-19-0c314666-695f-4d6e-aa3a-b970a4406412', protocol='range'}","class":"org.apache.kafka.clients.consumer.internals.AbstractCoordinator","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:59:04.861Z","appMessage":"[Consumer clientId=consumer-group_json-19, groupId=group_json] Finished assignment for group at generation 15: {consumer-group_json-19-0c314666-695f-4d6e-aa3a-b970a4406412=Assignment(partitions=[customer-topic-1-0, customer-topic-1-1, customer-topic-1-2, customer-topic-1-3, customer-topic-1-4, customer-topic-1-5, customer-topic-1-6, customer-topic-1-7, customer-topic-1-8, customer-topic-1-9])}","class":"org.apache.kafka.clients.consumer.internals.ConsumerCoordinator","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:59:04.864Z","appMessage":"[Consumer clientId=consumer-group_json-19, groupId=group_json] Successfully synced group in generation Generation{generationId=15, memberId='consumer-group_json-19-0c314666-695f-4d6e-aa3a-b970a4406412', protocol='range'}","class":"org.apache.kafka.clients.consumer.internals.AbstractCoordinator","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:59:04.865Z","appMessage":"[Consumer clientId=consumer-group_json-19, groupId=group_json] Notifying assignor about the new Assignment(partitions=[customer-topic-1-0, customer-topic-1-1, customer-topic-1-2, customer-topic-1-3, customer-topic-1-4, customer-topic-1-5, customer-topic-1-6, customer-topic-1-7, customer-topic-1-8, customer-topic-1-9])","class":"org.apache.kafka.clients.consumer.internals.ConsumerCoordinator","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:59:04.866Z","appMessage":"[Consumer clientId=consumer-group_json-19, groupId=group_json] Adding newly assigned partitions: customer-topic-1-0, customer-topic-1-1, customer-topic-1-2, customer-topic-1-3, customer-topic-1-4, customer-topic-1-5, customer-topic-1-6, customer-topic-1-7, customer-topic-1-8, customer-topic-1-9","class":"org.apache.kafka.clients.consumer.internals.ConsumerCoordinator","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:59:04.866Z","appMessage":"Started Application in 0.822 seconds (JVM running for 1214.649)","class":"com.aslan.kafka.Application","thread":"restartedMain","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:59:04.868Z","appMessage":"[Consumer clientId=consumer-group_json-19, groupId=group_json] Setting offset for partition customer-topic-1-0 to the committed offset FetchPosition{offset=8, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[Officeroom:9092 (id: 0 rack: null)], epoch=absent}}","class":"org.apache.kafka.clients.consumer.internals.ConsumerCoordinator","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:59:04.868Z","appMessage":"[Consumer clientId=consumer-group_json-19, groupId=group_json] Setting offset for partition customer-topic-1-1 to the committed offset FetchPosition{offset=8, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[Officeroom:9092 (id: 0 rack: null)], epoch=absent}}","class":"org.apache.kafka.clients.consumer.internals.ConsumerCoordinator","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:59:04.869Z","appMessage":"[Consumer clientId=consumer-group_json-19, groupId=group_json] Setting offset for partition customer-topic-1-2 to the committed offset FetchPosition{offset=8, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[Officeroom:9092 (id: 0 rack: null)], epoch=absent}}","class":"org.apache.kafka.clients.consumer.internals.ConsumerCoordinator","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:59:04.869Z","appMessage":"Condition evaluation unchanged","class":"org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener","thread":"restartedMain","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:59:04.870Z","appMessage":"[Consumer clientId=consumer-group_json-19, groupId=group_json] Setting offset for partition customer-topic-1-3 to the committed offset FetchPosition{offset=8, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[Officeroom:9092 (id: 0 rack: null)], epoch=absent}}","class":"org.apache.kafka.clients.consumer.internals.ConsumerCoordinator","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:59:04.870Z","appMessage":"[Consumer clientId=consumer-group_json-19, groupId=group_json] Setting offset for partition customer-topic-1-4 to the committed offset FetchPosition{offset=8, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[Officeroom:9092 (id: 0 rack: null)], epoch=absent}}","class":"org.apache.kafka.clients.consumer.internals.ConsumerCoordinator","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:59:04.871Z","appMessage":"[Consumer clientId=consumer-group_json-19, groupId=group_json] Setting offset for partition customer-topic-1-5 to the committed offset FetchPosition{offset=8, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[Officeroom:9092 (id: 0 rack: null)], epoch=absent}}","class":"org.apache.kafka.clients.consumer.internals.ConsumerCoordinator","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:59:04.872Z","appMessage":"[Consumer clientId=consumer-group_json-19, groupId=group_json] Setting offset for partition customer-topic-1-6 to the committed offset FetchPosition{offset=8, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[Officeroom:9092 (id: 0 rack: null)], epoch=absent}}","class":"org.apache.kafka.clients.consumer.internals.ConsumerCoordinator","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:59:04.872Z","appMessage":"[Consumer clientId=consumer-group_json-19, groupId=group_json] Setting offset for partition customer-topic-1-7 to the committed offset FetchPosition{offset=8, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[Officeroom:9092 (id: 0 rack: null)], epoch=absent}}","class":"org.apache.kafka.clients.consumer.internals.ConsumerCoordinator","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:59:04.873Z","appMessage":"[Consumer clientId=consumer-group_json-19, groupId=group_json] Setting offset for partition customer-topic-1-8 to the committed offset FetchPosition{offset=8, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[Officeroom:9092 (id: 0 rack: null)], epoch=absent}}","class":"org.apache.kafka.clients.consumer.internals.ConsumerCoordinator","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:59:04.874Z","appMessage":"[Consumer clientId=consumer-group_json-19, groupId=group_json] Setting offset for partition customer-topic-1-9 to the committed offset FetchPosition{offset=8, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[Officeroom:9092 (id: 0 rack: null)], epoch=absent}}","class":"org.apache.kafka.clients.consumer.internals.ConsumerCoordinator","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:59:04.874Z","appMessage":"group_json: partitions assigned: [customer-topic-1-0, customer-topic-1-1, customer-topic-1-2, customer-topic-1-3, customer-topic-1-4, customer-topic-1-5, customer-topic-1-6, customer-topic-1-7, customer-topic-1-8, customer-topic-1-9]","class":"org.springframework.kafka.listener.KafkaMessageListenerContainer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:59:34.856Z","appMessage":"Initializing Spring DispatcherServlet 'dispatcherServlet'","class":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]","thread":"http-nio-8080-exec-2","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:59:34.857Z","appMessage":"Initializing Servlet 'dispatcherServlet'","class":"org.springframework.web.servlet.DispatcherServlet","thread":"http-nio-8080-exec-2","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:59:34.859Z","appMessage":"Completed initialization in 1 ms","class":"org.springframework.web.servlet.DispatcherServlet","thread":"http-nio-8080-exec-2","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:59:34.861Z","appMessage":"ApiController::producer(): Start","class":"com.aslan.kafka.controller.ApiController","thread":"http-nio-8080-exec-2","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:59:34.861Z","appMessage":"ApiController::producer(): Key: id_0","class":"com.aslan.kafka.controller.ApiController","thread":"http-nio-8080-exec-2","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:59:34.863Z","appMessage":"ProducerConfig values: \r\n\tacks = -1\r\n\tbatch.size = 16384\r\n\tbootstrap.servers = [127.0.0.1:9092]\r\n\tbuffer.memory = 33554432\r\n\tclient.dns.lookup = use_all_dns_ips\r\n\tclient.id = producer-5\r\n\tcompression.type = none\r\n\tconnections.max.idle.ms = 540000\r\n\tdelivery.timeout.ms = 120000\r\n\tenable.idempotence = false\r\n\tinterceptor.classes = []\r\n\tinternal.auto.downgrade.txn.commit = true\r\n\tkey.serializer = class org.springframework.kafka.support.serializer.JsonSerializer\r\n\tlinger.ms = 0\r\n\tmax.block.ms = 60000\r\n\tmax.in.flight.requests.per.connection = 5\r\n\tmax.request.size = 1048576\r\n\tmetadata.max.age.ms = 300000\r\n\tmetadata.max.idle.ms = 300000\r\n\tmetric.reporters = []\r\n\tmetrics.num.samples = 2\r\n\tmetrics.recording.level = INFO\r\n\tmetrics.sample.window.ms = 30000\r\n\tpartitioner.class = class org.apache.kafka.clients.producer.internals.DefaultPartitioner\r\n\treceive.buffer.bytes = 32768\r\n\treconnect.backoff.max.ms = 1000\r\n\treconnect.backoff.ms = 50\r\n\trequest.timeout.ms = 30000\r\n\tretries = 10\r\n\tretry.backoff.ms = 100\r\n\tsasl.client.callback.handler.class = null\r\n\tsasl.jaas.config = null\r\n\tsasl.kerberos.kinit.cmd = /usr/bin/kinit\r\n\tsasl.kerberos.min.time.before.relogin = 60000\r\n\tsasl.kerberos.service.name = null\r\n\tsasl.kerberos.ticket.renew.jitter = 0.05\r\n\tsasl.kerberos.ticket.renew.window.factor = 0.8\r\n\tsasl.login.callback.handler.class = null\r\n\tsasl.login.class = null\r\n\tsasl.login.refresh.buffer.seconds = 300\r\n\tsasl.login.refresh.min.period.seconds = 60\r\n\tsasl.login.refresh.window.factor = 0.8\r\n\tsasl.login.refresh.window.jitter = 0.05\r\n\tsasl.mechanism = GSSAPI\r\n\tsecurity.protocol = PLAINTEXT\r\n\tsecurity.providers = null\r\n\tsend.buffer.bytes = 131072\r\n\tsocket.connection.setup.timeout.max.ms = 127000\r\n\tsocket.connection.setup.timeout.ms = 10000\r\n\tssl.cipher.suites = null\r\n\tssl.enabled.protocols = [TLSv1.2]\r\n\tssl.endpoint.identification.algorithm = https\r\n\tssl.engine.factory.class = null\r\n\tssl.key.password = null\r\n\tssl.keymanager.algorithm = SunX509\r\n\tssl.keystore.certificate.chain = null\r\n\tssl.keystore.key = null\r\n\tssl.keystore.location = null\r\n\tssl.keystore.password = null\r\n\tssl.keystore.type = JKS\r\n\tssl.protocol = TLSv1.2\r\n\tssl.provider = null\r\n\tssl.secure.random.implementation = null\r\n\tssl.trustmanager.algorithm = PKIX\r\n\tssl.truststore.certificates = null\r\n\tssl.truststore.location = null\r\n\tssl.truststore.password = null\r\n\tssl.truststore.type = JKS\r\n\ttransaction.timeout.ms = 60000\r\n\ttransactional.id = null\r\n\tvalue.serializer = class org.springframework.kafka.support.serializer.JsonSerializer\r\n","class":"org.apache.kafka.clients.producer.ProducerConfig","thread":"http-nio-8080-exec-2","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:59:34.882Z","appMessage":"Kafka version: 2.7.1","class":"org.apache.kafka.common.utils.AppInfoParser","thread":"http-nio-8080-exec-2","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:59:34.883Z","appMessage":"Kafka commitId: 61dbce85d0d41457","class":"org.apache.kafka.common.utils.AppInfoParser","thread":"http-nio-8080-exec-2","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:59:34.883Z","appMessage":"Kafka startTimeMs: 1627019974882","class":"org.apache.kafka.common.utils.AppInfoParser","thread":"http-nio-8080-exec-2","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:59:34.886Z","appMessage":"[Producer clientId=producer-5] Cluster ID: Iu9DHTQ6SReFUqKIFFqxlQ","class":"org.apache.kafka.clients.Metadata","thread":"kafka-producer-network-thread | producer-5","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:59:34.890Z","appMessage":"ApiController::producer(): Key: id_1","class":"com.aslan.kafka.controller.ApiController","thread":"http-nio-8080-exec-2","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:59:34.891Z","appMessage":"ApiController::producer(): Key: id_2","class":"com.aslan.kafka.controller.ApiController","thread":"http-nio-8080-exec-2","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:59:34.892Z","appMessage":"ApiController::producer(): Key: id_3","class":"com.aslan.kafka.controller.ApiController","thread":"http-nio-8080-exec-2","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:59:34.893Z","appMessage":"ApiController::producer(): Key: id_4","class":"com.aslan.kafka.controller.ApiController","thread":"http-nio-8080-exec-2","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:59:34.893Z","appMessage":"ApiController::producer(): Key: id_5","class":"com.aslan.kafka.controller.ApiController","thread":"http-nio-8080-exec-2","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:59:34.894Z","appMessage":"ApiController::producer(): Key: id_6","class":"com.aslan.kafka.controller.ApiController","thread":"http-nio-8080-exec-2","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:59:34.895Z","appMessage":"ApiController::producer(): Key: id_7","class":"com.aslan.kafka.controller.ApiController","thread":"http-nio-8080-exec-2","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:59:34.896Z","appMessage":"ApiController::producer(): Key: id_8","class":"com.aslan.kafka.controller.ApiController","thread":"http-nio-8080-exec-2","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:59:34.896Z","appMessage":"Sent message=[com.aslan.kafka.model.DataModel@3bc86eed] with offset=[8]","class":"com.aslan.kafka.controller.ApiController","thread":"kafka-producer-network-thread | producer-5","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:59:34.896Z","appMessage":"KafkaConsumer::consume(customer-topic-1):Consumed JSON Message: message. Message: message-0","class":"com.aslan.kafka.service.KafkaConsumer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:59:34.896Z","appMessage":"ApiController::producer(): Key: id_9","class":"com.aslan.kafka.controller.ApiController","thread":"http-nio-8080-exec-2","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:59:34.897Z","appMessage":"Sent message=[com.aslan.kafka.model.DataModel@3bc86eed] with offset=[8]","class":"com.aslan.kafka.controller.ApiController","thread":"kafka-producer-network-thread | producer-5","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:59:34.898Z","appMessage":"ApiController::producer(): End","class":"com.aslan.kafka.controller.ApiController","thread":"http-nio-8080-exec-2","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:59:34.898Z","appMessage":"Sent message=[com.aslan.kafka.model.DataModel@3bc86eed] with offset=[8]","class":"com.aslan.kafka.controller.ApiController","thread":"kafka-producer-network-thread | producer-5","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:59:34.900Z","appMessage":"Sent message=[com.aslan.kafka.model.DataModel@3bc86eed] with offset=[8]","class":"com.aslan.kafka.controller.ApiController","thread":"kafka-producer-network-thread | producer-5","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:59:34.901Z","appMessage":"Sent message=[com.aslan.kafka.model.DataModel@3bc86eed] with offset=[8]","class":"com.aslan.kafka.controller.ApiController","thread":"kafka-producer-network-thread | producer-5","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:59:34.902Z","appMessage":"Sent message=[com.aslan.kafka.model.DataModel@3bc86eed] with offset=[8]","class":"com.aslan.kafka.controller.ApiController","thread":"kafka-producer-network-thread | producer-5","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:59:34.903Z","appMessage":"Sent message=[com.aslan.kafka.model.DataModel@3bc86eed] with offset=[8]","class":"com.aslan.kafka.controller.ApiController","thread":"kafka-producer-network-thread | producer-5","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:59:34.904Z","appMessage":"Sent message=[com.aslan.kafka.model.DataModel@3bc86eed] with offset=[8]","class":"com.aslan.kafka.controller.ApiController","thread":"kafka-producer-network-thread | producer-5","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:59:34.905Z","appMessage":"Sent message=[com.aslan.kafka.model.DataModel@3bc86eed] with offset=[8]","class":"com.aslan.kafka.controller.ApiController","thread":"kafka-producer-network-thread | producer-5","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:59:34.905Z","appMessage":"Sent message=[com.aslan.kafka.model.DataModel@3bc86eed] with offset=[8]","class":"com.aslan.kafka.controller.ApiController","thread":"kafka-producer-network-thread | producer-5","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:59:34.923Z","appMessage":"KafkaConsumer::consume(customer-topic-1):Consumed JSON Message: message. Message: message-1","class":"com.aslan.kafka.service.KafkaConsumer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:59:34.924Z","appMessage":"KafkaConsumer::consume(customer-topic-1):Consumed JSON Message: message. Message: message-2","class":"com.aslan.kafka.service.KafkaConsumer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:59:34.924Z","appMessage":"KafkaConsumer::consume(customer-topic-1):Consumed JSON Message: message. Message: message-3","class":"com.aslan.kafka.service.KafkaConsumer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:59:34.925Z","appMessage":"KafkaConsumer::consume(customer-topic-1):Consumed JSON Message: message. Message: message-4","class":"com.aslan.kafka.service.KafkaConsumer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:59:34.925Z","appMessage":"KafkaConsumer::consume(customer-topic-1):Consumed JSON Message: message. Message: message-5","class":"com.aslan.kafka.service.KafkaConsumer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:59:34.926Z","appMessage":"KafkaConsumer::consume(customer-topic-1):Consumed JSON Message: message. Message: message-6","class":"com.aslan.kafka.service.KafkaConsumer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:59:34.926Z","appMessage":"KafkaConsumer::consume(customer-topic-1):Consumed JSON Message: message. Message: message-7","class":"com.aslan.kafka.service.KafkaConsumer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:59:34.927Z","appMessage":"KafkaConsumer::consume(customer-topic-1):Consumed JSON Message: message. Message: message-8","class":"com.aslan.kafka.service.KafkaConsumer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T05:59:34.927Z","appMessage":"KafkaConsumer::consume(customer-topic-1):Consumed JSON Message: message. Message: message-9","class":"com.aslan.kafka.service.KafkaConsumer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T06:00:24.229Z","appMessage":"KafkaConsumer::consume(customer-topic-2): Consumed message: tete","class":"com.aslan.kafka.service.KafkaConsumer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T06:00:29.769Z","appMessage":"KafkaConsumer::consume(customer-topic-2): Consumed message: cooley","class":"com.aslan.kafka.service.KafkaConsumer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T06:00:58.344Z","appMessage":"[Consumer clientId=consumer-group_json-19, groupId=group_json] Revoke previously assigned partitions customer-topic-1-0, customer-topic-1-1, customer-topic-1-2, customer-topic-1-3, customer-topic-1-4, customer-topic-1-5, customer-topic-1-6, customer-topic-1-7, customer-topic-1-8, customer-topic-1-9","class":"org.apache.kafka.clients.consumer.internals.ConsumerCoordinator","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T06:00:58.343Z","appMessage":"[Consumer clientId=consumer-group_id-18, groupId=group_id] Revoke previously assigned partitions customer-topic-2-0","class":"org.apache.kafka.clients.consumer.internals.ConsumerCoordinator","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T06:00:58.344Z","appMessage":"group_json: partitions revoked: [customer-topic-1-0, customer-topic-1-1, customer-topic-1-2, customer-topic-1-3, customer-topic-1-4, customer-topic-1-5, customer-topic-1-6, customer-topic-1-7, customer-topic-1-8, customer-topic-1-9]","class":"org.springframework.kafka.listener.KafkaMessageListenerContainer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T06:00:58.345Z","appMessage":"group_id: partitions revoked: [customer-topic-2-0]","class":"org.springframework.kafka.listener.KafkaMessageListenerContainer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T06:00:58.345Z","appMessage":"[Consumer clientId=consumer-group_json-19, groupId=group_json] Member consumer-group_json-19-0c314666-695f-4d6e-aa3a-b970a4406412 sending LeaveGroup request to coordinator Officeroom:9092 (id: 2147483647 rack: null) due to the consumer unsubscribed from all topics","class":"org.apache.kafka.clients.consumer.internals.AbstractCoordinator","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T06:00:58.346Z","appMessage":"[Consumer clientId=consumer-group_id-18, groupId=group_id] Member consumer-group_id-18-d2fda776-6afa-4d97-8448-1a1ac39c74ba sending LeaveGroup request to coordinator Officeroom:9092 (id: 2147483647 rack: null) due to the consumer unsubscribed from all topics","class":"org.apache.kafka.clients.consumer.internals.AbstractCoordinator","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T06:00:58.346Z","appMessage":"[Consumer clientId=consumer-group_json-19, groupId=group_json] Unsubscribed all topics or patterns and assigned partitions","class":"org.apache.kafka.clients.consumer.KafkaConsumer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T06:00:58.347Z","appMessage":"[Consumer clientId=consumer-group_id-18, groupId=group_id] Unsubscribed all topics or patterns and assigned partitions","class":"org.apache.kafka.clients.consumer.KafkaConsumer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T06:00:58.352Z","appMessage":"Metrics scheduler closed","class":"org.apache.kafka.common.metrics.Metrics","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T06:00:58.352Z","appMessage":"Metrics scheduler closed","class":"org.apache.kafka.common.metrics.Metrics","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T06:00:58.353Z","appMessage":"Closing reporter org.apache.kafka.common.metrics.JmxReporter","class":"org.apache.kafka.common.metrics.Metrics","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T06:00:58.353Z","appMessage":"Closing reporter org.apache.kafka.common.metrics.JmxReporter","class":"org.apache.kafka.common.metrics.Metrics","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T06:00:58.353Z","appMessage":"Metrics reporters closed","class":"org.apache.kafka.common.metrics.Metrics","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T06:00:58.354Z","appMessage":"Metrics reporters closed","class":"org.apache.kafka.common.metrics.Metrics","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T06:00:58.359Z","appMessage":"App info kafka.consumer for consumer-group_id-18 unregistered","class":"org.apache.kafka.common.utils.AppInfoParser","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T06:00:58.359Z","appMessage":"group_id: Consumer stopped","class":"org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T06:00:58.359Z","appMessage":"App info kafka.consumer for consumer-group_json-19 unregistered","class":"org.apache.kafka.common.utils.AppInfoParser","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T06:00:58.360Z","appMessage":"group_json: Consumer stopped","class":"org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer","thread":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T06:00:58.361Z","appMessage":"[Producer clientId=producer-5] Closing the Kafka producer with timeoutMillis = 30000 ms.","class":"org.apache.kafka.clients.producer.KafkaProducer","thread":"SpringApplicationShutdownHook","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T06:00:58.363Z","appMessage":"Metrics scheduler closed","class":"org.apache.kafka.common.metrics.Metrics","thread":"SpringApplicationShutdownHook","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T06:00:58.364Z","appMessage":"Closing reporter org.apache.kafka.common.metrics.JmxReporter","class":"org.apache.kafka.common.metrics.Metrics","thread":"SpringApplicationShutdownHook","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T06:00:58.364Z","appMessage":"Metrics reporters closed","class":"org.apache.kafka.common.metrics.Metrics","thread":"SpringApplicationShutdownHook","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
{"timestamp":"2021-07-23T06:00:58.365Z","appMessage":"App info kafka.producer for producer-5 unregistered","class":"org.apache.kafka.common.utils.AppInfoParser","thread":"SpringApplicationShutdownHook","level":"INFO","appName":"sb-aslan-kafka-template","appCode":"RRRR"}
